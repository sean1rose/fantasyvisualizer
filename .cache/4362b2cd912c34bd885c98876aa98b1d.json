{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":11,"column":31}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":15,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":19,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":23,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":27,"column":25}},{"name":"react","loc":{"line":31,"column":21}},{"name":"rc-cascader","loc":{"line":35,"column":26}},{"name":"array-tree-filter","loc":{"line":39,"column":31}},{"name":"classnames","loc":{"line":43,"column":26}},{"name":"omit.js","loc":{"line":47,"column":20}},{"name":"rc-util/lib/KeyCode","loc":{"line":51,"column":23}},{"name":"../input","loc":{"line":55,"column":21}},{"name":"../icon","loc":{"line":59,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rcCascader = require('rc-cascader');\n\nvar _rcCascader2 = _interopRequireDefault(_rcCascader);\n\nvar _arrayTreeFilter = require('array-tree-filter');\n\nvar _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _omit = require('omit.js');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _KeyCode = require('rc-util/lib/KeyCode');\n\nvar _KeyCode2 = _interopRequireDefault(_KeyCode);\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _icon = require('../icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\n\nfunction highlightKeyword(str, keyword, prefixCls) {\n    return str.split(keyword).map(function (node, index) {\n        return index === 0 ? node : [React.createElement(\n            'span',\n            { className: prefixCls + '-menu-item-keyword', key: 'seperator' },\n            keyword\n        ), node];\n    });\n}\nfunction defaultFilterOption(inputValue, path) {\n    return path.some(function (option) {\n        return option.label.indexOf(inputValue) > -1;\n    });\n}\nfunction defaultRenderFilteredOption(inputValue, path, prefixCls) {\n    return path.map(function (_ref, index) {\n        var label = _ref.label;\n\n        var node = label.indexOf(inputValue) > -1 ? highlightKeyword(label, inputValue, prefixCls) : label;\n        return index === 0 ? node : [' / ', node];\n    });\n}\nfunction defaultSortFilteredOption(a, b, inputValue) {\n    function callback(elem) {\n        return elem.label.indexOf(inputValue) > -1;\n    }\n    return a.findIndex(callback) - b.findIndex(callback);\n}\nvar defaultDisplayRender = function defaultDisplayRender(label) {\n    return label.join(' / ');\n};\n\nvar Cascader = function (_React$Component) {\n    (0, _inherits3['default'])(Cascader, _React$Component);\n\n    function Cascader(props) {\n        (0, _classCallCheck3['default'])(this, Cascader);\n\n        var _this = (0, _possibleConstructorReturn3['default'])(this, (Cascader.__proto__ || Object.getPrototypeOf(Cascader)).call(this, props));\n\n        _this.handleChange = function (value, selectedOptions) {\n            _this.setState({ inputValue: '' });\n            if (selectedOptions[0].__IS_FILTERED_OPTION) {\n                var unwrappedValue = value[0];\n                var unwrappedSelectedOptions = selectedOptions[0].path;\n                _this.setValue(unwrappedValue, unwrappedSelectedOptions);\n                return;\n            }\n            _this.setValue(value, selectedOptions);\n        };\n        _this.handlePopupVisibleChange = function (popupVisible) {\n            if (!('popupVisible' in _this.props)) {\n                _this.setState({\n                    popupVisible: popupVisible,\n                    inputFocused: popupVisible,\n                    inputValue: popupVisible ? _this.state.inputValue : ''\n                });\n            }\n            var onPopupVisibleChange = _this.props.onPopupVisibleChange;\n            if (onPopupVisibleChange) {\n                onPopupVisibleChange(popupVisible);\n            }\n        };\n        _this.handleInputBlur = function () {\n            _this.setState({\n                inputFocused: false\n            });\n        };\n        _this.handleInputClick = function (e) {\n            var _this$state = _this.state,\n                inputFocused = _this$state.inputFocused,\n                popupVisible = _this$state.popupVisible;\n            // Prevent `Trigger` behaviour.\n\n            if (inputFocused || popupVisible) {\n                e.stopPropagation();\n                e.nativeEvent.stopImmediatePropagation();\n            }\n        };\n        _this.handleKeyDown = function (e) {\n            if (e.keyCode === _KeyCode2['default'].BACKSPACE) {\n                e.stopPropagation();\n            }\n        };\n        _this.handleInputChange = function (e) {\n            var inputValue = e.target.value;\n            _this.setState({ inputValue: inputValue });\n        };\n        _this.setValue = function (value) {\n            var selectedOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            if (!('value' in _this.props)) {\n                _this.setState({ value: value });\n            }\n            var onChange = _this.props.onChange;\n            if (onChange) {\n                onChange(value, selectedOptions);\n            }\n        };\n        _this.clearSelection = function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (!_this.state.inputValue) {\n                _this.setValue([]);\n                _this.handlePopupVisibleChange(false);\n            } else {\n                _this.setState({ inputValue: '' });\n            }\n        };\n        _this.saveInput = function (node) {\n            _this.input = node;\n        };\n        _this.state = {\n            value: props.value || props.defaultValue || [],\n            inputValue: '',\n            inputFocused: false,\n            popupVisible: props.popupVisible,\n            flattenOptions: props.showSearch && _this.flattenTree(props.options, props.changeOnSelect)\n        };\n        return _this;\n    }\n\n    (0, _createClass3['default'])(Cascader, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if ('value' in nextProps) {\n                this.setState({ value: nextProps.value || [] });\n            }\n            if ('popupVisible' in nextProps) {\n                this.setState({ popupVisible: nextProps.popupVisible });\n            }\n            if (nextProps.showSearch && this.props.options !== nextProps.options) {\n                this.setState({ flattenOptions: this.flattenTree(nextProps.options, nextProps.changeOnSelect) });\n            }\n        }\n    }, {\n        key: 'getLabel',\n        value: function getLabel() {\n            var _props = this.props,\n                options = _props.options,\n                _props$displayRender = _props.displayRender,\n                displayRender = _props$displayRender === undefined ? defaultDisplayRender : _props$displayRender;\n\n            var value = this.state.value;\n            var unwrappedValue = Array.isArray(value[0]) ? value[0] : value;\n            var selectedOptions = (0, _arrayTreeFilter2['default'])(options, function (o, level) {\n                return o.value === unwrappedValue[level];\n            });\n            var label = selectedOptions.map(function (o) {\n                return o.label;\n            });\n            return displayRender(label, selectedOptions);\n        }\n    }, {\n        key: 'flattenTree',\n        value: function flattenTree(options, changeOnSelect) {\n            var _this2 = this;\n\n            var ancestor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            var flattenOptions = [];\n            options.forEach(function (option) {\n                var path = ancestor.concat(option);\n                if (changeOnSelect || !option.children || !option.children.length) {\n                    flattenOptions.push(path);\n                }\n                if (option.children) {\n                    flattenOptions = flattenOptions.concat(_this2.flattenTree(option.children, changeOnSelect, path));\n                }\n            });\n            return flattenOptions;\n        }\n    }, {\n        key: 'generateFilteredOptions',\n        value: function generateFilteredOptions(prefixCls) {\n            var _this3 = this;\n\n            var _props2 = this.props,\n                showSearch = _props2.showSearch,\n                notFoundContent = _props2.notFoundContent;\n            var _showSearch$filter = showSearch.filter,\n                filter = _showSearch$filter === undefined ? defaultFilterOption : _showSearch$filter,\n                _showSearch$render = showSearch.render,\n                render = _showSearch$render === undefined ? defaultRenderFilteredOption : _showSearch$render,\n                _showSearch$sort = showSearch.sort,\n                sort = _showSearch$sort === undefined ? defaultSortFilteredOption : _showSearch$sort;\n            var _state = this.state,\n                flattenOptions = _state.flattenOptions,\n                inputValue = _state.inputValue;\n\n            var filtered = flattenOptions.filter(function (path) {\n                return filter(_this3.state.inputValue, path);\n            }).sort(function (a, b) {\n                return sort(a, b, inputValue);\n            });\n            if (filtered.length > 0) {\n                return filtered.map(function (path) {\n                    return {\n                        __IS_FILTERED_OPTION: true,\n                        path: path,\n                        label: render(inputValue, path, prefixCls),\n                        value: path.map(function (o) {\n                            return o.value;\n                        }),\n                        disabled: path.some(function (o) {\n                            return o.disabled;\n                        })\n                    };\n                });\n            }\n            return [{ label: notFoundContent, value: 'ANT_CASCADER_NOT_FOUND', disabled: true }];\n        }\n    }, {\n        key: 'focus',\n        value: function focus() {\n            this.input.focus();\n        }\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.input.blur();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _classNames, _classNames2, _classNames3;\n\n            var props = this.props,\n                state = this.state;\n\n            var prefixCls = props.prefixCls,\n                inputPrefixCls = props.inputPrefixCls,\n                children = props.children,\n                placeholder = props.placeholder,\n                size = props.size,\n                disabled = props.disabled,\n                className = props.className,\n                style = props.style,\n                allowClear = props.allowClear,\n                _props$showSearch = props.showSearch,\n                showSearch = _props$showSearch === undefined ? false : _props$showSearch,\n                otherProps = __rest(props, [\"prefixCls\", \"inputPrefixCls\", \"children\", \"placeholder\", \"size\", \"disabled\", \"className\", \"style\", \"allowClear\", \"showSearch\"]);\n\n            var value = state.value;\n            var sizeCls = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, inputPrefixCls + '-lg', size === 'large'), (0, _defineProperty3['default'])(_classNames, inputPrefixCls + '-sm', size === 'small'), _classNames));\n            var clearIcon = allowClear && !disabled && value.length > 0 || state.inputValue ? React.createElement(_icon2['default'], { type: 'cross-circle', className: prefixCls + '-picker-clear', onClick: this.clearSelection }) : null;\n            var arrowCls = (0, _classnames2['default'])((_classNames2 = {}, (0, _defineProperty3['default'])(_classNames2, prefixCls + '-picker-arrow', true), (0, _defineProperty3['default'])(_classNames2, prefixCls + '-picker-arrow-expand', state.popupVisible), _classNames2));\n            var pickerCls = (0, _classnames2['default'])(className, prefixCls + '-picker', (_classNames3 = {}, (0, _defineProperty3['default'])(_classNames3, prefixCls + '-picker-with-value', state.inputValue), (0, _defineProperty3['default'])(_classNames3, prefixCls + '-picker-disabled', disabled), (0, _defineProperty3['default'])(_classNames3, prefixCls + '-picker-' + size, !!size), _classNames3));\n            // Fix bug of https://github.com/facebook/react/pull/5004\n            // and https://fb.me/react-unknown-prop\n            var inputProps = (0, _omit2['default'])(otherProps, ['onChange', 'options', 'popupPlacement', 'transitionName', 'displayRender', 'onPopupVisibleChange', 'changeOnSelect', 'expandTrigger', 'popupVisible', 'getPopupContainer', 'loadData', 'popupClassName', 'filterOption', 'renderFilteredOption', 'sortFilteredOption', 'notFoundContent']);\n            var options = props.options;\n            if (state.inputValue) {\n                options = this.generateFilteredOptions(prefixCls);\n            }\n            // Dropdown menu should keep previous status until it is fully closed.\n            if (!state.popupVisible) {\n                options = this.cachedOptions;\n            } else {\n                this.cachedOptions = options;\n            }\n            var dropdownMenuColumnStyle = {};\n            var isNotFound = (options || []).length === 1 && options[0].value === 'ANT_CASCADER_NOT_FOUND';\n            if (isNotFound) {\n                dropdownMenuColumnStyle.height = 'auto'; // Height of one row.\n            }\n            // The default value of `matchInputWidth` is `true`\n            var resultListMatchInputWidth = showSearch.matchInputWidth === false ? false : true;\n            if (resultListMatchInputWidth && state.inputValue && this.input) {\n                dropdownMenuColumnStyle.width = this.input.input.offsetWidth;\n            }\n            var input = children || React.createElement(\n                'span',\n                { style: style, className: pickerCls },\n                React.createElement(\n                    'span',\n                    { className: prefixCls + '-picker-label' },\n                    this.getLabel()\n                ),\n                React.createElement(_input2['default'], (0, _extends3['default'])({}, inputProps, { ref: this.saveInput, prefixCls: inputPrefixCls, placeholder: value && value.length > 0 ? undefined : placeholder, className: prefixCls + '-input ' + sizeCls, value: state.inputValue, disabled: disabled, readOnly: !showSearch, autoComplete: 'off', onClick: showSearch ? this.handleInputClick : undefined, onBlur: showSearch ? this.handleInputBlur : undefined, onKeyDown: this.handleKeyDown, onChange: showSearch ? this.handleInputChange : undefined })),\n                clearIcon,\n                React.createElement(_icon2['default'], { type: 'down', className: arrowCls })\n            );\n            return React.createElement(\n                _rcCascader2['default'],\n                (0, _extends3['default'])({}, props, { options: options, value: value, popupVisible: state.popupVisible, onPopupVisibleChange: this.handlePopupVisibleChange, onChange: this.handleChange, dropdownMenuColumnStyle: dropdownMenuColumnStyle }),\n                input\n            );\n        }\n    }]);\n    return Cascader;\n}(React.Component);\n\nexports['default'] = Cascader;\n\nCascader.defaultProps = {\n    prefixCls: 'ant-cascader',\n    inputPrefixCls: 'ant-input',\n    placeholder: 'Please select',\n    transitionName: 'slide-up',\n    popupPlacement: 'bottomLeft',\n    options: [],\n    disabled: false,\n    allowClear: true,\n    notFoundContent: 'Not Found'\n};\nmodule.exports = exports['default'];"},"hash":"0bec4835119ba131aaf3ce740ac4d8b2"}