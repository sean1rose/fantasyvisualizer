{"dependencies":[{"name":"react","loc":{"line":16,"column":21}},{"name":"prop-types","loc":{"line":20,"column":25}},{"name":"classnames","loc":{"line":24,"column":26}},{"name":"react-smooth","loc":{"line":28,"column":27}},{"name":"../util/PureRender","loc":{"line":32,"column":26}},{"name":"../util/ReactUtils","loc":{"line":36,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp2; /**\n                              * @fileOverview Rectangle\n                              */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactSmooth = require('react-smooth');\n\nvar _reactSmooth2 = _interopRequireDefault(_reactSmooth);\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar getRectangePath = function getRectangePath(x, y, width, height, radius) {\n  var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);\n  var sign = height >= 0 ? 1 : -1;\n  var clockWise = height >= 0 ? 1 : 0;\n  var path = void 0;\n\n  if (maxRadius > 0 && radius instanceof Array) {\n    var newRadius = [];\n    for (var i = 0, len = 4; i < len; i++) {\n      newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];\n    }\n\n    path = 'M' + x + ',' + (y + sign * newRadius[0]);\n\n    if (newRadius[0] > 0) {\n      path += 'A ' + newRadius[0] + ',' + newRadius[0] + ',0,0,' + clockWise + ',' + (x + newRadius[0]) + ',' + y;\n    }\n\n    path += 'L ' + (x + width - newRadius[1]) + ',' + y;\n\n    if (newRadius[1] > 0) {\n      path += 'A ' + newRadius[1] + ',' + newRadius[1] + ',0,0,' + clockWise + ',\\n        ' + (x + width) + ',' + (y + sign * newRadius[1]);\n    }\n    path += 'L ' + (x + width) + ',' + (y + height - sign * newRadius[2]);\n\n    if (newRadius[2] > 0) {\n      path += 'A ' + newRadius[2] + ',' + newRadius[2] + ',0,0,' + clockWise + ',\\n        ' + (x + width - newRadius[2]) + ',' + (y + height);\n    }\n    path += 'L ' + (x + newRadius[3]) + ',' + (y + height);\n\n    if (newRadius[3] > 0) {\n      path += 'A ' + newRadius[3] + ',' + newRadius[3] + ',0,0,' + clockWise + ',\\n        ' + x + ',' + (y + height - sign * newRadius[3]);\n    }\n    path += 'Z';\n  } else if (maxRadius > 0 && radius === +radius && radius > 0) {\n    var _newRadius = Math.min(maxRadius, radius);\n\n    path = 'M ' + x + ',' + (y + sign * _newRadius) + '\\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + (x + _newRadius) + ',' + y + '\\n            L ' + (x + width - _newRadius) + ',' + y + '\\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + (x + width) + ',' + (y + sign * _newRadius) + '\\n            L ' + (x + width) + ',' + (y + height - sign * _newRadius) + '\\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + (x + width - _newRadius) + ',' + (y + height) + '\\n            L ' + (x + _newRadius) + ',' + (y + height) + '\\n            A ' + _newRadius + ',' + _newRadius + ',0,0,' + clockWise + ',' + x + ',' + (y + height - sign * _newRadius) + ' Z';\n  } else {\n    path = 'M ' + x + ',' + y + ' h ' + width + ' v ' + height + ' h ' + -width + ' Z';\n  }\n\n  return path;\n};\n\nvar Rectangle = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {\n  _inherits(Rectangle, _Component);\n\n  function Rectangle() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Rectangle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Rectangle.__proto__ || Object.getPrototypeOf(Rectangle)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      totalLength: -1\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Rectangle, [{\n    key: 'componentDidMount',\n\n\n    /* eslint-disable  react/no-did-mount-set-state */\n    value: function componentDidMount() {\n      if (this.node && this.node.getTotalLength) {\n        try {\n          var totalLength = this.node.getTotalLength();\n\n          if (totalLength) {\n            this.setState({\n              totalLength: totalLength\n            });\n          }\n        } catch (err) {\n          // calculate total length error\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          x = _props.x,\n          y = _props.y,\n          width = _props.width,\n          height = _props.height,\n          radius = _props.radius,\n          className = _props.className;\n      var totalLength = this.state.totalLength;\n      var _props2 = this.props,\n          animationEasing = _props2.animationEasing,\n          animationDuration = _props2.animationDuration,\n          animationBegin = _props2.animationBegin,\n          isAnimationActive = _props2.isAnimationActive,\n          isUpdateAnimationActive = _props2.isUpdateAnimationActive;\n\n\n      if (x !== +x || y !== +y || width !== +width || height !== +height || width === 0 || height === 0) {\n        return null;\n      }\n\n      var layerClass = (0, _classnames2.default)('recharts-rectangle', className);\n\n      if (!isUpdateAnimationActive) {\n        return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {\n          className: layerClass,\n          d: getRectangePath(x, y, width, height, radius)\n        }));\n      }\n\n      return _react2.default.createElement(\n        _reactSmooth2.default,\n        {\n          canBegin: totalLength > 0,\n          from: { width: width, height: height, x: x, y: y },\n          to: { width: width, height: height, x: x, y: y },\n          duration: animationDuration,\n          animationEasing: animationEasing,\n          isActive: isUpdateAnimationActive\n        },\n        function (_ref2) {\n          var currWidth = _ref2.width,\n              currHeight = _ref2.height,\n              currX = _ref2.x,\n              currY = _ref2.y;\n          return _react2.default.createElement(\n            _reactSmooth2.default,\n            {\n              canBegin: totalLength > 0,\n              from: '0px ' + (totalLength === -1 ? 1 : totalLength) + 'px',\n              to: totalLength + 'px 0px',\n              attributeName: 'strokeDasharray',\n              begin: animationBegin,\n              duration: animationDuration,\n              isActive: isAnimationActive,\n              easing: animationEasing\n            },\n            _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(_this2.props), (0, _ReactUtils.filterEventAttributes)(_this2.props), {\n              className: layerClass,\n              d: getRectangePath(currX, currY, currWidth, currHeight, radius),\n              ref: function ref(node) {\n                _this2.node = node;\n              }\n            }))\n          );\n        }\n      );\n    }\n  }]);\n\n  return Rectangle;\n}(_react.Component), _class2.displayName = 'Rectangle', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {\n  className: _propTypes2.default.string,\n  x: _propTypes2.default.number,\n  y: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  radius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array]),\n  isAnimationActive: _propTypes2.default.bool,\n  isUpdateAnimationActive: _propTypes2.default.bool,\n  animationBegin: _propTypes2.default.number,\n  animationDuration: _propTypes2.default.number,\n  animationEasing: _propTypes2.default.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])\n}), _class2.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  // The radius of border\n  // The radius of four corners when radius is a number\n  // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array\n  radius: 0,\n  isAnimationActive: false,\n  isUpdateAnimationActive: false,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease'\n}, _temp2)) || _class;\n\nexports.default = Rectangle;"},"hash":"55677da62049c2f5f7a5c80a966d68a2"}