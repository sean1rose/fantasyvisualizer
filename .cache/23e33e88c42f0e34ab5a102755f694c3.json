{"dependencies":[{"name":"react","loc":{"line":16,"column":21}},{"name":"prop-types","loc":{"line":20,"column":25}},{"name":"../container/Layer","loc":{"line":24,"column":21}},{"name":"../util/ReactUtils","loc":{"line":28,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp; /**\n                    * @fileOverview Render a group of error bar\n                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Layer = require('../container/Layer');\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ErrorBar = (_temp = _class = function (_Component) {\n  _inherits(ErrorBar, _Component);\n\n  function ErrorBar() {\n    _classCallCheck(this, ErrorBar);\n\n    return _possibleConstructorReturn(this, (ErrorBar.__proto__ || Object.getPrototypeOf(ErrorBar)).apply(this, arguments));\n  }\n\n  _createClass(ErrorBar, [{\n    key: 'renderErrorBars',\n    value: function renderErrorBars() {\n      var _props = this.props,\n          offset = _props.offset,\n          layout = _props.layout,\n          width = _props.width,\n          dataKey = _props.dataKey,\n          data = _props.data,\n          dataPointFormatter = _props.dataPointFormatter,\n          xAxis = _props.xAxis,\n          yAxis = _props.yAxis,\n          others = _objectWithoutProperties(_props, ['offset', 'layout', 'width', 'dataKey', 'data', 'dataPointFormatter', 'xAxis', 'yAxis']);\n\n      var props = (0, _ReactUtils.getPresentationAttributes)(others);\n\n      return data.map(function (entry, i) {\n        var _dataPointFormatter = dataPointFormatter(entry, dataKey),\n            x = _dataPointFormatter.x,\n            y = _dataPointFormatter.y,\n            value = _dataPointFormatter.value,\n            errorVal = _dataPointFormatter.errorVal;\n\n        if (!errorVal) {\n          return null;\n        }\n\n        var xMid = void 0,\n            yMid = void 0,\n            xMin = void 0,\n            yMin = void 0,\n            xMax = void 0,\n            yMax = void 0,\n            scale = void 0,\n            coordsTop = void 0,\n            coordsMid = void 0,\n            coordsBot = void 0,\n            lowBound = void 0,\n            highBound = void 0;\n\n        if (Array.isArray(errorVal)) {\n          lowBound = errorVal[0];\n          highBound = errorVal[1];\n        } else {\n          lowBound = errorVal;\n          highBound = errorVal;\n        }\n\n        if (layout === 'vertical') {\n          scale = xAxis.scale;\n          xMid = value;\n          yMid = y + offset;\n          xMin = scale(xMid - lowBound);\n          yMin = yMid + width;\n          xMax = scale(xMid + highBound);\n          yMax = yMid - width;\n          coordsTop = { x1: xMax, y1: yMin, x2: xMax, y2: yMax };\n          coordsMid = { x1: xMin, y1: yMid, x2: xMax, y2: yMid };\n          coordsBot = { x1: xMin, y1: yMin, x2: xMin, y2: yMax };\n        } else if (layout === 'horizontal') {\n          scale = yAxis.scale;\n          xMid = x + offset;\n          yMid = value;\n          xMin = xMid - width;\n          xMax = xMid + width;\n          yMin = scale(yMid - lowBound);\n          yMax = scale(yMid + highBound);\n          coordsTop = { x1: xMin, y1: yMax, x2: xMax, y2: yMax };\n          coordsMid = { x1: xMid, y1: yMin, x2: xMid, y2: yMax };\n          coordsBot = { x1: xMin, y1: yMin, x2: xMax, y2: yMin };\n        }\n\n        return _react2.default.createElement(\n          _Layer2.default,\n          _extends({ className: 'recharts-errorBar', key: i }, props),\n          _react2.default.createElement('line', coordsTop),\n          _react2.default.createElement('line', coordsMid),\n          _react2.default.createElement('line', coordsBot)\n        );\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: 'recharts-errorBars' },\n        this.renderErrorBars()\n      );\n    }\n  }]);\n\n  return ErrorBar;\n}(_react.Component), _class.propTypes = {\n  dataKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  data: _propTypes2.default.array,\n  xAxis: _propTypes2.default.object,\n  yAxis: _propTypes2.default.object,\n  layout: _propTypes2.default.string,\n  dataPointFormatter: _propTypes2.default.func,\n  stroke: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  offset: _propTypes2.default.number\n}, _class.defaultProps = {\n  stroke: 'black',\n  strokeWidth: 1.5,\n  width: 5,\n  offset: 0,\n  layout: 'horizontal'\n}, _temp);\nexports.default = ErrorBar;"},"hash":"fbf96c3d7572c70c17c8f95e48e5eb80"}