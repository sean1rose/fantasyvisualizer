{"dependencies":[{"name":"react","loc":{"line":5,"column":21}},{"name":"../../../lib/charts/bar","loc":{"line":9,"column":19}},{"name":"../../../lib/canvas/axes","loc":{"line":11,"column":20}},{"name":"../../../lib/interactivity","loc":{"line":13,"column":29}},{"name":"../Container","loc":{"line":15,"column":25}},{"name":"../../tooltip/BasicTooltip","loc":{"line":19,"column":28}},{"name":"./props","loc":{"line":23,"column":22}},{"name":"./enhance","loc":{"line":25,"column":23}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bar = require('../../../lib/charts/bar');\n\nvar _axes = require('../../../lib/canvas/axes');\n\nvar _interactivity = require('../../../lib/interactivity');\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _BasicTooltip = require('../../tooltip/BasicTooltip');\n\nvar _BasicTooltip2 = _interopRequireDefault(_BasicTooltip);\n\nvar _props2 = require('./props');\n\nvar _enhance = require('./enhance');\n\nvar _enhance2 = _interopRequireDefault(_enhance);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar findNodeUnderCursor = function findNodeUnderCursor(nodes, margin, x, y) {\n    return nodes.find(function (node) {\n        return (0, _interactivity.isCursorInRect)(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y);\n    });\n};\n\nvar BarCanvas = function (_Component) {\n    _inherits(BarCanvas, _Component);\n\n    function BarCanvas() {\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, BarCanvas);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleMouseHover = function (showTooltip, hideTooltip) {\n            return function (event) {\n                if (!_this.bars) return;\n\n                var _this$props = _this.props,\n                    margin = _this$props.margin,\n                    theme = _this$props.theme;\n\n                var _getRelativeCursor = (0, _interactivity.getRelativeCursor)(_this.surface, event),\n                    x = _getRelativeCursor[0],\n                    y = _getRelativeCursor[1];\n\n                var bar = findNodeUnderCursor(_this.bars, margin, x, y);\n\n                if (bar !== undefined) {\n                    showTooltip(_react2.default.createElement(_BasicTooltip2.default, {\n                        id: bar.data.id + ' - ' + bar.data.indexValue,\n                        value: bar.data.value,\n                        enableChip: true,\n                        color: bar.color,\n                        theme: theme\n                    }), event);\n                } else {\n                    hideTooltip();\n                }\n            };\n        }, _this.handleMouseLeave = function (hideTooltip) {\n            return function () {\n                hideTooltip();\n            };\n        }, _this.handleClick = function (event) {\n            if (!_this.bars) return;\n\n            var _this$props2 = _this.props,\n                margin = _this$props2.margin,\n                onClick = _this$props2.onClick;\n\n            var _getRelativeCursor2 = (0, _interactivity.getRelativeCursor)(_this.surface, event),\n                x = _getRelativeCursor2[0],\n                y = _getRelativeCursor2[1];\n\n            var node = findNodeUnderCursor(_this.bars, margin, x, y);\n            if (node !== undefined) onClick(node.data, event);\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    BarCanvas.prototype.componentDidMount = function componentDidMount() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    BarCanvas.prototype.shouldComponentUpdate = function shouldComponentUpdate(props) {\n        if (this.props.outerWidth !== props.outerWidth || this.props.outerHeight !== props.outerHeight || this.props.isInteractive !== props.isInteractive || this.props.theme !== props.theme) {\n            return true;\n        } else {\n            this.draw(props);\n            return false;\n        }\n    };\n\n    BarCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    BarCanvas.prototype.draw = function draw(props) {\n        var _this2 = this;\n\n        var data = props.data,\n            keys = props.keys,\n            getIndex = props.getIndex,\n            minValue = props.minValue,\n            maxValue = props.maxValue,\n            width = props.width,\n            height = props.height,\n            outerWidth = props.outerWidth,\n            outerHeight = props.outerHeight,\n            pixelRatio = props.pixelRatio,\n            margin = props.margin,\n            layout = props.layout,\n            reverse = props.reverse,\n            groupMode = props.groupMode,\n            padding = props.padding,\n            innerPadding = props.innerPadding,\n            axisTop = props.axisTop,\n            axisRight = props.axisRight,\n            axisBottom = props.axisBottom,\n            axisLeft = props.axisLeft,\n            getColor = props.getColor;\n\n\n        this.surface.width = outerWidth * pixelRatio;\n        this.surface.height = outerHeight * pixelRatio;\n\n        this.ctx.scale(pixelRatio, pixelRatio);\n\n        var options = {\n            layout: layout,\n            reverse: reverse,\n            data: data,\n            getIndex: getIndex,\n            keys: keys,\n            minValue: minValue,\n            maxValue: maxValue,\n            width: width,\n            height: height,\n            getColor: getColor,\n            padding: padding,\n            innerPadding: innerPadding\n        };\n\n        var result = groupMode === 'grouped' ? (0, _bar.generateGroupedBars)(options) : (0, _bar.generateStackedBars)(options);\n\n        this.bars = result.bars;\n\n        this.ctx.clearRect(0, 0, outerWidth, outerHeight);\n        this.ctx.translate(margin.left, margin.top);\n\n        (0, _axes.renderAxes)(this.ctx, {\n            xScale: result.xScale,\n            yScale: result.yScale,\n            width: width,\n            height: height,\n            top: axisTop,\n            right: axisRight,\n            bottom: axisBottom,\n            left: axisLeft\n        });\n\n        result.bars.forEach(function (_ref) {\n            var x = _ref.x,\n                y = _ref.y,\n                color = _ref.color,\n                width = _ref.width,\n                height = _ref.height;\n\n            _this2.ctx.fillStyle = color;\n            _this2.ctx.fillRect(x, y, width, height);\n        });\n    };\n\n    BarCanvas.prototype.render = function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            outerWidth = _props.outerWidth,\n            outerHeight = _props.outerHeight,\n            pixelRatio = _props.pixelRatio,\n            isInteractive = _props.isInteractive,\n            theme = _props.theme;\n\n\n        return _react2.default.createElement(\n            _Container2.default,\n            { isInteractive: isInteractive, theme: theme },\n            function (_ref2) {\n                var showTooltip = _ref2.showTooltip,\n                    hideTooltip = _ref2.hideTooltip;\n                return _react2.default.createElement('canvas', {\n                    ref: function ref(surface) {\n                        _this3.surface = surface;\n                    },\n                    width: outerWidth * pixelRatio,\n                    height: outerHeight * pixelRatio,\n                    style: {\n                        width: outerWidth,\n                        height: outerHeight\n                    },\n                    onMouseEnter: _this3.handleMouseHover(showTooltip, hideTooltip),\n                    onMouseMove: _this3.handleMouseHover(showTooltip, hideTooltip),\n                    onMouseLeave: _this3.handleMouseLeave(hideTooltip),\n                    onClick: _this3.handleClick\n                });\n            }\n        );\n    };\n\n    return BarCanvas;\n}(_react.Component);\n\nBarCanvas.propTypes = _props2.BarPropTypes;\n\nexports.default = (0, _enhance2.default)(BarCanvas);"},"hash":"f0fa8633436f267125ff566f39d58520"}