{"dependencies":[{"name":"draft-js","loc":{"line":6,"column":23}},{"name":"./getSearchWord","loc":{"line":8,"column":29}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports['default'] = insertMention;\n\nvar _draftJs = require('draft-js');\n\nvar _getSearchWord = require('./getSearchWord');\n\nvar _getSearchWord2 = _interopRequireDefault(_getSearchWord);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction insertMention(editorState, mention, data, mode) {\n  var entityMode = mode === 'immutable' ? 'IMMUTABLE' : 'MUTABLE';\n  var selection = editorState.getSelection();\n  var contentState = editorState.getCurrentContent();\n\n  contentState.createEntity('mention', entityMode, data || mention);\n  var searchWord = (0, _getSearchWord2['default'])(editorState, selection);\n  var begin = searchWord.begin,\n      end = searchWord.end;\n\n  var replacedContent = _draftJs.Modifier.replaceText(contentState, selection.merge({\n    anchorOffset: begin,\n    focusOffset: end\n  }), mention, null, contentState.getLastCreatedEntityKey());\n\n  var InsertSpaceContent = _draftJs.Modifier.insertText(replacedContent, replacedContent.getSelectionAfter(), ' ');\n\n  var newEditorState = _draftJs.EditorState.push(editorState, InsertSpaceContent, 'insert-mention');\n  return _draftJs.EditorState.forceSelection(newEditorState, InsertSpaceContent.getSelectionAfter());\n}\nmodule.exports = exports['default'];"},"hash":"ee04d3399c9af2fe45da86b0210b930c"}