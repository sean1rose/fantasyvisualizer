{"dependencies":[{"name":"prop-types","loc":{"line":6,"column":25}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.SelectPropTypes = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction valueType(props, propName, componentName) {\n  var basicType = _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]);\n\n  var labelInValueShape = _propTypes2['default'].shape({\n    key: basicType.isRequired,\n    label: _propTypes2['default'].node\n  });\n  if (props.labelInValue) {\n    var validate = _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(labelInValueShape), labelInValueShape]);\n    var error = validate.apply(undefined, arguments);\n    if (error) {\n      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`, ' + ('when you set `labelInValue` to `true`, `' + propName + '` should in ') + 'shape of `{ key: string | number, label?: ReactNode }`.');\n    }\n  } else if ((props.mode === 'multiple' || props.mode === 'tags' || props.multiple || props.tags) && props[propName] === '') {\n    return new Error('Invalid prop `' + propName + '` of type `string` supplied to `' + componentName + '`, ' + 'expected `array` when `multiple` or `tags` is `true`.');\n  } else {\n    var _validate = _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(basicType), basicType]);\n    return _validate.apply(undefined, arguments);\n  }\n}\n\nvar SelectPropTypes = exports.SelectPropTypes = {\n  defaultActiveFirstOption: _propTypes2['default'].bool,\n  multiple: _propTypes2['default'].bool,\n  filterOption: _propTypes2['default'].any,\n  children: _propTypes2['default'].any,\n  showSearch: _propTypes2['default'].bool,\n  disabled: _propTypes2['default'].bool,\n  allowClear: _propTypes2['default'].bool,\n  showArrow: _propTypes2['default'].bool,\n  tags: _propTypes2['default'].bool,\n  prefixCls: _propTypes2['default'].string,\n  className: _propTypes2['default'].string,\n  transitionName: _propTypes2['default'].string,\n  optionLabelProp: _propTypes2['default'].string,\n  optionFilterProp: _propTypes2['default'].string,\n  animation: _propTypes2['default'].string,\n  choiceTransitionName: _propTypes2['default'].string,\n  onChange: _propTypes2['default'].func,\n  onBlur: _propTypes2['default'].func,\n  onFocus: _propTypes2['default'].func,\n  onSelect: _propTypes2['default'].func,\n  onSearch: _propTypes2['default'].func,\n  onPopupScroll: _propTypes2['default'].func,\n  onMouseEnter: _propTypes2['default'].func,\n  onMouseLeave: _propTypes2['default'].func,\n  onInputKeyDown: _propTypes2['default'].func,\n  placeholder: _propTypes2['default'].any,\n  onDeselect: _propTypes2['default'].func,\n  labelInValue: _propTypes2['default'].bool,\n  value: valueType,\n  defaultValue: valueType,\n  dropdownStyle: _propTypes2['default'].object,\n  maxTagTextLength: _propTypes2['default'].number,\n  maxTagCount: _propTypes2['default'].number,\n  maxTagPlaceholder: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].func]),\n  tokenSeparators: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n  getInputElement: _propTypes2['default'].func,\n  showAction: _propTypes2['default'].arrayOf(_propTypes2['default'].string)\n};"},"hash":"a275373d2aef514a51166b0f4832e0a8"}