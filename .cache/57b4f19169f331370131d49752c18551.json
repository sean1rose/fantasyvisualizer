{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":5,"column":24}},{"name":"react","loc":{"line":9,"column":21}},{"name":"prop-types","loc":{"line":13,"column":25}},{"name":"create-react-class","loc":{"line":17,"column":32}},{"name":"rc-util/lib/KeyCode","loc":{"line":21,"column":23}},{"name":"classnames","loc":{"line":25,"column":26}},{"name":"./util","loc":{"line":29,"column":20}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _KeyCode = require('rc-util/lib/KeyCode');\n\nvar _KeyCode2 = _interopRequireDefault(_KeyCode);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/* eslint react/no-is-mounted:0 */\n\nvar MenuItem = (0, _createReactClass2['default'])({\n  displayName: 'MenuItem',\n\n  propTypes: {\n    rootPrefixCls: _propTypes2['default'].string,\n    eventKey: _propTypes2['default'].string,\n    active: _propTypes2['default'].bool,\n    children: _propTypes2['default'].any,\n    selectedKeys: _propTypes2['default'].array,\n    disabled: _propTypes2['default'].bool,\n    title: _propTypes2['default'].string,\n    onItemHover: _propTypes2['default'].func,\n    onSelect: _propTypes2['default'].func,\n    onClick: _propTypes2['default'].func,\n    onDeselect: _propTypes2['default'].func,\n    parentMenu: _propTypes2['default'].object,\n    onDestroy: _propTypes2['default'].func,\n    onMouseEnter: _propTypes2['default'].func,\n    onMouseLeave: _propTypes2['default'].func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      onSelect: _util.noop,\n      onMouseEnter: _util.noop,\n      onMouseLeave: _util.noop\n    };\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    var props = this.props;\n    if (props.onDestroy) {\n      props.onDestroy(props.eventKey);\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    var keyCode = e.keyCode;\n    if (keyCode === _KeyCode2['default'].ENTER) {\n      this.onClick(e);\n      return true;\n    }\n  },\n  onMouseLeave: function onMouseLeave(e) {\n    var _props = this.props,\n        eventKey = _props.eventKey,\n        onItemHover = _props.onItemHover,\n        onMouseLeave = _props.onMouseLeave;\n\n    onItemHover({\n      key: eventKey,\n      hover: false\n    });\n    onMouseLeave({\n      key: eventKey,\n      domEvent: e\n    });\n  },\n  onMouseEnter: function onMouseEnter(e) {\n    var _props2 = this.props,\n        eventKey = _props2.eventKey,\n        onItemHover = _props2.onItemHover,\n        onMouseEnter = _props2.onMouseEnter;\n\n    onItemHover({\n      key: eventKey,\n      hover: true\n    });\n    onMouseEnter({\n      key: eventKey,\n      domEvent: e\n    });\n  },\n  onClick: function onClick(e) {\n    var _props3 = this.props,\n        eventKey = _props3.eventKey,\n        multiple = _props3.multiple,\n        onClick = _props3.onClick,\n        onSelect = _props3.onSelect,\n        onDeselect = _props3.onDeselect;\n\n    var selected = this.isSelected();\n    var info = {\n      key: eventKey,\n      keyPath: [eventKey],\n      item: this,\n      domEvent: e\n    };\n    onClick(info);\n    if (multiple) {\n      if (selected) {\n        onDeselect(info);\n      } else {\n        onSelect(info);\n      }\n    } else if (!selected) {\n      onSelect(info);\n    }\n  },\n  getPrefixCls: function getPrefixCls() {\n    return this.props.rootPrefixCls + '-item';\n  },\n  getActiveClassName: function getActiveClassName() {\n    return this.getPrefixCls() + '-active';\n  },\n  getSelectedClassName: function getSelectedClassName() {\n    return this.getPrefixCls() + '-selected';\n  },\n  getDisabledClassName: function getDisabledClassName() {\n    return this.getPrefixCls() + '-disabled';\n  },\n  isSelected: function isSelected() {\n    return this.props.selectedKeys.indexOf(this.props.eventKey) !== -1;\n  },\n  render: function render() {\n    var _classNames;\n\n    var props = this.props;\n    var selected = this.isSelected();\n    var className = (0, _classnames2['default'])(this.getPrefixCls(), props.className, (_classNames = {}, _classNames[this.getActiveClassName()] = !props.disabled && props.active, _classNames[this.getSelectedClassName()] = selected, _classNames[this.getDisabledClassName()] = props.disabled, _classNames));\n    var attrs = (0, _extends3['default'])({}, props.attribute, {\n      title: props.title,\n      className: className,\n      role: 'menuitem',\n      'aria-selected': selected,\n      'aria-disabled': props.disabled\n    });\n    var mouseEvent = {};\n    if (!props.disabled) {\n      mouseEvent = {\n        onClick: this.onClick,\n        onMouseLeave: this.onMouseLeave,\n        onMouseEnter: this.onMouseEnter\n      };\n    }\n    var style = (0, _extends3['default'])({}, props.style);\n    if (props.mode === 'inline') {\n      style.paddingLeft = props.inlineIndent * props.level;\n    }\n    return _react2['default'].createElement(\n      'li',\n      (0, _extends3['default'])({}, attrs, mouseEvent, {\n        style: style\n      }),\n      props.children\n    );\n  }\n});\n\nMenuItem.isMenuItem = 1;\n\nexports['default'] = MenuItem;\nmodule.exports = exports['default'];"},"hash":"61d6bfc98fd495374f9f18cd2a945848"}