{"dependencies":[{"name":"babel-runtime/helpers/toConsumableArray","loc":{"line":7,"column":34}},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":11,"column":31}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":15,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":19,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":23,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":27,"column":25}},{"name":"react","loc":{"line":31,"column":21}},{"name":"prop-types","loc":{"line":35,"column":25}},{"name":"classnames","loc":{"line":39,"column":26}},{"name":"./list","loc":{"line":43,"column":20}},{"name":"./operation","loc":{"line":47,"column":25}},{"name":"./search","loc":{"line":51,"column":22}},{"name":"../locale-provider/LocaleReceiver","loc":{"line":55,"column":30}},{"name":"../locale-provider/default","loc":{"line":59,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _list = require('./list');\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _search = require('./search');\n\nvar _search2 = _interopRequireDefault(_search);\n\nvar _LocaleReceiver = require('../locale-provider/LocaleReceiver');\n\nvar _LocaleReceiver2 = _interopRequireDefault(_LocaleReceiver);\n\nvar _default = require('../locale-provider/default');\n\nvar _default2 = _interopRequireDefault(_default);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction noop() {}\n\nvar Transfer = function (_React$Component) {\n    (0, _inherits3['default'])(Transfer, _React$Component);\n\n    function Transfer(props) {\n        (0, _classCallCheck3['default'])(this, Transfer);\n\n        var _this = (0, _possibleConstructorReturn3['default'])(this, (Transfer.__proto__ || Object.getPrototypeOf(Transfer)).call(this, props));\n\n        _this.moveTo = function (direction) {\n            var _this$props = _this.props,\n                _this$props$targetKey = _this$props.targetKeys,\n                targetKeys = _this$props$targetKey === undefined ? [] : _this$props$targetKey,\n                _this$props$dataSourc = _this$props.dataSource,\n                dataSource = _this$props$dataSourc === undefined ? [] : _this$props$dataSourc,\n                onChange = _this$props.onChange;\n            var _this$state = _this.state,\n                sourceSelectedKeys = _this$state.sourceSelectedKeys,\n                targetSelectedKeys = _this$state.targetSelectedKeys;\n\n            var moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            var newMoveKeys = moveKeys.filter(function (key) {\n                return !dataSource.some(function (data) {\n                    return !!(key === data.key && data.disabled);\n                });\n            });\n            // move items to target box\n            var newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(function (targetKey) {\n                return newMoveKeys.indexOf(targetKey) === -1;\n            });\n            // empty checked keys\n            var oppositeDirection = direction === 'right' ? 'left' : 'right';\n            _this.setState((0, _defineProperty3['default'])({}, _this.getSelectedKeysName(oppositeDirection), []));\n            _this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        _this.moveToLeft = function () {\n            return _this.moveTo('left');\n        };\n        _this.moveToRight = function () {\n            return _this.moveTo('right');\n        };\n        _this.handleSelectAll = function (direction, filteredDataSource, checkAll) {\n            var originalSelectedKeys = _this.state[_this.getSelectedKeysName(direction)] || [];\n            var currentKeys = filteredDataSource.map(function (item) {\n                return item.key;\n            });\n            // Only operate current keys from original selected keys\n            var newKeys1 = originalSelectedKeys.filter(function (key) {\n                return currentKeys.indexOf(key) === -1;\n            });\n            var newKeys2 = [].concat((0, _toConsumableArray3['default'])(originalSelectedKeys));\n            currentKeys.forEach(function (key) {\n                if (newKeys2.indexOf(key) === -1) {\n                    newKeys2.push(key);\n                }\n            });\n            var holder = checkAll ? newKeys1 : newKeys2;\n            _this.handleSelectChange(direction, holder);\n            if (!_this.props.selectedKeys) {\n                _this.setState((0, _defineProperty3['default'])({}, _this.getSelectedKeysName(direction), holder));\n            }\n        };\n        _this.handleLeftSelectAll = function (filteredDataSource, checkAll) {\n            return _this.handleSelectAll('left', filteredDataSource, checkAll);\n        };\n        _this.handleRightSelectAll = function (filteredDataSource, checkAll) {\n            return _this.handleSelectAll('right', filteredDataSource, checkAll);\n        };\n        _this.handleFilter = function (direction, e) {\n            _this.setState((0, _defineProperty3['default'])({}, direction + 'Filter', e.target.value));\n            if (_this.props.onSearchChange) {\n                _this.props.onSearchChange(direction, e);\n            }\n        };\n        _this.handleLeftFilter = function (e) {\n            return _this.handleFilter('left', e);\n        };\n        _this.handleRightFilter = function (e) {\n            return _this.handleFilter('right', e);\n        };\n        _this.handleClear = function (direction) {\n            _this.setState((0, _defineProperty3['default'])({}, direction + 'Filter', ''));\n        };\n        _this.handleLeftClear = function () {\n            return _this.handleClear('left');\n        };\n        _this.handleRightClear = function () {\n            return _this.handleClear('right');\n        };\n        _this.handleSelect = function (direction, selectedItem, checked) {\n            var _this$state2 = _this.state,\n                sourceSelectedKeys = _this$state2.sourceSelectedKeys,\n                targetSelectedKeys = _this$state2.targetSelectedKeys;\n\n            var holder = direction === 'left' ? [].concat((0, _toConsumableArray3['default'])(sourceSelectedKeys)) : [].concat((0, _toConsumableArray3['default'])(targetSelectedKeys));\n            var index = holder.indexOf(selectedItem.key);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedItem.key);\n            }\n            _this.handleSelectChange(direction, holder);\n            if (!_this.props.selectedKeys) {\n                _this.setState((0, _defineProperty3['default'])({}, _this.getSelectedKeysName(direction), holder));\n            }\n        };\n        _this.handleLeftSelect = function (selectedItem, checked) {\n            return _this.handleSelect('left', selectedItem, checked);\n        };\n        _this.handleRightSelect = function (selectedItem, checked) {\n            return _this.handleSelect('right', selectedItem, checked);\n        };\n        _this.handleScroll = function (direction, e) {\n            var onScroll = _this.props.onScroll;\n\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        _this.handleLeftScroll = function (e) {\n            return _this.handleScroll('left', e);\n        };\n        _this.handleRightScroll = function (e) {\n            return _this.handleScroll('right', e);\n        };\n        _this.renderTransfer = function (locale) {\n            var _this$props2 = _this.props,\n                _this$props2$prefixCl = _this$props2.prefixCls,\n                prefixCls = _this$props2$prefixCl === undefined ? 'ant-transfer' : _this$props2$prefixCl,\n                className = _this$props2.className,\n                _this$props2$operatio = _this$props2.operations,\n                operations = _this$props2$operatio === undefined ? [] : _this$props2$operatio,\n                showSearch = _this$props2.showSearch,\n                notFoundContent = _this$props2.notFoundContent,\n                searchPlaceholder = _this$props2.searchPlaceholder,\n                body = _this$props2.body,\n                footer = _this$props2.footer,\n                listStyle = _this$props2.listStyle,\n                filterOption = _this$props2.filterOption,\n                render = _this$props2.render,\n                lazy = _this$props2.lazy;\n            var _this$state3 = _this.state,\n                leftFilter = _this$state3.leftFilter,\n                rightFilter = _this$state3.rightFilter,\n                sourceSelectedKeys = _this$state3.sourceSelectedKeys,\n                targetSelectedKeys = _this$state3.targetSelectedKeys;\n\n            var _this$splitDataSource = _this.splitDataSource(_this.props),\n                leftDataSource = _this$splitDataSource.leftDataSource,\n                rightDataSource = _this$splitDataSource.rightDataSource;\n\n            var leftActive = targetSelectedKeys.length > 0;\n            var rightActive = sourceSelectedKeys.length > 0;\n            var cls = (0, _classnames2['default'])(className, prefixCls);\n            var titles = _this.getTitles(locale);\n            return React.createElement(\n                'div',\n                { className: cls },\n                React.createElement(_list2['default'], { prefixCls: prefixCls + '-list', titleText: titles[0], dataSource: leftDataSource, filter: leftFilter, filterOption: filterOption, style: listStyle, checkedKeys: sourceSelectedKeys, handleFilter: _this.handleLeftFilter, handleClear: _this.handleLeftClear, handleSelect: _this.handleLeftSelect, handleSelectAll: _this.handleLeftSelectAll, render: render, showSearch: showSearch, searchPlaceholder: searchPlaceholder || locale.searchPlaceholder, notFoundContent: notFoundContent || locale.notFoundContent, itemUnit: locale.itemUnit, itemsUnit: locale.itemsUnit, body: body, footer: footer, lazy: lazy, onScroll: _this.handleLeftScroll }),\n                React.createElement(_operation2['default'], { className: prefixCls + '-operation', rightActive: rightActive, rightArrowText: operations[0], moveToRight: _this.moveToRight, leftActive: leftActive, leftArrowText: operations[1], moveToLeft: _this.moveToLeft }),\n                React.createElement(_list2['default'], { prefixCls: prefixCls + '-list', titleText: titles[1], dataSource: rightDataSource, filter: rightFilter, filterOption: filterOption, style: listStyle, checkedKeys: targetSelectedKeys, handleFilter: _this.handleRightFilter, handleClear: _this.handleRightClear, handleSelect: _this.handleRightSelect, handleSelectAll: _this.handleRightSelectAll, render: render, showSearch: showSearch, searchPlaceholder: searchPlaceholder || locale.searchPlaceholder, notFoundContent: notFoundContent || locale.notFoundContent, itemUnit: locale.itemUnit, itemsUnit: locale.itemsUnit, body: body, footer: footer, lazy: lazy, onScroll: _this.handleRightScroll })\n            );\n        };\n        var _props$selectedKeys = props.selectedKeys,\n            selectedKeys = _props$selectedKeys === undefined ? [] : _props$selectedKeys,\n            _props$targetKeys = props.targetKeys,\n            targetKeys = _props$targetKeys === undefined ? [] : _props$targetKeys;\n\n        _this.state = {\n            leftFilter: '',\n            rightFilter: '',\n            sourceSelectedKeys: selectedKeys.filter(function (key) {\n                return targetKeys.indexOf(key) === -1;\n            }),\n            targetSelectedKeys: selectedKeys.filter(function (key) {\n                return targetKeys.indexOf(key) > -1;\n            })\n        };\n        return _this;\n    }\n\n    (0, _createClass3['default'])(Transfer, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            var _state = this.state,\n                sourceSelectedKeys = _state.sourceSelectedKeys,\n                targetSelectedKeys = _state.targetSelectedKeys;\n\n            if (nextProps.targetKeys !== this.props.targetKeys || nextProps.dataSource !== this.props.dataSource) {\n                // clear cached splited dataSource\n                this.splitedDataSource = null;\n                if (!nextProps.selectedKeys) {\n                    // clear key nolonger existed\n                    // clear checkedKeys according to targetKeys\n                    var dataSource = nextProps.dataSource,\n                        _nextProps$targetKeys = nextProps.targetKeys,\n                        targetKeys = _nextProps$targetKeys === undefined ? [] : _nextProps$targetKeys;\n\n                    var newSourceSelectedKeys = [];\n                    var newTargetSelectedKeys = [];\n                    dataSource.forEach(function (_ref) {\n                        var key = _ref.key;\n\n                        if (sourceSelectedKeys.includes(key) && !targetKeys.includes(key)) {\n                            newSourceSelectedKeys.push(key);\n                        }\n                        if (targetSelectedKeys.includes(key) && targetKeys.includes(key)) {\n                            newTargetSelectedKeys.push(key);\n                        }\n                    });\n                    this.setState({\n                        sourceSelectedKeys: newSourceSelectedKeys,\n                        targetSelectedKeys: newTargetSelectedKeys\n                    });\n                }\n            }\n            if (nextProps.selectedKeys) {\n                var _targetKeys = nextProps.targetKeys || [];\n                this.setState({\n                    sourceSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n                        return !_targetKeys.includes(key);\n                    }),\n                    targetSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n                        return _targetKeys.includes(key);\n                    })\n                });\n            }\n        }\n    }, {\n        key: 'splitDataSource',\n        value: function splitDataSource(props) {\n            if (this.splitedDataSource) {\n                return this.splitedDataSource;\n            }\n            var dataSource = props.dataSource,\n                rowKey = props.rowKey,\n                _props$targetKeys2 = props.targetKeys,\n                targetKeys = _props$targetKeys2 === undefined ? [] : _props$targetKeys2;\n\n            var leftDataSource = [];\n            var rightDataSource = new Array(targetKeys.length);\n            dataSource.forEach(function (record) {\n                if (rowKey) {\n                    record.key = rowKey(record);\n                }\n                // rightDataSource should be ordered by targetKeys\n                // leftDataSource should be ordered by dataSource\n                var indexOfKey = targetKeys.indexOf(record.key);\n                if (indexOfKey !== -1) {\n                    rightDataSource[indexOfKey] = record;\n                } else {\n                    leftDataSource.push(record);\n                }\n            });\n            this.splitedDataSource = {\n                leftDataSource: leftDataSource,\n                rightDataSource: rightDataSource\n            };\n            return this.splitedDataSource;\n        }\n    }, {\n        key: 'handleSelectChange',\n        value: function handleSelectChange(direction, holder) {\n            var _state2 = this.state,\n                sourceSelectedKeys = _state2.sourceSelectedKeys,\n                targetSelectedKeys = _state2.targetSelectedKeys;\n\n            var onSelectChange = this.props.onSelectChange;\n            if (!onSelectChange) {\n                return;\n            }\n            if (direction === 'left') {\n                onSelectChange(holder, targetSelectedKeys);\n            } else {\n                onSelectChange(sourceSelectedKeys, holder);\n            }\n        }\n    }, {\n        key: 'getTitles',\n        value: function getTitles(transferLocale) {\n            var props = this.props;\n\n            if (props.titles) {\n                return props.titles;\n            }\n            return transferLocale.titles;\n        }\n    }, {\n        key: 'getSelectedKeysName',\n        value: function getSelectedKeysName(direction) {\n            return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                _LocaleReceiver2['default'],\n                { componentName: 'Transfer', defaultLocale: _default2['default'].Transfer },\n                this.renderTransfer\n            );\n        }\n    }]);\n    return Transfer;\n}(React.Component);\n// For high-level customized Transfer @dqaria\n\n\nexports['default'] = Transfer;\nTransfer.List = _list2['default'];\nTransfer.Operation = _operation2['default'];\nTransfer.Search = _search2['default'];\nTransfer.defaultProps = {\n    dataSource: [],\n    render: noop,\n    showSearch: false\n};\nTransfer.propTypes = {\n    prefixCls: _propTypes2['default'].string,\n    dataSource: _propTypes2['default'].array,\n    render: _propTypes2['default'].func,\n    targetKeys: _propTypes2['default'].array,\n    onChange: _propTypes2['default'].func,\n    height: _propTypes2['default'].number,\n    listStyle: _propTypes2['default'].object,\n    className: _propTypes2['default'].string,\n    titles: _propTypes2['default'].array,\n    operations: _propTypes2['default'].array,\n    showSearch: _propTypes2['default'].bool,\n    filterOption: _propTypes2['default'].func,\n    searchPlaceholder: _propTypes2['default'].string,\n    notFoundContent: _propTypes2['default'].node,\n    body: _propTypes2['default'].func,\n    footer: _propTypes2['default'].func,\n    rowKey: _propTypes2['default'].func,\n    lazy: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].bool])\n};\nmodule.exports = exports['default'];"},"hash":"0b5ef2d4f12a59cba53599fc8070aaba"}