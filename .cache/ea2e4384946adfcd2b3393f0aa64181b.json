{"dependencies":[{"name":"prop-types","loc":{"line":6,"column":25}},{"name":"lodash/without","loc":{"line":10,"column":23}},{"name":"d3-shape","loc":{"line":14,"column":23}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.curveFromProp = exports.lineCurvePropType = exports.lineCurvePropKeys = exports.areaCurvePropType = exports.areaCurvePropKeys = exports.closedCurvePropType = exports.closedCurvePropKeys = exports.curvePropType = exports.curvePropKeys = exports.curvePropMapping = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _without = require('lodash/without');\n\nvar _without2 = _interopRequireDefault(_without);\n\nvar _d3Shape = require('d3-shape');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar curvePropMapping = exports.curvePropMapping = {\n    basis: _d3Shape.curveBasis,\n    basisClosed: _d3Shape.curveBasisClosed,\n    basisOpen: _d3Shape.curveBasisOpen,\n    bundle: _d3Shape.curveBundle,\n    cardinal: _d3Shape.curveCardinal,\n    cardinalClosed: _d3Shape.curveCardinalClosed,\n    cardinalOpen: _d3Shape.curveCardinalOpen,\n    catmullRom: _d3Shape.curveCatmullRom,\n    catmullRomClosed: _d3Shape.curveCatmullRomClosed,\n    catmullRomOpen: _d3Shape.curveCatmullRomOpen,\n    linear: _d3Shape.curveLinear,\n    linearClosed: _d3Shape.curveLinearClosed,\n    monotoneX: _d3Shape.curveMonotoneX,\n    monotoneY: _d3Shape.curveMonotoneY,\n    natural: _d3Shape.curveNatural,\n    step: _d3Shape.curveStep,\n    stepAfter: _d3Shape.curveStepAfter,\n    stepBefore: _d3Shape.curveStepBefore\n}; /*\n    * This file is part of the nivo project.\n    *\n    * Copyright 2016-present, RaphaÃ«l Benitte.\n    *\n    * For the full copyright and license information, please view the LICENSE\n    * file that was distributed with this source code.\n    */\nvar curvePropKeys = exports.curvePropKeys = Object.keys(curvePropMapping);\n\nvar curvePropType = exports.curvePropType = _propTypes2.default.oneOf(curvePropKeys);\n\nvar closedCurvePropKeys = exports.closedCurvePropKeys = curvePropKeys.filter(function (c) {\n    return c.endsWith('Closed');\n});\n\nvar closedCurvePropType = exports.closedCurvePropType = _propTypes2.default.oneOf(closedCurvePropKeys);\n\n// Safe curves to be used with d3 area shape generator\nvar areaCurvePropKeys = exports.areaCurvePropKeys = (0, _without2.default)(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\n\nvar areaCurvePropType = exports.areaCurvePropType = _propTypes2.default.oneOf(areaCurvePropKeys);\n\n// Safe curves to be used with d3 line shape generator\nvar lineCurvePropKeys = exports.lineCurvePropKeys = (0, _without2.default)(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\n\nvar lineCurvePropType = exports.lineCurvePropType = _propTypes2.default.oneOf(lineCurvePropKeys);\n\n/**\n * Returns curve interpolator from given identifier.\n *\n * @param {string} id - Curve interpolator identifier\n * @return {Function}\n */\nvar curveFromProp = exports.curveFromProp = function curveFromProp(id) {\n    var curveInterpolator = curvePropMapping[id];\n    if (!curveInterpolator) {\n        throw new TypeError('\\'' + id + '\\', is not a valid curve interpolator identifier.');\n    }\n\n    return curvePropMapping[id];\n};"},"hash":"4d830c10c2aaad405fc99f0add170ca8"}