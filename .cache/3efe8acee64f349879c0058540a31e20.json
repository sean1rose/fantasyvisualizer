{"dependencies":[{"name":"lodash/sortBy","loc":{"line":5,"column":23}},{"name":"react","loc":{"line":19,"column":21}},{"name":"d3-shape","loc":{"line":23,"column":23}},{"name":"recompose/compose","loc":{"line":25,"column":23}},{"name":"recompose/pure","loc":{"line":29,"column":20}},{"name":"recompose/withPropsOnChange","loc":{"line":33,"column":33}},{"name":"recompose/defaultProps","loc":{"line":37,"column":28}},{"name":"../../../props","loc":{"line":41,"column":21}},{"name":"../../../lib/colors","loc":{"line":43,"column":22}},{"name":"../../../hocs","loc":{"line":45,"column":20}},{"name":"../Container","loc":{"line":47,"column":25}},{"name":"../SvgWrapper","loc":{"line":51,"column":26}},{"name":"../../../lib/charts/line","loc":{"line":55,"column":20}},{"name":"../../cartesian/markers/CartesianMarkers","loc":{"line":57,"column":32}},{"name":"../../axes/Axes","loc":{"line":61,"column":20}},{"name":"../../axes/Grid","loc":{"line":65,"column":20}},{"name":"./LineAreas","loc":{"line":69,"column":25}},{"name":"./LineLines","loc":{"line":73,"column":25}},{"name":"./LineSlices","loc":{"line":77,"column":26}},{"name":"./LineDots","loc":{"line":81,"column":24}},{"name":"./props","loc":{"line":85,"column":22}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _sortBy2 = require('lodash/sortBy');\n\nvar _sortBy3 = _interopRequireDefault(_sortBy2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Shape = require('d3-shape');\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _defaultProps = require('recompose/defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _props = require('../../../props');\n\nvar _colors = require('../../../lib/colors');\n\nvar _hocs = require('../../../hocs');\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _SvgWrapper = require('../SvgWrapper');\n\nvar _SvgWrapper2 = _interopRequireDefault(_SvgWrapper);\n\nvar _line = require('../../../lib/charts/line');\n\nvar _CartesianMarkers = require('../../cartesian/markers/CartesianMarkers');\n\nvar _CartesianMarkers2 = _interopRequireDefault(_CartesianMarkers);\n\nvar _Axes = require('../../axes/Axes');\n\nvar _Axes2 = _interopRequireDefault(_Axes);\n\nvar _Grid = require('../../axes/Grid');\n\nvar _Grid2 = _interopRequireDefault(_Grid);\n\nvar _LineAreas = require('./LineAreas');\n\nvar _LineAreas2 = _interopRequireDefault(_LineAreas);\n\nvar _LineLines = require('./LineLines');\n\nvar _LineLines2 = _interopRequireDefault(_LineLines);\n\nvar _LineSlices = require('./LineSlices');\n\nvar _LineSlices2 = _interopRequireDefault(_LineSlices);\n\nvar _LineDots = require('./LineDots');\n\nvar _LineDots2 = _interopRequireDefault(_LineDots);\n\nvar _props2 = require('./props');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Line = function Line(_ref) {\n    var lines = _ref.lines,\n        lineGenerator = _ref.lineGenerator,\n        areaGenerator = _ref.areaGenerator,\n        xScale = _ref.xScale,\n        yScale = _ref.yScale,\n        slices = _ref.slices,\n        margin = _ref.margin,\n        width = _ref.width,\n        height = _ref.height,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        axisTop = _ref.axisTop,\n        axisRight = _ref.axisRight,\n        axisBottom = _ref.axisBottom,\n        axisLeft = _ref.axisLeft,\n        enableGridX = _ref.enableGridX,\n        enableGridY = _ref.enableGridY,\n        lineWidth = _ref.lineWidth,\n        enableArea = _ref.enableArea,\n        areaOpacity = _ref.areaOpacity,\n        enableDots = _ref.enableDots,\n        dotSymbol = _ref.dotSymbol,\n        dotSize = _ref.dotSize,\n        dotColor = _ref.dotColor,\n        dotBorderWidth = _ref.dotBorderWidth,\n        dotBorderColor = _ref.dotBorderColor,\n        enableDotLabel = _ref.enableDotLabel,\n        dotLabel = _ref.dotLabel,\n        dotLabelFormat = _ref.dotLabelFormat,\n        dotLabelYOffset = _ref.dotLabelYOffset,\n        markers = _ref.markers,\n        theme = _ref.theme,\n        animate = _ref.animate,\n        motionStiffness = _ref.motionStiffness,\n        motionDamping = _ref.motionDamping,\n        isInteractive = _ref.isInteractive,\n        tooltipFormat = _ref.tooltipFormat,\n        enableStackTooltip = _ref.enableStackTooltip;\n\n    var motionProps = {\n        animate: animate,\n        motionDamping: motionDamping,\n        motionStiffness: motionStiffness\n    };\n\n    return _react2.default.createElement(\n        _Container2.default,\n        { isInteractive: isInteractive, theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n            return _react2.default.createElement(\n                _SvgWrapper2.default,\n                { width: outerWidth, height: outerHeight, margin: margin },\n                _react2.default.createElement(_Grid2.default, _extends({\n                    theme: theme,\n                    width: width,\n                    height: height,\n                    xScale: enableGridX ? xScale : null,\n                    yScale: enableGridY ? yScale : null\n                }, motionProps)),\n                _react2.default.createElement(_CartesianMarkers2.default, {\n                    markers: markers,\n                    width: width,\n                    height: height,\n                    xScale: xScale,\n                    yScale: yScale,\n                    theme: theme\n                }),\n                _react2.default.createElement(_Axes2.default, _extends({\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: width,\n                    height: height,\n                    theme: theme,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft\n                }, motionProps)),\n                enableArea && _react2.default.createElement(_LineAreas2.default, _extends({\n                    areaGenerator: areaGenerator,\n                    areaOpacity: areaOpacity,\n                    lines: lines\n                }, motionProps)),\n                _react2.default.createElement(_LineLines2.default, _extends({\n                    lines: lines,\n                    lineGenerator: lineGenerator,\n                    lineWidth: lineWidth\n                }, motionProps)),\n                isInteractive && enableStackTooltip && _react2.default.createElement(_LineSlices2.default, {\n                    slices: slices,\n                    height: height,\n                    showTooltip: showTooltip,\n                    hideTooltip: hideTooltip,\n                    theme: theme,\n                    tooltipFormat: tooltipFormat\n                }),\n                enableDots && _react2.default.createElement(_LineDots2.default, _extends({\n                    lines: lines,\n                    symbol: dotSymbol,\n                    size: dotSize,\n                    color: (0, _colors.getInheritedColorGenerator)(dotColor),\n                    borderWidth: dotBorderWidth,\n                    borderColor: (0, _colors.getInheritedColorGenerator)(dotBorderColor),\n                    enableLabel: enableDotLabel,\n                    label: dotLabel,\n                    labelFormat: dotLabelFormat,\n                    labelYOffset: dotLabelYOffset,\n                    theme: theme\n                }, motionProps))\n            );\n        }\n    );\n};\n\nLine.propTypes = _props2.LinePropTypes;\n\nvar enhance = (0, _compose2.default)((0, _defaultProps2.default)(_props2.LineDefaultProps), (0, _hocs.withTheme)(), (0, _hocs.withColors)(), (0, _hocs.withDimensions)(), (0, _hocs.withMotion)(), (0, _withPropsOnChange2.default)(['curve', 'height'], function (_ref3) {\n    var curve = _ref3.curve,\n        height = _ref3.height;\n    return {\n        areaGenerator: (0, _d3Shape.area)().x(function (d) {\n            return d.x;\n        }).y0(height).y1(function (d) {\n            return d.y;\n        }).curve((0, _props.curveFromProp)(curve)),\n        lineGenerator: (0, _d3Shape.line)().defined(function (d) {\n            return d.value !== null;\n        }).x(function (d) {\n            return d.x;\n        }).y(function (d) {\n            return d.y;\n        }).curve((0, _props.curveFromProp)(curve))\n    };\n}), (0, _withPropsOnChange2.default)(['data', 'stacked', 'width', 'height', 'minY', 'maxY'], function (_ref4) {\n    var data = _ref4.data,\n        stacked = _ref4.stacked,\n        width = _ref4.width,\n        height = _ref4.height,\n        margin = _ref4.margin,\n        minY = _ref4.minY,\n        maxY = _ref4.maxY;\n\n    var scales = void 0;\n    var args = { data: data, width: width, height: height, minY: minY, maxY: maxY };\n    if (stacked === true) {\n        scales = (0, _line.getStackedScales)(args);\n    } else {\n        scales = (0, _line.getScales)(args);\n    }\n\n    return _extends({\n        margin: margin,\n        width: width,\n        height: height\n    }, scales);\n}), (0, _withPropsOnChange2.default)(['getColor', 'xScale', 'yScale'], function (_ref5) {\n    var data = _ref5.data,\n        stacked = _ref5.stacked,\n        xScale = _ref5.xScale,\n        yScale = _ref5.yScale,\n        getColor = _ref5.getColor;\n\n    var lines = void 0;\n    if (stacked === true) {\n        lines = (0, _line.generateStackedLines)(data, xScale, yScale, getColor);\n    } else {\n        lines = (0, _line.generateLines)(data, xScale, yScale, getColor);\n    }\n\n    var slices = xScale.domain().map(function (id, i) {\n        var points = (0, _sortBy3.default)(lines.map(function (line) {\n            return {\n                id: line.id,\n                value: line.points[i].value,\n                y: line.points[i].y,\n                color: line.color\n            };\n        }), 'y');\n\n        return {\n            id: id,\n            x: xScale(id),\n            points: points\n        };\n    });\n\n    return { lines: lines, slices: slices };\n}), _pure2.default);\n\nvar enhancedLine = enhance(Line);\nenhancedLine.displayName = 'enhance(Line)';\n\nexports.default = enhancedLine;"},"hash":"cce550b915a4c6725b2d51d60f98d5d3"}