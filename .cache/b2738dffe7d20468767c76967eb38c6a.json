{"dependencies":[{"name":"lodash/mapValues","loc":{"line":5,"column":26}},{"name":"lodash/isFunction","loc":{"line":9,"column":27}},{"name":"react","loc":{"line":23,"column":21}},{"name":"prop-types","loc":{"line":27,"column":25}},{"name":"react-motion","loc":{"line":31,"column":27}},{"name":"d3-format","loc":{"line":33,"column":24}},{"name":"recompose/compose","loc":{"line":35,"column":23}},{"name":"recompose/withPropsOnChange","loc":{"line":39,"column":33}},{"name":"recompose/pure","loc":{"line":43,"column":20}},{"name":"../../../lib/colors","loc":{"line":47,"column":22}},{"name":"../../../lib/polar","loc":{"line":49,"column":21}},{"name":"../../tooltip/TableTooltip","loc":{"line":51,"column":28}},{"name":"../../tooltip/Chip","loc":{"line":55,"column":20}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _mapValues2 = require('lodash/mapValues');\n\nvar _mapValues3 = _interopRequireDefault(_mapValues2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMotion = require('react-motion');\n\nvar _d3Format = require('d3-format');\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _colors = require('../../../lib/colors');\n\nvar _polar = require('../../../lib/polar');\n\nvar _TableTooltip = require('../../tooltip/TableTooltip');\n\nvar _TableTooltip2 = _interopRequireDefault(_TableTooltip);\n\nvar _Chip = require('../../tooltip/Chip');\n\nvar _Chip2 = _interopRequireDefault(_Chip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n *\n * @param {Object}  source\n * @param {Object}  target\n * @param {boolean} useMiddleAngle\n * @param {Object}  [springConfig]\n * @return {Object}\n */\nvar getRibbonAngles = function getRibbonAngles(_ref, useMiddleAngle, springConfig) {\n    var source = _ref.source,\n        target = _ref.target;\n\n    var firstArc = void 0;\n    var secondArc = void 0;\n    if (source.startAngle < target.startAngle) {\n        firstArc = source;\n        secondArc = target;\n    } else {\n        firstArc = target;\n        secondArc = source;\n    }\n\n    var angles = void 0;\n    if (useMiddleAngle === true) {\n        var firstMiddleAngle = (0, _polar.midAngle)(firstArc);\n        var secondMiddleAngle = (0, _polar.midAngle)(secondArc);\n\n        angles = {\n            sourceStartAngle: firstMiddleAngle,\n            sourceEndAngle: firstMiddleAngle,\n            targetStartAngle: secondMiddleAngle,\n            targetEndAngle: secondMiddleAngle\n        };\n    } else {\n        angles = {\n            sourceStartAngle: firstArc.startAngle,\n            sourceEndAngle: firstArc.endAngle,\n            targetStartAngle: secondArc.startAngle,\n            targetEndAngle: secondArc.endAngle\n        };\n    }\n\n    if (!springConfig) return angles;\n\n    return (0, _mapValues3.default)(angles, function (angle) {\n        return (0, _reactMotion.spring)(angle, springConfig);\n    });\n};\n\nvar ribbonWillEnter = function ribbonWillEnter(_ref2) {\n    var ribbon = _ref2.data;\n    return _extends({}, getRibbonAngles(ribbon, true), {\n        opacity: 0\n    }, (0, _colors.colorMotionSpring)(ribbon.source.color));\n};\n\nvar ribbonWillLeave = function ribbonWillLeave(springConfig) {\n    return function (_ref3) {\n        var ribbon = _ref3.data;\n        return _extends({}, getRibbonAngles(ribbon, true, springConfig), {\n            opacity: 0\n        }, (0, _colors.colorMotionSpring)(ribbon.source.color, springConfig));\n    };\n};\n\nvar ChordRibbons = function ChordRibbons(_ref4) {\n    var ribbons = _ref4.ribbons,\n        shapeGenerator = _ref4.shapeGenerator,\n        borderWidth = _ref4.borderWidth,\n        getBorderColor = _ref4.getBorderColor,\n        getOpacity = _ref4.getOpacity,\n        theme = _ref4.theme,\n        tooltipFormat = _ref4.tooltipFormat,\n        setCurrent = _ref4.setCurrent,\n        showTooltip = _ref4.showTooltip,\n        hideTooltip = _ref4.hideTooltip,\n        animate = _ref4.animate,\n        motionDamping = _ref4.motionDamping,\n        motionStiffness = _ref4.motionStiffness;\n\n    var commonProps = function commonProps(ribbon) {\n        var ribbonTooltip = _react2.default.createElement(_TableTooltip2.default, {\n            theme: theme,\n            rows: [[_react2.default.createElement(_Chip2.default, { color: ribbon.source.color }), _react2.default.createElement(\n                'strong',\n                null,\n                ribbon.source.id\n            ), tooltipFormat ? tooltipFormat(ribbon.source.value) : ribbon.source.value], [_react2.default.createElement(_Chip2.default, { color: ribbon.target.color }), _react2.default.createElement(\n                'strong',\n                null,\n                ribbon.target.id\n            ), tooltipFormat ? tooltipFormat(ribbon.target.value) : ribbon.target.value]]\n        });\n\n        return {\n            strokeWidth: borderWidth,\n            onMouseEnter: function onMouseEnter(e) {\n                setCurrent(ribbon);\n                showTooltip(ribbonTooltip, e);\n            },\n            onMouseMove: function onMouseMove(e) {\n                showTooltip(ribbonTooltip, e);\n            },\n            onMouseLeave: function onMouseLeave() {\n                setCurrent(null);\n                hideTooltip();\n            }\n        };\n    };\n\n    if (animate !== true) {\n        return _react2.default.createElement(\n            'g',\n            null,\n            ribbons.map(function (ribbon) {\n                var opacity = getOpacity(ribbon);\n\n                return _react2.default.createElement('path', _extends({\n                    key: ribbon.key,\n                    d: shapeGenerator(ribbon),\n                    fill: ribbon.source.color,\n                    fillOpacity: opacity,\n                    stroke: getBorderColor(_extends({}, ribbon, { color: ribbon.source.color })),\n                    strokeOpacity: opacity\n                }, commonProps(ribbon)));\n            })\n        );\n    }\n\n    var springConfig = {\n        damping: motionDamping,\n        stiffness: motionStiffness,\n        precision: 0.001\n    };\n\n    return _react2.default.createElement(\n        _reactMotion.TransitionMotion,\n        {\n            willEnter: ribbonWillEnter,\n            willLeave: ribbonWillLeave(springConfig),\n            styles: ribbons.map(function (ribbon) {\n                return {\n                    key: ribbon.key,\n                    data: ribbon,\n                    style: _extends({}, getRibbonAngles(ribbon, false, springConfig), {\n                        opacity: (0, _reactMotion.spring)(getOpacity(ribbon), springConfig)\n                    }, (0, _colors.colorMotionSpring)(ribbon.source.color, springConfig))\n                };\n            })\n        },\n        function (interpolatedStyles) {\n            return _react2.default.createElement(\n                'g',\n                null,\n                interpolatedStyles.map(function (_ref5) {\n                    var key = _ref5.key,\n                        style = _ref5.style,\n                        ribbon = _ref5.data;\n\n                    var color = (0, _colors.getInterpolatedColor)(style);\n\n                    return _react2.default.createElement('path', _extends({\n                        key: key,\n                        d: shapeGenerator({\n                            source: {\n                                startAngle: style.sourceStartAngle,\n                                endAngle: Math.max(style.sourceEndAngle, style.sourceStartAngle)\n                            },\n                            target: {\n                                startAngle: style.targetStartAngle,\n                                endAngle: Math.max(style.targetEndAngle, style.targetStartAngle)\n                            }\n                        }),\n                        fill: color,\n                        fillOpacity: style.opacity,\n                        stroke: getBorderColor(_extends({}, ribbon, { color: color })),\n                        strokeOpacity: style.opacity\n                    }, commonProps(ribbon)));\n                })\n            );\n        }\n    );\n};\n\nChordRibbons.propTypes = {\n    ribbons: _propTypes2.default.array.isRequired,\n    shapeGenerator: _propTypes2.default.func.isRequired,\n    borderWidth: _propTypes2.default.number.isRequired,\n    getBorderColor: _propTypes2.default.func.isRequired,\n    getOpacity: _propTypes2.default.func.isRequired,\n    setCurrent: _propTypes2.default.func.isRequired,\n    theme: _propTypes2.default.object.isRequired,\n    showTooltip: _propTypes2.default.func.isRequired,\n    hideTooltip: _propTypes2.default.func.isRequired\n};\n\nvar enhance = (0, _compose2.default)((0, _withPropsOnChange2.default)(['tooltipFormat'], function (_ref6) {\n    var tooltipFormat = _ref6.tooltipFormat;\n\n    if (!tooltipFormat || (0, _isFunction3.default)(tooltipFormat)) return { tooltipFormat: tooltipFormat };\n    return { tooltipFormat: (0, _d3Format.format)(tooltipFormat) };\n}), _pure2.default);\n\nexports.default = enhance(ChordRibbons);"},"hash":"92fc2463beef6cbc0af9a99a800aec90"}