{"dependencies":[{"name":"../../axes","loc":{"line":16,"column":20}},{"name":"../../polar","loc":{"line":18,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.renderAxes = exports.renderAxis = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _axes = require('../../axes');\n\nvar _polar = require('../../polar');\n\nvar horizontalPositions = ['top', 'bottom'];\nvar positions = ['top', 'right', 'bottom', 'left'];\n\nvar renderAxis = exports.renderAxis = function renderAxis(ctx, _ref) {\n    var width = _ref.width,\n        height = _ref.height,\n        position = _ref.position,\n        scale = _ref.scale,\n        _ref$tickSize = _ref.tickSize,\n        tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n        _ref$tickPadding = _ref.tickPadding,\n        tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n        _ref$tickRotation = _ref.tickRotation,\n        tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation;\n\n    var _computeAxisTicks = (0, _axes.computeAxisTicks)({\n        width: width,\n        height: height,\n        position: position,\n        scale: scale,\n        tickSize: tickSize,\n        tickPadding: tickPadding,\n        tickRotation: tickRotation,\n        engine: 'canvas'\n    }),\n        x = _computeAxisTicks.x,\n        y = _computeAxisTicks.y,\n        ticks = _computeAxisTicks.ticks,\n        textAlign = _computeAxisTicks.textAlign,\n        textBaseline = _computeAxisTicks.textBaseline;\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n\n    ticks.forEach(function (tick) {\n        ctx.beginPath();\n        ctx.moveTo(tick.x, tick.y);\n        ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY);\n        ctx.stroke();\n\n        ctx.save();\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY);\n        ctx.rotate((0, _polar.degreesToRadians)(tickRotation));\n        ctx.fillText(tick.value, 0, 0);\n        ctx.restore();\n    });\n\n    ctx.restore();\n};\n\nvar renderAxes = exports.renderAxes = function renderAxes(ctx, _ref2) {\n    var xScale = _ref2.xScale,\n        yScale = _ref2.yScale,\n        width = _ref2.width,\n        height = _ref2.height,\n        top = _ref2.top,\n        right = _ref2.right,\n        bottom = _ref2.bottom,\n        left = _ref2.left;\n\n    var axes = { top: top, right: right, bottom: bottom, left: left };\n\n    positions.map(function (position) {\n        if (!axes[position]) return null;\n\n        var axis = axes[position];\n        var scale = horizontalPositions.includes(position) ? xScale : yScale;\n\n        renderAxis(ctx, _extends({}, axis, {\n            width: width,\n            height: height,\n            position: position,\n            scale: scale\n        }));\n    });\n};"},"hash":"5038fd6485fa0f978eb9edb4d293fbbe"}