{"dependencies":[{"name":"lodash/isEqual","loc":{"line":7,"column":24}},{"name":"lodash/isFunction","loc":{"line":11,"column":27}},{"name":"react","loc":{"line":24,"column":21}},{"name":"prop-types","loc":{"line":28,"column":25}},{"name":"react-smooth","loc":{"line":32,"column":27}},{"name":"classnames","loc":{"line":36,"column":26}},{"name":"../util/DataUtils","loc":{"line":40,"column":25}},{"name":"../util/PureRender","loc":{"line":42,"column":26}},{"name":"../util/ReactUtils","loc":{"line":46,"column":26}},{"name":"../util/PolarUtils","loc":{"line":48,"column":26}},{"name":"../util/ChartUtils","loc":{"line":50,"column":26}},{"name":"../shape/Polygon","loc":{"line":52,"column":23}},{"name":"../shape/Dot","loc":{"line":56,"column":19}},{"name":"../container/Layer","loc":{"line":60,"column":21}},{"name":"../component/LabelList","loc":{"line":64,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp2; /**\n                              * @fileOverview Radar\n                              */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSmooth = require('react-smooth');\n\nvar _reactSmooth2 = _interopRequireDefault(_reactSmooth);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _DataUtils = require('../util/DataUtils');\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nvar _PolarUtils = require('../util/PolarUtils');\n\nvar _ChartUtils = require('../util/ChartUtils');\n\nvar _Polygon = require('../shape/Polygon');\n\nvar _Polygon2 = _interopRequireDefault(_Polygon);\n\nvar _Dot = require('../shape/Dot');\n\nvar _Dot2 = _interopRequireDefault(_Dot);\n\nvar _Layer = require('../container/Layer');\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nvar _LabelList = require('../component/LabelList');\n\nvar _LabelList2 = _interopRequireDefault(_LabelList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Radar = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {\n  _inherits(Radar, _Component);\n\n  function Radar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Radar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Radar.__proto__ || Object.getPrototypeOf(Radar)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isAnimationFinished: false }, _this.cachePrevData = function (points) {\n      _this.setState({ prevPoints: points });\n    }, _this.handleAnimationEnd = function () {\n      _this.setState({ isAnimationFinished: true });\n    }, _this.handleAnimationStart = function () {\n      _this.setState({ isAnimationFinished: false });\n    }, _this.handleMouseEnter = function (e) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n\n      if (onMouseEnter) {\n        onMouseEnter(_this.props, e);\n      }\n    }, _this.handleMouseLeave = function (e) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n\n      if (onMouseLeave) {\n        onMouseLeave(_this.props, e);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Radar, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          animationId = _props.animationId,\n          points = _props.points;\n\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(points);\n      }\n    }\n  }, {\n    key: 'renderDotItem',\n    value: function renderDotItem(option, props) {\n      var dotItem = void 0;\n\n      if (_react2.default.isValidElement(option)) {\n        dotItem = _react2.default.cloneElement(option, props);\n      } else if ((0, _isFunction3.default)(option)) {\n        dotItem = option(props);\n      } else {\n        dotItem = _react2.default.createElement(_Dot2.default, _extends({}, props, { className: 'recharts-radar-dot' }));\n      }\n\n      return dotItem;\n    }\n  }, {\n    key: 'renderDots',\n    value: function renderDots(points) {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          dot = _props2.dot,\n          dataKey = _props2.dataKey;\n\n      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);\n      var customDotProps = (0, _ReactUtils.getPresentationAttributes)(dot);\n\n      var dots = points.map(function (entry, i) {\n        var dotProps = _extends({\n          key: 'dot-' + i,\n          r: 3\n        }, baseProps, customDotProps, {\n          dataKey: dataKey,\n          cx: entry.x,\n          cy: entry.y,\n          index: i,\n          playload: entry\n        });\n\n        return _this2.renderDotItem(dot, dotProps);\n      });\n\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: 'recharts-radar-dots' },\n        dots\n      );\n    }\n  }, {\n    key: 'renderPolygonStatically',\n    value: function renderPolygonStatically(points) {\n      var _props3 = this.props,\n          shape = _props3.shape,\n          dot = _props3.dot;\n\n\n      var radar = void 0;\n      if (_react2.default.isValidElement(shape)) {\n        radar = _react2.default.cloneElement(shape, _extends({}, this.props, { points: points }));\n      } else if ((0, _isFunction3.default)(shape)) {\n        radar = shape(_extends({}, this.props, { points: points }));\n      } else {\n        radar = _react2.default.createElement(_Polygon2.default, _extends({}, (0, _ReactUtils.filterEventAttributes)(this.props), {\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave\n        }, (0, _ReactUtils.getPresentationAttributes)(this.props), {\n          points: points\n        }));\n      }\n\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: 'recharts-radar-polygon' },\n        radar,\n        dot ? this.renderDots(points) : null\n      );\n    }\n  }, {\n    key: 'renderPolygonWithAnimation',\n    value: function renderPolygonWithAnimation() {\n      var _this3 = this;\n\n      var _props4 = this.props,\n          points = _props4.points,\n          isAnimationActive = _props4.isAnimationActive,\n          animationBegin = _props4.animationBegin,\n          animationDuration = _props4.animationDuration,\n          animationEasing = _props4.animationEasing,\n          animationId = _props4.animationId;\n      var prevPoints = this.state.prevPoints;\n\n\n      return _react2.default.createElement(\n        _reactSmooth2.default,\n        {\n          begin: animationBegin,\n          duration: animationDuration,\n          isActive: isAnimationActive,\n          easing: animationEasing,\n          from: { t: 0 },\n          to: { t: 1 },\n          key: 'radar-' + animationId,\n          onAnimationEnd: this.handleAnimationEnd,\n          onAnimationStart: this.handleAnimationStart\n        },\n        function (_ref2) {\n          var t = _ref2.t;\n\n          var stepData = points.map(function (entry, index) {\n            var prev = prevPoints && prevPoints[index];\n\n            if (prev) {\n              var _interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);\n              var _interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);\n\n              return _extends({}, entry, {\n                x: _interpolatorX(t),\n                y: _interpolatorY(t)\n              });\n            }\n\n            var interpolatorX = (0, _DataUtils.interpolateNumber)(entry.cx, entry.x);\n            var interpolatorY = (0, _DataUtils.interpolateNumber)(entry.cy, entry.y);\n\n            return _extends({}, entry, {\n              x: interpolatorX(t),\n              y: interpolatorY(t)\n            });\n          });\n\n          return _this3.renderPolygonStatically(stepData);\n        }\n      );\n    }\n  }, {\n    key: 'renderPolygon',\n    value: function renderPolygon() {\n      var _props5 = this.props,\n          points = _props5.points,\n          isAnimationActive = _props5.isAnimationActive;\n      var prevPoints = this.state.prevPoints;\n\n\n      if (isAnimationActive && points && points.length && (!prevPoints || !(0, _isEqual3.default)(prevPoints, points))) {\n        return this.renderPolygonWithAnimation();\n      }\n\n      return this.renderPolygonStatically(points);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props6 = this.props,\n          hide = _props6.hide,\n          className = _props6.className,\n          points = _props6.points,\n          isAnimationActive = _props6.isAnimationActive;\n\n\n      if (hide || !points || !points.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n\n      var layerClass = (0, _classnames2.default)('recharts-radar', className);\n\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: layerClass },\n        this.renderPolygon(),\n        (!isAnimationActive || isAnimationFinished) && _LabelList2.default.renderCallByParent(this.props, points)\n      );\n    }\n  }]);\n\n  return Radar;\n}(_react.Component), _class2.displayName = 'Radar', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {\n  className: _propTypes2.default.string,\n  dataKey: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.func]).isRequired,\n  angleAxisId: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  radiusAxisId: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  points: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    x: _propTypes2.default.number,\n    y: _propTypes2.default.number,\n    cx: _propTypes2.default.number,\n    cy: _propTypes2.default.number,\n    angle: _propTypes2.default.number,\n    radius: _propTypes2.default.number,\n    value: _propTypes2.default.number,\n    payload: _propTypes2.default.object\n  })),\n  shape: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),\n  activeDot: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.bool]),\n  // whether have dot in poly line\n  dot: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.bool]),\n  label: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func, _propTypes2.default.object, _propTypes2.default.bool]),\n  legendType: _propTypes2.default.oneOf(_ReactUtils.LEGEND_TYPES),\n  hide: _propTypes2.default.bool,\n\n  onMouseEnter: _propTypes2.default.func,\n  onMouseLeave: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  isAnimationActive: _propTypes2.default.bool,\n  animationId: _propTypes2.default.number,\n  animationBegin: _propTypes2.default.number,\n  animationDuration: _propTypes2.default.number,\n  animationEasing: _propTypes2.default.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear'])\n}), _class2.defaultProps = {\n  angleAxisId: 0,\n  radiusAxisId: 0,\n  hide: false,\n  activeDot: true,\n  dot: false,\n  legendType: 'rect',\n  isAnimationActive: !(0, _ReactUtils.isSsr)(),\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease'\n}, _class2.getComposedData = function (_ref3) {\n  var radiusAxis = _ref3.radiusAxis,\n      angleAxis = _ref3.angleAxis,\n      displayedData = _ref3.displayedData,\n      dataKey = _ref3.dataKey,\n      bandSize = _ref3.bandSize;\n  var cx = angleAxis.cx,\n      cy = angleAxis.cy;\n\n  var points = displayedData.map(function (entry, i) {\n    var name = (0, _ChartUtils.getValueByDataKey)(entry, angleAxis.dataKey, i);\n    var value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey, 0);\n    var angle = angleAxis.scale(name) + (bandSize || 0);\n    var radius = radiusAxis.scale(value);\n    return _extends({}, (0, _PolarUtils.polarToCartesian)(cx, cy, radius, angle), {\n      name: name, value: value, cx: cx, cy: cy, radius: radius, angle: angle,\n      payload: entry\n    });\n  });\n\n  return { points: points };\n}, _temp2)) || _class;\n\nexports.default = Radar;"},"hash":"536403ef73e19fb9cbc13236eef253ec"}