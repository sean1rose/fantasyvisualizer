{"dependencies":[{"name":"react","loc":{"line":16,"column":21}},{"name":"prop-types","loc":{"line":20,"column":25}},{"name":"recompose/pure","loc":{"line":24,"column":20}},{"name":"../../../lib/polar","loc":{"line":28,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.patternLinesDef = exports.PatternLines = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _polar = require('../../../lib/polar');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PatternLines = exports.PatternLines = (0, _pure2.default)(function (_ref) {\n    var id = _ref.id,\n        _spacing = _ref.spacing,\n        _rotation = _ref.rotation,\n        background = _ref.background,\n        color = _ref.color,\n        lineWidth = _ref.lineWidth;\n\n    var rotation = Math.round(_rotation) % 360;\n    var spacing = Math.abs(_spacing);\n\n    if (rotation > 180) rotation = rotation - 360;else if (rotation > 90) rotation = rotation - 180;else if (rotation < -180) rotation = rotation + 360;else if (rotation < -90) rotation = rotation + 180;\n\n    var width = spacing;\n    var height = spacing;\n    var path = void 0;\n\n    if (rotation === 0) {\n        path = '\\n                M 0 0 L ' + width + ' 0\\n                M 0 ' + height + ' L ' + width + ' ' + height + '\\n            ';\n    } else if (rotation === 90) {\n        path = '\\n                M 0 0 L 0 ' + height + '\\n                M ' + width + ' 0 L ' + width + ' ' + height + '\\n            ';\n    } else {\n        width = Math.abs(spacing / Math.sin((0, _polar.degreesToRadians)(rotation)));\n        height = spacing / Math.sin((0, _polar.degreesToRadians)(90 - rotation));\n\n        if (rotation > 0) {\n            path = '\\n                    M 0 ' + -height + ' L ' + width * 2 + ' ' + height + '\\n                    M ' + -width + ' ' + -height + ' L ' + width + ' ' + height + '\\n                    M ' + -width + ' 0 L ' + width + ' ' + height * 2 + '\\n                ';\n        } else {\n            path = '\\n                    M ' + -width + ' ' + height + ' L ' + width + ' ' + -height + '\\n                    M ' + -width + ' ' + height * 2 + ' L ' + width * 2 + ' ' + -height + '\\n                    M 0 ' + height * 2 + ' L ' + width * 2 + ' 0\\n                ';\n        }\n    }\n\n    return _react2.default.createElement(\n        'pattern',\n        { id: id, width: width, height: height, patternUnits: 'userSpaceOnUse' },\n        _react2.default.createElement('rect', {\n            width: width,\n            height: height,\n            fill: background,\n            stroke: 'rgba(255, 0, 0, 0.1)',\n            strokeWidth: 0\n        }),\n        _react2.default.createElement('path', { d: path, strokeWidth: lineWidth, stroke: color, strokeLinecap: 'square' })\n    );\n});\n\nPatternLines.propTypes = {\n    id: _propTypes2.default.string.isRequired,\n    spacing: _propTypes2.default.number.isRequired,\n    rotation: _propTypes2.default.number.isRequired,\n    background: _propTypes2.default.string.isRequired,\n    color: _propTypes2.default.string.isRequired,\n    lineWidth: _propTypes2.default.number.isRequired\n};\n\nPatternLines.defaultProps = {\n    spacing: 5,\n    rotation: 0,\n    color: '#000000',\n    background: '#ffffff',\n    lineWidth: 2\n};\n\nvar patternLinesDef = exports.patternLinesDef = function patternLinesDef(id) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _extends({\n        id: id,\n        type: 'patternLines'\n    }, options);\n};"},"hash":"258db485d343350360840207853d6a98"}