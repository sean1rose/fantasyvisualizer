{"dependencies":[{"name":"react","loc":{"line":13,"column":21}},{"name":"shallowequal","loc":{"line":15,"column":28}},{"name":"hoist-non-react-statics","loc":{"line":19,"column":36}},{"name":"./PropTypes","loc":{"line":23,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = connect;\n\nvar _react = require('react');\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _PropTypes = require('./PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nvar defaultMapStateToProps = function defaultMapStateToProps() {\n  return {};\n};\n\nfunction connect(mapStateToProps) {\n  var shouldSubscribe = !!mapStateToProps;\n  var finnalMapStateToProps = mapStateToProps || defaultMapStateToProps;\n\n  return function wrapWithConnect(WrappedComponent) {\n    var Connect = function (_Component) {\n      _inherits(Connect, _Component);\n\n      function Connect(props, context) {\n        _classCallCheck(this, Connect);\n\n        var _this = _possibleConstructorReturn(this, (Connect.__proto__ || Object.getPrototypeOf(Connect)).call(this, props, context));\n\n        _this.handleChange = function () {\n          if (!_this.unsubscribe) {\n            return;\n          }\n\n          var nextState = finnalMapStateToProps(_this.store.getState(), _this.props);\n          if (!(0, _shallowequal2.default)(_this.nextState, nextState)) {\n            _this.nextState = nextState;\n            _this.setState({ subscribed: nextState });\n          }\n        };\n\n        _this.store = context.miniStore;\n        _this.state = { subscribed: finnalMapStateToProps(_this.store.getState(), props) };\n        return _this;\n      }\n\n      _createClass(Connect, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          this.trySubscribe();\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          this.tryUnsubscribe();\n        }\n      }, {\n        key: 'trySubscribe',\n        value: function trySubscribe() {\n          if (shouldSubscribe) {\n            this.unsubscribe = this.store.subscribe(this.handleChange);\n            this.handleChange();\n          }\n        }\n      }, {\n        key: 'tryUnsubscribe',\n        value: function tryUnsubscribe() {\n          if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = null;\n          }\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          return (0, _react.createElement)(WrappedComponent, _extends({}, this.props, this.state.subscribed, {\n            store: this.store\n          }));\n        }\n      }]);\n\n      return Connect;\n    }(_react.Component);\n\n    Connect.displayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';\n    Connect.contextTypes = {\n      miniStore: _PropTypes.storeShape.isRequired\n    };\n\n\n    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);\n  };\n}"},"hash":"9ead7e80d3e42a533a9cf15eb6b28321"}