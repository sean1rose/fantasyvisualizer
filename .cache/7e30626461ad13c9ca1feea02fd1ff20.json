{"dependencies":[{"name":"lodash/partial","loc":{"line":5,"column":24}},{"name":"react","loc":{"line":9,"column":21}},{"name":"../../../lib/canvas/axes","loc":{"line":13,"column":20}},{"name":"../../../lib/interactivity","loc":{"line":15,"column":29}},{"name":"../../../lib/canvas/charts/heatmap","loc":{"line":17,"column":23}},{"name":"../../../lib/charts/heatmap","loc":{"line":19,"column":24}},{"name":"./HeatMapCellTooltip","loc":{"line":21,"column":34}},{"name":"../Container","loc":{"line":25,"column":25}},{"name":"./props","loc":{"line":29,"column":22}},{"name":"./enhance","loc":{"line":31,"column":23}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _partial2 = require('lodash/partial');\n\nvar _partial3 = _interopRequireDefault(_partial2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _axes = require('../../../lib/canvas/axes');\n\nvar _interactivity = require('../../../lib/interactivity');\n\nvar _heatmap = require('../../../lib/canvas/charts/heatmap');\n\nvar _heatmap2 = require('../../../lib/charts/heatmap');\n\nvar _HeatMapCellTooltip = require('./HeatMapCellTooltip');\n\nvar _HeatMapCellTooltip2 = _interopRequireDefault(_HeatMapCellTooltip);\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _props2 = require('./props');\n\nvar _enhance = require('./enhance');\n\nvar _enhance2 = _interopRequireDefault(_enhance);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar HeatMapCanvas = function (_Component) {\n    _inherits(HeatMapCanvas, _Component);\n\n    function HeatMapCanvas() {\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, HeatMapCanvas);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleMouseHover = function (showTooltip, hideTooltip, event) {\n            if (!_this.nodes) return;\n\n            var _getRelativeCursor = (0, _interactivity.getRelativeCursor)(_this.surface, event),\n                x = _getRelativeCursor[0],\n                y = _getRelativeCursor[1];\n\n            var _this$props = _this.props,\n                margin = _this$props.margin,\n                offsetX = _this$props.offsetX,\n                offsetY = _this$props.offsetY,\n                theme = _this$props.theme,\n                setCurrentNode = _this$props.setCurrentNode;\n\n            var node = _this.nodes.find(function (node) {\n                return (0, _interactivity.isCursorInRect)(node.x + margin.left + offsetX - node.width / 2, node.y + margin.top + offsetY - node.height / 2, node.width, node.height, x, y);\n            });\n\n            if (node !== undefined) {\n                setCurrentNode(node);\n                showTooltip(_react2.default.createElement(_HeatMapCellTooltip2.default, { node: node, theme: theme }), event);\n            } else {\n                setCurrentNode(null);\n                hideTooltip();\n            }\n        }, _this.handleMouseLeave = function (hideTooltip) {\n            _this.props.setCurrentNode(null);\n            hideTooltip();\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    HeatMapCanvas.prototype.componentDidMount = function componentDidMount() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    HeatMapCanvas.prototype.shouldComponentUpdate = function shouldComponentUpdate(props) {\n        if (this.props.outerWidth !== props.outerWidth || this.props.outerHeight !== props.outerHeight || this.props.isInteractive !== props.isInteractive || this.props.theme !== props.theme) {\n            return true;\n        } else {\n            this.draw(props);\n            return false;\n        }\n    };\n\n    HeatMapCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    HeatMapCanvas.prototype.draw = function draw(props) {\n        var width = props.width,\n            height = props.height,\n            outerWidth = props.outerWidth,\n            outerHeight = props.outerHeight,\n            pixelRatio = props.pixelRatio,\n            margin = props.margin,\n            offsetX = props.offsetX,\n            offsetY = props.offsetY,\n            xScale = props.xScale,\n            yScale = props.yScale,\n            cellShape = props.cellShape;\n\n\n        this.surface.width = outerWidth * pixelRatio;\n        this.surface.height = outerHeight * pixelRatio;\n\n        this.ctx.scale(pixelRatio, pixelRatio);\n\n        var renderNode = void 0;\n        if (cellShape === 'rect') {\n            renderNode = (0, _partial3.default)(_heatmap.renderRect, this.ctx);\n        } else {\n            renderNode = (0, _partial3.default)(_heatmap.renderCircle, this.ctx);\n        }\n\n        var nodes = (0, _heatmap2.computeNodes)(props);\n\n        this.ctx.clearRect(0, 0, outerWidth, outerHeight);\n        this.ctx.translate(margin.left + offsetX, margin.top + offsetY);\n\n        (0, _axes.renderAxes)(this.ctx, {\n            xScale: xScale,\n            yScale: yScale,\n            width: width - offsetX * 2,\n            height: height - offsetY * 2,\n            top: props.axisTop,\n            right: props.axisRight,\n            bottom: props.axisBottom,\n            left: props.axisLeft\n        });\n\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n\n        nodes.forEach(renderNode);\n\n        this.nodes = nodes;\n    };\n\n    HeatMapCanvas.prototype.render = function render() {\n        var _this2 = this;\n\n        var _props = this.props,\n            outerWidth = _props.outerWidth,\n            outerHeight = _props.outerHeight,\n            pixelRatio = _props.pixelRatio,\n            isInteractive = _props.isInteractive,\n            theme = _props.theme;\n\n\n        return _react2.default.createElement(\n            _Container2.default,\n            { isInteractive: isInteractive, theme: theme },\n            function (_ref) {\n                var showTooltip = _ref.showTooltip,\n                    hideTooltip = _ref.hideTooltip;\n                return _react2.default.createElement('canvas', {\n                    ref: function ref(surface) {\n                        _this2.surface = surface;\n                    },\n                    width: outerWidth * pixelRatio,\n                    height: outerHeight * pixelRatio,\n                    style: {\n                        width: outerWidth,\n                        height: outerHeight\n                    },\n                    onMouseEnter: (0, _partial3.default)(_this2.handleMouseHover, showTooltip, hideTooltip),\n                    onMouseMove: (0, _partial3.default)(_this2.handleMouseHover, showTooltip, hideTooltip),\n                    onMouseLeave: (0, _partial3.default)(_this2.handleMouseLeave, hideTooltip)\n                });\n            }\n        );\n    };\n\n    return HeatMapCanvas;\n}(_react.Component);\n\nHeatMapCanvas.propTypes = _props2.HeatMapPropTypes;\n\nexports.default = (0, _enhance2.default)(HeatMapCanvas);"},"hash":"c70cd6d328e3e9b9af3565a2ae295383"}