{"dependencies":[{"name":"lodash/debounce","loc":{"line":7,"column":25}},{"name":"react","loc":{"line":18,"column":21}},{"name":"prop-types","loc":{"line":22,"column":25}},{"name":"classnames","loc":{"line":26,"column":26}},{"name":"react-resize-detector","loc":{"line":30,"column":35}},{"name":"../util/DataUtils","loc":{"line":34,"column":25}},{"name":"../util/LogUtils","loc":{"line":36,"column":24}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debounce2 = require('lodash/debounce');\n\nvar _debounce3 = _interopRequireDefault(_debounce2);\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp; /**\n                    * @fileOverview Wrapper component to make charts adapt to the size of parent * DOM\n                    */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactResizeDetector = require('react-resize-detector');\n\nvar _reactResizeDetector2 = _interopRequireDefault(_reactResizeDetector);\n\nvar _DataUtils = require('../util/DataUtils');\n\nvar _LogUtils = require('../util/LogUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ResponsiveContainer = (_temp = _class = function (_Component) {\n  _inherits(ResponsiveContainer, _Component);\n\n  function ResponsiveContainer(props) {\n    _classCallCheck(this, ResponsiveContainer);\n\n    var _this = _possibleConstructorReturn(this, (ResponsiveContainer.__proto__ || Object.getPrototypeOf(ResponsiveContainer)).call(this, props));\n\n    _this.updateDimensionsImmediate = function () {\n      if (!_this.mounted) {\n        return;\n      }\n\n      var newSize = _this.getContainerSize();\n\n      if (newSize) {\n        var _this$state = _this.state,\n            oldWidth = _this$state.containerWidth,\n            oldHeight = _this$state.containerHeight;\n        var containerWidth = newSize.containerWidth,\n            containerHeight = newSize.containerHeight;\n\n\n        if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n          _this.setState({ containerWidth: containerWidth, containerHeight: containerHeight });\n        }\n      }\n    };\n\n    _this.state = {\n      containerWidth: -1,\n      containerHeight: -1\n    };\n\n    _this.handleResize = props.debounce > 0 ? (0, _debounce3.default)(_this.updateDimensionsImmediate, props.debounce) : _this.updateDimensionsImmediate;\n    return _this;\n  }\n\n  /* eslint-disable  react/no-did-mount-set-state */\n\n\n  _createClass(ResponsiveContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n\n      var size = this.getContainerSize();\n\n      if (size) {\n        this.setState(size);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: 'getContainerSize',\n    value: function getContainerSize() {\n      if (!this.container) {\n        return null;\n      }\n\n      return {\n        containerWidth: this.container.clientWidth,\n        containerHeight: this.container.clientHeight\n      };\n    }\n  }, {\n    key: 'renderChart',\n    value: function renderChart() {\n      var _state = this.state,\n          containerWidth = _state.containerWidth,\n          containerHeight = _state.containerHeight;\n\n\n      if (containerWidth < 0 || containerHeight < 0) {\n        return null;\n      }\n\n      var _props = this.props,\n          aspect = _props.aspect,\n          width = _props.width,\n          height = _props.height,\n          minWidth = _props.minWidth,\n          minHeight = _props.minHeight,\n          maxHeight = _props.maxHeight,\n          children = _props.children;\n\n\n      (0, _LogUtils.warn)((0, _DataUtils.isPercent)(width) || (0, _DataUtils.isPercent)(height), 'The width(%s) and height(%s) are both fixed numbers,\\n       maybe you don\\'t need to use a ResponsiveContainer.', width, height);\n\n      (0, _LogUtils.warn)(!aspect || aspect > 0, 'The aspect(%s) must be greater than zero.', aspect);\n\n      var calculatedWidth = (0, _DataUtils.isPercent)(width) ? containerWidth : width;\n      var calculatedHeight = (0, _DataUtils.isPercent)(height) ? containerHeight : height;\n\n      if (aspect && aspect > 0) {\n        // Preserve the desired aspect ratio\n        calculatedHeight = calculatedWidth / aspect;\n        // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n        if (maxHeight && calculatedHeight > maxHeight) {\n          calculatedHeight = maxHeight;\n        }\n      }\n\n      (0, _LogUtils.warn)(calculatedWidth > 0 || calculatedHeight > 0, 'The width(%s) and height(%s) of chart should be greater than 0,\\n       please check the style of container, or the props width(%s) and height(%s),\\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\\n       height and width.', calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);\n\n      return _react2.default.cloneElement(children, {\n        width: calculatedWidth,\n        height: calculatedHeight\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          minWidth = _props2.minWidth,\n          minHeight = _props2.minHeight,\n          width = _props2.width,\n          height = _props2.height,\n          maxHeight = _props2.maxHeight,\n          id = _props2.id,\n          className = _props2.className;\n\n      var style = { width: width, height: height, minWidth: minWidth, minHeight: minHeight, maxHeight: maxHeight };\n\n      return _react2.default.createElement(\n        'div',\n        {\n          id: id,\n          className: (0, _classnames2.default)('recharts-responsive-container', className),\n          style: style,\n          ref: function ref(node) {\n            _this2.container = node;\n          }\n        },\n        this.renderChart(),\n        _react2.default.createElement(_reactResizeDetector2.default, { handleWidth: true, handleHeight: true, onResize: this.handleResize })\n      );\n    }\n  }]);\n\n  return ResponsiveContainer;\n}(_react.Component), _class.displayName = 'ResponsiveContainer', _class.propTypes = {\n  aspect: _propTypes2.default.number,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  minHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  minWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  maxHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  children: _propTypes2.default.node.isRequired,\n  debounce: _propTypes2.default.number,\n  id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])\n}, _class.defaultProps = {\n  width: '100%',\n  height: '100%',\n  debounce: 0\n}, _temp);\nexports.default = ResponsiveContainer;"},"hash":"aca021f78fb4f379fddbe336c9aa62a5"}