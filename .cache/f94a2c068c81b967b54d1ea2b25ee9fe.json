{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":5,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":9,"column":31}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":13,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":17,"column":25}},{"name":"react","loc":{"line":21,"column":21}},{"name":"prop-types","loc":{"line":25,"column":25}},{"name":"lodash.get","loc":{"line":29,"column":22}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.get');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar TableCell = function (_React$Component) {\n  (0, _inherits3['default'])(TableCell, _React$Component);\n\n  function TableCell() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3['default'])(this, TableCell);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          record = _this$props.record,\n          onCellClick = _this$props.column.onCellClick;\n\n      if (onCellClick) {\n        onCellClick(record, e);\n      }\n    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);\n  }\n\n  TableCell.prototype.isInvalidRenderCellText = function isInvalidRenderCellText(text) {\n    return text && !_react2['default'].isValidElement(text) && Object.prototype.toString.call(text) === '[object Object]';\n  };\n\n  TableCell.prototype.render = function render() {\n    var _props = this.props,\n        record = _props.record,\n        indentSize = _props.indentSize,\n        prefixCls = _props.prefixCls,\n        indent = _props.indent,\n        index = _props.index,\n        expandIcon = _props.expandIcon,\n        column = _props.column,\n        BodyCell = _props.component;\n    var dataIndex = column.dataIndex,\n        render = column.render,\n        _column$className = column.className,\n        className = _column$className === undefined ? '' : _column$className;\n\n    // We should return undefined if no dataIndex is specified, but in order to\n    // be compatible with object-path's behavior, we return the record object instead.\n\n    var text = void 0;\n    if (typeof dataIndex === 'number') {\n      text = (0, _lodash2['default'])(record, dataIndex);\n    } else if (!dataIndex || dataIndex.length === 0) {\n      text = record;\n    } else {\n      text = (0, _lodash2['default'])(record, dataIndex);\n    }\n    var tdProps = {};\n    var colSpan = void 0;\n    var rowSpan = void 0;\n\n    if (render) {\n      text = render(text, record, index);\n      if (this.isInvalidRenderCellText(text)) {\n        tdProps = text.props || tdProps;\n        colSpan = tdProps.colSpan;\n        rowSpan = tdProps.rowSpan;\n        text = text.children;\n      }\n    }\n\n    if (column.onCell) {\n      tdProps = (0, _extends3['default'])({}, tdProps, column.onCell(record));\n    }\n\n    // Fix https://github.com/ant-design/ant-design/issues/1202\n    if (this.isInvalidRenderCellText(text)) {\n      text = null;\n    }\n\n    var indentText = expandIcon ? _react2['default'].createElement('span', {\n      style: { paddingLeft: indentSize * indent + 'px' },\n      className: prefixCls + '-indent indent-level-' + indent\n    }) : null;\n\n    if (rowSpan === 0 || colSpan === 0) {\n      return null;\n    }\n\n    if (column.align) {\n      tdProps.style = { textAlign: column.align };\n    }\n\n    return _react2['default'].createElement(\n      BodyCell,\n      (0, _extends3['default'])({\n        className: className,\n        onClick: this.handleClick\n      }, tdProps),\n      indentText,\n      expandIcon,\n      text\n    );\n  };\n\n  return TableCell;\n}(_react2['default'].Component);\n\nTableCell.propTypes = {\n  record: _propTypes2['default'].object,\n  prefixCls: _propTypes2['default'].string,\n  index: _propTypes2['default'].number,\n  indent: _propTypes2['default'].number,\n  indentSize: _propTypes2['default'].number,\n  column: _propTypes2['default'].object,\n  expandIcon: _propTypes2['default'].node,\n  component: _propTypes2['default'].any\n};\nexports['default'] = TableCell;\nmodule.exports = exports['default'];"},"hash":"16b787f4e4b2ad1b245a01af1793b374"}