{"dependencies":[{"name":"babel-runtime/helpers/typeof","loc":{"line":7,"column":23}},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":11,"column":31}},{"name":"babel-runtime/helpers/extends","loc":{"line":15,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":19,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":23,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":27,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":31,"column":25}},{"name":"react","loc":{"line":35,"column":21}},{"name":"rc-select","loc":{"line":39,"column":24}},{"name":"classnames","loc":{"line":41,"column":26}},{"name":"../select","loc":{"line":45,"column":22}},{"name":"../input","loc":{"line":49,"column":21}},{"name":"./InputElement","loc":{"line":53,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _rcSelect = require('rc-select');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _select = require('../select');\n\nvar _select2 = _interopRequireDefault(_select);\n\nvar _input = require('../input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _InputElement = require('./InputElement');\n\nvar _InputElement2 = _interopRequireDefault(_InputElement);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n    return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function (_React$Component) {\n    (0, _inherits3['default'])(AutoComplete, _React$Component);\n\n    function AutoComplete() {\n        (0, _classCallCheck3['default'])(this, AutoComplete);\n\n        var _this = (0, _possibleConstructorReturn3['default'])(this, (AutoComplete.__proto__ || Object.getPrototypeOf(AutoComplete)).apply(this, arguments));\n\n        _this.getInputElement = function () {\n            var children = _this.props.children;\n\n            var element = children && React.isValidElement(children) && children.type !== _rcSelect.Option ? React.Children.only(_this.props.children) : React.createElement(_input2['default'], null);\n            var elementProps = (0, _extends3['default'])({}, element.props);\n            // https://github.com/ant-design/ant-design/pull/7742\n            delete elementProps.children;\n            return React.createElement(\n                _InputElement2['default'],\n                elementProps,\n                element\n            );\n        };\n        _this.saveSelect = function (node) {\n            _this.select = node;\n        };\n        return _this;\n    }\n\n    (0, _createClass3['default'])(AutoComplete, [{\n        key: 'focus',\n        value: function focus() {\n            this.select.focus();\n        }\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.select.blur();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _classNames;\n\n            var _props = this.props,\n                size = _props.size,\n                _props$className = _props.className,\n                className = _props$className === undefined ? '' : _props$className,\n                notFoundContent = _props.notFoundContent,\n                prefixCls = _props.prefixCls,\n                optionLabelProp = _props.optionLabelProp,\n                dataSource = _props.dataSource,\n                children = _props.children;\n\n            var cls = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-lg', size === 'large'), (0, _defineProperty3['default'])(_classNames, prefixCls + '-sm', size === 'small'), (0, _defineProperty3['default'])(_classNames, className, !!className), (0, _defineProperty3['default'])(_classNames, prefixCls + '-show-search', true), (0, _defineProperty3['default'])(_classNames, prefixCls + '-auto-complete', true), _classNames));\n            var options = void 0;\n            var childArray = React.Children.toArray(children);\n            if (childArray.length && isSelectOptionOrSelectOptGroup(childArray[0])) {\n                options = children;\n            } else {\n                options = dataSource ? dataSource.map(function (item) {\n                    if (React.isValidElement(item)) {\n                        return item;\n                    }\n                    switch (typeof item === 'undefined' ? 'undefined' : (0, _typeof3['default'])(item)) {\n                        case 'string':\n                            return React.createElement(\n                                _rcSelect.Option,\n                                { key: item },\n                                item\n                            );\n                        case 'object':\n                            return React.createElement(\n                                _rcSelect.Option,\n                                { key: item.value },\n                                item.text\n                            );\n                        default:\n                            throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n                    }\n                }) : [];\n            }\n            return React.createElement(\n                _select2['default'],\n                (0, _extends3['default'])({}, this.props, { className: cls, mode: 'combobox', optionLabelProp: optionLabelProp, getInputElement: this.getInputElement, notFoundContent: notFoundContent, ref: this.saveSelect }),\n                options\n            );\n        }\n    }]);\n    return AutoComplete;\n}(React.Component);\n\nexports['default'] = AutoComplete;\n\nAutoComplete.Option = _rcSelect.Option;\nAutoComplete.OptGroup = _rcSelect.OptGroup;\nAutoComplete.defaultProps = {\n    prefixCls: 'ant-select',\n    transitionName: 'slide-up',\n    optionLabelProp: 'children',\n    choiceTransitionName: 'zoom',\n    showSearch: false,\n    filterOption: false\n};\nmodule.exports = exports['default'];"},"hash":"36cb65ae6f3a64b9e1901c9d840cf560"}