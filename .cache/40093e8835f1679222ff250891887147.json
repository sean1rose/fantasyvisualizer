{"dependencies":[{"name":"react","loc":{"line":15,"column":21}},{"name":"react-motion","loc":{"line":19,"column":27}},{"name":"lodash/pick","loc":{"line":21,"column":20}},{"name":"../../../lib/colors","loc":{"line":25,"column":22}},{"name":"../Container","loc":{"line":27,"column":25}},{"name":"./enhance","loc":{"line":31,"column":23}},{"name":"./motion","loc":{"line":35,"column":22}},{"name":"./interactivity","loc":{"line":37,"column":29}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactMotion = require('react-motion');\n\nvar _pick = require('lodash/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _colors = require('../../../lib/colors');\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _enhance = require('./enhance');\n\nvar _enhance2 = _interopRequireDefault(_enhance);\n\nvar _motion = require('./motion');\n\nvar _interactivity = require('./interactivity');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BubbleHtml = function BubbleHtml(_ref) {\n    var nodes = _ref.nodes,\n        nodeComponent = _ref.nodeComponent,\n        margin = _ref.margin,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        theme = _ref.theme,\n        borderWidth = _ref.borderWidth,\n        getBorderColor = _ref.getBorderColor,\n        getLabelTextColor = _ref.getLabelTextColor,\n        animate = _ref.animate,\n        motionStiffness = _ref.motionStiffness,\n        motionDamping = _ref.motionDamping,\n        isInteractive = _ref.isInteractive,\n        onClick = _ref.onClick,\n        isZoomable = _ref.isZoomable,\n        zoomToNode = _ref.zoomToNode;\n\n    var springConfig = {\n        stiffness: motionStiffness,\n        damping: motionDamping\n    };\n\n    var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n        return (0, _interactivity.getNodeHandlers)(node, {\n            isInteractive: isInteractive,\n            onClick: onClick,\n            showTooltip: showTooltip,\n            hideTooltip: hideTooltip,\n            isZoomable: isZoomable,\n            zoomToNode: zoomToNode,\n            theme: theme\n        });\n    };\n\n    return _react2.default.createElement(\n        _Container2.default,\n        { isInteractive: isInteractive, theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n            return _react2.default.createElement(\n                'div',\n                {\n                    style: {\n                        position: 'relative',\n                        width: outerWidth,\n                        height: outerHeight\n                    }\n                },\n                !animate && _react2.default.createElement(\n                    'div',\n                    { style: { position: 'absolute', top: margin.top, left: margin.left } },\n                    nodes.map(function (node) {\n                        return _react2.default.createElement(nodeComponent, {\n                            key: node.path,\n                            node: node,\n                            style: _extends({}, (0, _pick2.default)(node, ['scale', 'r', 'x', 'y', 'color']), {\n                                borderWidth: borderWidth,\n                                borderColor: getBorderColor(node),\n                                labelTextColor: getLabelTextColor(node)\n                            }),\n                            handlers: getHandlers(node, showTooltip, hideTooltip)\n                        });\n                    })\n                ),\n                animate && _react2.default.createElement(\n                    _reactMotion.TransitionMotion,\n                    {\n                        willEnter: _motion.nodeWillEnter,\n                        willLeave: (0, _motion.nodeWillLeave)(springConfig),\n                        styles: nodes.map(function (node) {\n                            return {\n                                key: node.path,\n                                data: node,\n                                style: _extends({\n                                    scale: (0, _reactMotion.spring)(1, springConfig),\n                                    r: (0, _reactMotion.spring)(node.r, springConfig),\n                                    x: (0, _reactMotion.spring)(node.x, springConfig),\n                                    y: (0, _reactMotion.spring)(node.y, springConfig),\n                                    opacity: (0, _reactMotion.spring)(1, springConfig)\n                                }, (0, _colors.colorMotionSpring)(node.color, springConfig))\n                            };\n                        })\n                    },\n                    function (interpolatedStyles) {\n                        return _react2.default.createElement(\n                            'div',\n                            {\n                                style: {\n                                    position: 'absolute',\n                                    top: margin.top,\n                                    left: margin.left\n                                }\n                            },\n                            interpolatedStyles.map(function (_ref3) {\n                                var style = _ref3.style,\n                                    node = _ref3.data;\n\n                                style.color = (0, _colors.getInterpolatedColor)(style);\n\n                                return _react2.default.createElement(nodeComponent, {\n                                    key: node.path,\n                                    node: node,\n                                    style: _extends({}, style, {\n                                        borderWidth: borderWidth,\n                                        borderColor: getBorderColor(style),\n                                        labelTextColor: getLabelTextColor(style)\n                                    }),\n                                    handlers: getHandlers(node, showTooltip, hideTooltip)\n                                });\n                            })\n                        );\n                    }\n                )\n            );\n        }\n    );\n};\n\nBubbleHtml.displayName = 'BubbleHtml';\n\nexports.default = (0, _enhance2.default)(BubbleHtml);"},"hash":"389338adb5f2bfa7eceb036150651f36"}