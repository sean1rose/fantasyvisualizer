{"dependencies":[{"name":"react","loc":{"line":16,"column":21}},{"name":"prop-types","loc":{"line":20,"column":25}},{"name":"classnames","loc":{"line":24,"column":26}},{"name":"../util/PureRender","loc":{"line":28,"column":26}},{"name":"../util/ReactUtils","loc":{"line":32,"column":26}},{"name":"../util/PolarUtils","loc":{"line":34,"column":26}},{"name":"../util/DataUtils","loc":{"line":36,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp; /**\n                             * @fileOverview Sector\n                             */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nvar _PolarUtils = require('../util/PolarUtils');\n\nvar _DataUtils = require('../util/DataUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {\n  var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);\n  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);\n\n  return sign * deltaAngle;\n};\n\nvar getTangentCircle = function getTangentCircle(_ref) {\n  var cx = _ref.cx,\n      cy = _ref.cy,\n      radius = _ref.radius,\n      angle = _ref.angle,\n      sign = _ref.sign,\n      isExternal = _ref.isExternal,\n      cornerRadius = _ref.cornerRadius;\n\n  var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;\n  var theta = Math.asin(cornerRadius / centerRadius) / _PolarUtils.RADIAN;\n  var centerAngle = angle + sign * theta;\n  var center = (0, _PolarUtils.polarToCartesian)(cx, cy, centerRadius, centerAngle);\n  // The coordinate of point which is tangent to the circle\n  var circleTangency = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, centerAngle);\n  // The coordinate of point which is tangent to the radius line\n  var lineTangency = (0, _PolarUtils.polarToCartesian)(cx, cy, centerRadius * Math.cos(theta * _PolarUtils.RADIAN), angle);\n\n  return { center: center, circleTangency: circleTangency, lineTangency: lineTangency, theta: theta };\n};\n\nvar getSectorPath = function getSectorPath(_ref2) {\n  var cx = _ref2.cx,\n      cy = _ref2.cy,\n      innerRadius = _ref2.innerRadius,\n      outerRadius = _ref2.outerRadius,\n      startAngle = _ref2.startAngle,\n      endAngle = _ref2.endAngle;\n\n  var angle = getDeltaAngle(startAngle, endAngle);\n\n  // When the angle of sector equals to 360, star point and end point coincide\n  var tempEndAngle = startAngle + angle;\n  var outerStartPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, startAngle);\n  var outerEndPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, tempEndAngle);\n\n  var path = 'M ' + outerStartPoint.x + ',' + outerStartPoint.y + '\\n    A ' + outerRadius + ',' + outerRadius + ',0,\\n    ' + +(Math.abs(angle) > 180) + ',' + +(startAngle > tempEndAngle) + ',\\n    ' + outerEndPoint.x + ',' + outerEndPoint.y + '\\n  ';\n\n  if (innerRadius > 0) {\n    var innerStartPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, startAngle);\n    var innerEndPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, tempEndAngle);\n    path += 'L ' + innerEndPoint.x + ',' + innerEndPoint.y + '\\n            A ' + innerRadius + ',' + innerRadius + ',0,\\n            ' + +(Math.abs(angle) > 180) + ',' + +(startAngle <= tempEndAngle) + ',\\n            ' + innerStartPoint.x + ',' + innerStartPoint.y + ' Z';\n  } else {\n    path += 'L ' + cx + ',' + cy + ' Z';\n  }\n\n  return path;\n};\n\nvar getSectorWithCorner = function getSectorWithCorner(_ref3) {\n  var cx = _ref3.cx,\n      cy = _ref3.cy,\n      innerRadius = _ref3.innerRadius,\n      outerRadius = _ref3.outerRadius,\n      cornerRadius = _ref3.cornerRadius,\n      startAngle = _ref3.startAngle,\n      endAngle = _ref3.endAngle;\n\n  var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);\n\n  var _getTangentCircle = getTangentCircle({\n    cx: cx, cy: cy, radius: outerRadius, angle: startAngle, sign: sign, cornerRadius: cornerRadius\n  }),\n      soct = _getTangentCircle.circleTangency,\n      solt = _getTangentCircle.lineTangency,\n      sot = _getTangentCircle.theta;\n\n  var _getTangentCircle2 = getTangentCircle({\n    cx: cx, cy: cy, radius: outerRadius, angle: endAngle, sign: -sign, cornerRadius: cornerRadius\n  }),\n      eoct = _getTangentCircle2.circleTangency,\n      eolt = _getTangentCircle2.lineTangency,\n      eot = _getTangentCircle2.theta;\n\n  var outerArcAngle = Math.abs(startAngle - endAngle) - sot - eot;\n\n  if (outerArcAngle < 0) {\n    return getSectorPath({\n      cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius, startAngle: startAngle, endAngle: endAngle\n    });\n  }\n\n  var path = 'M ' + solt.x + ',' + solt.y + '\\n    A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + soct.x + ',' + soct.y + '\\n    A' + outerRadius + ',' + outerRadius + ',0,' + +(outerArcAngle > 180) + ',' + +(sign < 0) + ',' + eoct.x + ',' + eoct.y + '\\n    A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + eolt.x + ',' + eolt.y + '\\n  ';\n\n  if (innerRadius > 0) {\n    var _getTangentCircle3 = getTangentCircle({\n      cx: cx, cy: cy, radius: innerRadius, angle: startAngle, sign: sign, isExternal: true, cornerRadius: cornerRadius\n    }),\n        sict = _getTangentCircle3.circleTangency,\n        silt = _getTangentCircle3.lineTangency,\n        sit = _getTangentCircle3.theta;\n\n    var _getTangentCircle4 = getTangentCircle({\n      cx: cx, cy: cy, radius: innerRadius, angle: endAngle, sign: -sign, isExternal: true, cornerRadius: cornerRadius\n    }),\n        eict = _getTangentCircle4.circleTangency,\n        eilt = _getTangentCircle4.lineTangency,\n        eit = _getTangentCircle4.theta;\n\n    var innerArcAngle = Math.abs(startAngle - endAngle) - sit - eit;\n\n    if (innerArcAngle < 0) {\n      return path + 'L' + cx + ',' + cy + 'Z';\n    }\n\n    path += 'L' + eilt.x + ',' + eilt.y + '\\n      A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + eict.x + ',' + eict.y + '\\n      A' + innerRadius + ',' + innerRadius + ',0,' + +(innerArcAngle > 180) + ',' + +(sign > 0) + ',' + sict.x + ',' + sict.y + '\\n      A' + cornerRadius + ',' + cornerRadius + ',0,0,' + +(sign < 0) + ',' + silt.x + ',' + silt.y + 'Z';\n  } else {\n    path += 'L' + cx + ',' + cy + 'Z';\n  }\n\n  return path;\n};\n\nvar Sector = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {\n  _inherits(Sector, _Component);\n\n  function Sector() {\n    _classCallCheck(this, Sector);\n\n    return _possibleConstructorReturn(this, (Sector.__proto__ || Object.getPrototypeOf(Sector)).apply(this, arguments));\n  }\n\n  _createClass(Sector, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          cx = _props.cx,\n          cy = _props.cy,\n          innerRadius = _props.innerRadius,\n          outerRadius = _props.outerRadius,\n          cornerRadius = _props.cornerRadius,\n          startAngle = _props.startAngle,\n          endAngle = _props.endAngle,\n          className = _props.className;\n\n\n      if (outerRadius < innerRadius || startAngle === endAngle) {\n        return null;\n      }\n\n      var layerClass = (0, _classnames2.default)('recharts-sector', className);\n      var deltaRadius = outerRadius - innerRadius;\n      var cr = (0, _DataUtils.getPercentValue)(cornerRadius, deltaRadius, 0, true);\n      var path = void 0;\n\n      if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {\n        path = getSectorWithCorner({\n          cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius,\n          cornerRadius: Math.min(cr, deltaRadius / 2),\n          startAngle: startAngle, endAngle: endAngle\n        });\n      } else {\n        path = getSectorPath({ cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius, startAngle: startAngle, endAngle: endAngle });\n      }\n\n      return _react2.default.createElement('path', _extends({}, (0, _ReactUtils.getPresentationAttributes)(this.props), (0, _ReactUtils.filterEventAttributes)(this.props), {\n        className: layerClass,\n        d: path\n      }));\n    }\n  }]);\n\n  return Sector;\n}(_react.Component), _class2.displayName = 'Sector', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, {\n  className: _propTypes2.default.string,\n  cx: _propTypes2.default.number,\n  cy: _propTypes2.default.number,\n  innerRadius: _propTypes2.default.number,\n  outerRadius: _propTypes2.default.number,\n  startAngle: _propTypes2.default.number,\n  endAngle: _propTypes2.default.number,\n  cornerRadius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n}), _class2.defaultProps = {\n  cx: 0,\n  cy: 0,\n  innerRadius: 0,\n  outerRadius: 0,\n  startAngle: 0,\n  endAngle: 0,\n  cornerRadius: 0\n}, _temp)) || _class;\n\nexports.default = Sector;"},"hash":"4a3e1d826108276ec75cfce7273efc7f"}