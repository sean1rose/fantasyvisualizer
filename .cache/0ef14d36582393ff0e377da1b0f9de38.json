{"dependencies":[{"name":"react","loc":{"line":5,"column":21}},{"name":"../Container","loc":{"line":9,"column":25}},{"name":"./enhance","loc":{"line":13,"column":23}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _enhance = require('./enhance');\n\nvar _enhance2 = _interopRequireDefault(_enhance);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016-present, Raphaël Benitte.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar BubbleCanvas = function (_Component) {\n    _inherits(BubbleCanvas, _Component);\n\n    function BubbleCanvas() {\n        _classCallCheck(this, BubbleCanvas);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    BubbleCanvas.prototype.componentDidMount = function componentDidMount() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    BubbleCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    BubbleCanvas.prototype.draw = function draw(props) {\n        var _this2 = this;\n\n        var nodes = props.nodes,\n            pixelRatio = props.pixelRatio,\n            margin = props.margin,\n            outerWidth = props.outerWidth,\n            outerHeight = props.outerHeight,\n            borderWidth = props.borderWidth,\n            getBorderColor = props.getBorderColor,\n            enableLabel = props.enableLabel,\n            getLabel = props.getLabel,\n            labelSkipRadius = props.labelSkipRadius,\n            getLabelTextColor = props.getLabelTextColor;\n\n\n        this.surface.width = outerWidth * pixelRatio;\n        this.surface.height = outerHeight * pixelRatio;\n\n        this.ctx.scale(pixelRatio, pixelRatio);\n        this.ctx.clearRect(0, 0, outerWidth, outerHeight);\n        this.ctx.translate(margin.left, margin.top);\n\n        /*\n        Could be used to compute metaballs,\n        grouping nodes by depth + common parent\n        using marching squares, but it really is a bonus feature…\n         const maxDepth = _.maxBy(nodes, 'depth').depth\n        const nodesByDepth = _.range(maxDepth + 1).map(depth =>\n            _.values(\n                _.groupBy(nodes.filter(({ depth: nodeDepth }) => nodeDepth === depth), 'parent.id')\n            )\n        )\n        nodesByDepth.forEach(layer => {\n            layer.forEach(node => {\n                console.log(node)\n            })\n        })\n        */\n\n        nodes.forEach(function (node) {\n            _this2.ctx.save();\n\n            if (borderWidth > 0) {\n                _this2.ctx.strokeStyle = getBorderColor(node);\n                _this2.ctx.lineWidth = borderWidth;\n            }\n\n            _this2.ctx.beginPath();\n            _this2.ctx.arc(node.x, node.y, node.r, 0, 2 * Math.PI);\n            _this2.ctx.fillStyle = node.color;\n            _this2.ctx.fill();\n\n            if (borderWidth > 0) {\n                _this2.ctx.stroke();\n            }\n        });\n\n        if (enableLabel) {\n            this.ctx.textAlign = 'center';\n            this.ctx.textBaseline = 'middle';\n\n            // draw labels on top\n            nodes.filter(function (_ref) {\n                var r = _ref.r;\n                return r > labelSkipRadius;\n            }).forEach(function (node) {\n                var label = getLabel(node);\n                var labelTextColor = getLabelTextColor(node);\n\n                _this2.ctx.fillStyle = labelTextColor;\n                _this2.ctx.fillText(label, node.x, node.y);\n            });\n        }\n    };\n\n    BubbleCanvas.prototype.render = function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            outerWidth = _props.outerWidth,\n            outerHeight = _props.outerHeight,\n            pixelRatio = _props.pixelRatio,\n            isInteractive = _props.isInteractive,\n            theme = _props.theme;\n\n\n        return _react2.default.createElement(\n            _Container2.default,\n            { isInteractive: isInteractive, theme: theme },\n            function (_ref2) {\n                var showTooltip = _ref2.showTooltip,\n                    hideTooltip = _ref2.hideTooltip;\n                return _react2.default.createElement('canvas', {\n                    ref: function ref(surface) {\n                        _this3.surface = surface;\n                    },\n                    width: outerWidth * pixelRatio,\n                    height: outerHeight * pixelRatio,\n                    style: {\n                        width: outerWidth,\n                        height: outerHeight\n                    }\n                });\n            }\n        );\n    };\n\n    return BubbleCanvas;\n}(_react.Component);\n\nBubbleCanvas.displayName = 'BubbleCanvas';\n\nexports.default = (0, _enhance2.default)(BubbleCanvas);"},"hash":"57d273ab64056a89ce421167b23837f0"}