{"dependencies":[{"name":"react","loc":{"line":15,"column":21}},{"name":"../Container","loc":{"line":19,"column":25}},{"name":"../SvgWrapper","loc":{"line":23,"column":26}},{"name":"./enhance","loc":{"line":27,"column":23}},{"name":"./props","loc":{"line":31,"column":21}},{"name":"./ChordRibbons","loc":{"line":33,"column":28}},{"name":"./ChordArcs","loc":{"line":37,"column":25}},{"name":"./ChordLabels","loc":{"line":41,"column":27}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _SvgWrapper = require('../SvgWrapper');\n\nvar _SvgWrapper2 = _interopRequireDefault(_SvgWrapper);\n\nvar _enhance = require('./enhance');\n\nvar _enhance2 = _interopRequireDefault(_enhance);\n\nvar _props = require('./props');\n\nvar _ChordRibbons = require('./ChordRibbons');\n\nvar _ChordRibbons2 = _interopRequireDefault(_ChordRibbons);\n\nvar _ChordArcs = require('./ChordArcs');\n\nvar _ChordArcs2 = _interopRequireDefault(_ChordArcs);\n\nvar _ChordLabels = require('./ChordLabels');\n\nvar _ChordLabels2 = _interopRequireDefault(_ChordLabels);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Chord = function Chord(_ref) {\n    var margin = _ref.margin,\n        width = _ref.width,\n        height = _ref.height,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        arcBorderWidth = _ref.arcBorderWidth,\n        getArcBorderColor = _ref.getArcBorderColor,\n        ribbonBorderWidth = _ref.ribbonBorderWidth,\n        getRibbonBorderColor = _ref.getRibbonBorderColor,\n        enableLabel = _ref.enableLabel,\n        getLabel = _ref.getLabel,\n        labelOffset = _ref.labelOffset,\n        labelRotation = _ref.labelRotation,\n        getLabelTextColor = _ref.getLabelTextColor,\n        arcGenerator = _ref.arcGenerator,\n        ribbonGenerator = _ref.ribbonGenerator,\n        theme = _ref.theme,\n        isInteractive = _ref.isInteractive,\n        tooltipFormat = _ref.tooltipFormat,\n        animate = _ref.animate,\n        motionDamping = _ref.motionDamping,\n        motionStiffness = _ref.motionStiffness,\n        ribbons = _ref.ribbons,\n        arcs = _ref.arcs,\n        radius = _ref.radius,\n        setCurrentArc = _ref.setCurrentArc,\n        setCurrentRibbon = _ref.setCurrentRibbon,\n        getArcOpacity = _ref.getArcOpacity,\n        getRibbonOpacity = _ref.getRibbonOpacity;\n\n    var centerX = width / 2;\n    var centerY = height / 2;\n\n    var motionProps = {\n        animate: animate,\n        motionDamping: motionDamping,\n        motionStiffness: motionStiffness\n    };\n\n    return _react2.default.createElement(\n        _Container2.default,\n        { isInteractive: isInteractive, theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n\n            return _react2.default.createElement(\n                _SvgWrapper2.default,\n                { width: outerWidth, height: outerHeight, margin: margin },\n                _react2.default.createElement(\n                    'g',\n                    { transform: 'translate(' + centerX + ', ' + centerY + ')' },\n                    _react2.default.createElement(_ChordRibbons2.default, _extends({\n                        ribbons: ribbons,\n                        shapeGenerator: ribbonGenerator,\n                        borderWidth: ribbonBorderWidth,\n                        getBorderColor: getRibbonBorderColor,\n                        getOpacity: getRibbonOpacity,\n                        setCurrent: setCurrentRibbon,\n                        theme: theme,\n                        tooltipFormat: tooltipFormat,\n                        showTooltip: showTooltip,\n                        hideTooltip: hideTooltip\n                    }, motionProps)),\n                    _react2.default.createElement(_ChordArcs2.default, _extends({\n                        arcs: arcs,\n                        shapeGenerator: arcGenerator,\n                        borderWidth: arcBorderWidth,\n                        getBorderColor: getArcBorderColor,\n                        getOpacity: getArcOpacity,\n                        setCurrent: setCurrentArc,\n                        theme: theme,\n                        tooltipFormat: tooltipFormat,\n                        showTooltip: showTooltip,\n                        hideTooltip: hideTooltip\n                    }, motionProps)),\n                    enableLabel && _react2.default.createElement(_ChordLabels2.default, _extends({\n                        arcs: arcs,\n                        radius: radius + labelOffset,\n                        rotation: labelRotation,\n                        getLabel: getLabel,\n                        getColor: getLabelTextColor,\n                        theme: theme\n                    }, motionProps))\n                )\n            );\n        }\n    );\n};\n\nChord.propTypes = _props.ChordPropTypes;\n\nexports.default = (0, _enhance2.default)(Chord);"},"hash":"9921cf4b85a8324364f7fc8b1d7d2f03"}