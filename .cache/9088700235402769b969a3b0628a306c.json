{"dependencies":[{"name":"./utils","loc":{"line":6,"column":21}},{"name":"../bridge","loc":{"line":8,"column":22}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.getPolarLabelProps = undefined;\n\nvar _utils = require('./utils');\n\nvar _bridge = require('../bridge');\n\n/**\n * @param {number} radius\n * @param {number} angle          angle (radians)\n * @param {number} [rotation=0]   label rotation (degrees)\n * @param {string} [engine='svg'] one of: 'svg', 'canvas'\n * @return {{ x: number, y: number, rotate: number, align: string, baseline: string }}\n */\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nvar getPolarLabelProps = exports.getPolarLabelProps = function getPolarLabelProps(radius, angle, rotation) {\n    var engine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'svg';\n\n    var textProps = _bridge.textPropsByEngine[engine];\n\n    var _positionFromAngle = (0, _utils.positionFromAngle)(angle - Math.PI / 2, radius),\n        x = _positionFromAngle.x,\n        y = _positionFromAngle.y;\n\n    var rotate = (0, _utils.radiansToDegrees)(angle);\n    var align = textProps.align.center;\n    var baseline = textProps.baseline.bottom;\n\n    if (rotation > 0) {\n        align = textProps.align.right;\n        baseline = textProps.baseline.center;\n    } else if (rotation < 0) {\n        align = textProps.align.left;\n        baseline = textProps.baseline.center;\n    }\n\n    // reverse labels after 180°\n    if (rotation !== 0 && rotate > 180) {\n        rotate -= 180;\n        align = align === textProps.align.right ? textProps.align.left : textProps.align.right;\n    }\n\n    rotate += rotation;\n\n    return { x: x, y: y, rotate: rotate, align: align, baseline: baseline };\n};"},"hash":"d8212508e380d520357db8720e54dd55"}