{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":5,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":9,"column":31}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":13,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":17,"column":25}},{"name":"react","loc":{"line":21,"column":21}},{"name":"react-dom","loc":{"line":25,"column":24}},{"name":"prop-types","loc":{"line":27,"column":25}},{"name":"rc-util/lib/Children/toArray","loc":{"line":31,"column":23}},{"name":"rc-menu","loc":{"line":35,"column":22}},{"name":"dom-scroll-into-view","loc":{"line":39,"column":33}},{"name":"./util","loc":{"line":43,"column":20}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _toArray = require('rc-util/lib/Children/toArray');\n\nvar _toArray2 = _interopRequireDefault(_toArray);\n\nvar _rcMenu = require('rc-menu');\n\nvar _rcMenu2 = _interopRequireDefault(_rcMenu);\n\nvar _domScrollIntoView = require('dom-scroll-into-view');\n\nvar _domScrollIntoView2 = _interopRequireDefault(_domScrollIntoView);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar DropdownMenu = function (_React$Component) {\n  (0, _inherits3['default'])(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3['default'])(this, DropdownMenu);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.scrollActiveItemToView = function () {\n      // scroll into view\n      var itemComponent = (0, _reactDom.findDOMNode)(_this.firstActiveItem);\n      var props = _this.props;\n\n      if (itemComponent) {\n        var scrollIntoViewOpts = {\n          onlyScrollIfNeeded: true\n        };\n        if ((!props.value || props.value.length === 0) && props.firstActiveValue) {\n          scrollIntoViewOpts.alignWithTop = true;\n        }\n\n        (0, _domScrollIntoView2['default'])(itemComponent, (0, _reactDom.findDOMNode)(_this.menuRef), scrollIntoViewOpts);\n      }\n    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);\n  }\n\n  DropdownMenu.prototype.componentWillMount = function componentWillMount() {\n    this.lastInputValue = this.props.inputValue;\n  };\n\n  DropdownMenu.prototype.componentDidMount = function componentDidMount() {\n    this.scrollActiveItemToView();\n    this.lastVisible = this.props.visible;\n  };\n\n  DropdownMenu.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (!nextProps.visible) {\n      this.lastVisible = false;\n    }\n    // freeze when hide\n    return nextProps.visible;\n  };\n\n  DropdownMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var props = this.props;\n    if (!prevProps.visible && props.visible) {\n      this.scrollActiveItemToView();\n    }\n    this.lastVisible = props.visible;\n    this.lastInputValue = props.inputValue;\n  };\n\n  DropdownMenu.prototype.renderMenu = function renderMenu() {\n    var _this2 = this;\n\n    var props = this.props;\n    var menuItems = props.menuItems,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        value = props.value,\n        prefixCls = props.prefixCls,\n        multiple = props.multiple,\n        onMenuSelect = props.onMenuSelect,\n        inputValue = props.inputValue,\n        firstActiveValue = props.firstActiveValue;\n\n    if (menuItems && menuItems.length) {\n      var menuProps = {};\n      if (multiple) {\n        menuProps.onDeselect = props.onMenuDeselect;\n        menuProps.onSelect = onMenuSelect;\n      } else {\n        menuProps.onClick = onMenuSelect;\n      }\n\n      var selectedKeys = (0, _util.getSelectKeys)(menuItems, value);\n      var activeKeyProps = {};\n\n      var clonedMenuItems = menuItems;\n      if (selectedKeys.length || firstActiveValue) {\n        if (props.visible && !this.lastVisible) {\n          activeKeyProps.activeKey = selectedKeys[0] || firstActiveValue;\n        }\n        var foundFirst = false;\n        // set firstActiveItem via cloning menus\n        // for scroll into view\n        var clone = function clone(item) {\n          if (!foundFirst && selectedKeys.indexOf(item.key) !== -1 || !foundFirst && !selectedKeys.length && firstActiveValue.indexOf(item.key) !== -1) {\n            foundFirst = true;\n            return (0, _react.cloneElement)(item, {\n              ref: function ref(_ref) {\n                _this2.firstActiveItem = _ref;\n              }\n            });\n          }\n          return item;\n        };\n\n        clonedMenuItems = menuItems.map(function (item) {\n          if (item.type.isMenuItemGroup) {\n            var children = (0, _toArray2['default'])(item.props.children).map(clone);\n            return (0, _react.cloneElement)(item, {}, children);\n          }\n          return clone(item);\n        });\n      }\n\n      // clear activeKey when inputValue change\n      var lastValue = value && value[value.length - 1];\n      if (inputValue !== this.lastInputValue && (!lastValue || !lastValue.backfill)) {\n        activeKeyProps.activeKey = '';\n      }\n\n      return _react2['default'].createElement(\n        _rcMenu2['default'],\n        (0, _extends3['default'])({\n          ref: (0, _util.saveRef)(this, 'menuRef'),\n          style: this.props.dropdownMenuStyle,\n          defaultActiveFirst: defaultActiveFirstOption\n        }, activeKeyProps, {\n          multiple: multiple,\n          focusable: false\n        }, menuProps, {\n          selectedKeys: selectedKeys,\n          prefixCls: prefixCls + '-menu'\n        }),\n        clonedMenuItems\n      );\n    }\n    return null;\n  };\n\n  DropdownMenu.prototype.render = function render() {\n    var renderMenu = this.renderMenu();\n    return renderMenu ? _react2['default'].createElement(\n      'div',\n      {\n        style: { overflow: 'auto' },\n        onFocus: this.props.onPopupFocus,\n        onMouseDown: _util.preventDefaultEvent,\n        onScroll: this.props.onPopupScroll\n      },\n      renderMenu\n    ) : null;\n  };\n\n  return DropdownMenu;\n}(_react2['default'].Component);\n\nDropdownMenu.propTypes = {\n  defaultActiveFirstOption: _propTypes2['default'].bool,\n  value: _propTypes2['default'].any,\n  dropdownMenuStyle: _propTypes2['default'].object,\n  multiple: _propTypes2['default'].bool,\n  onPopupFocus: _propTypes2['default'].func,\n  onPopupScroll: _propTypes2['default'].func,\n  onMenuDeSelect: _propTypes2['default'].func,\n  onMenuSelect: _propTypes2['default'].func,\n  prefixCls: _propTypes2['default'].string,\n  menuItems: _propTypes2['default'].any,\n  inputValue: _propTypes2['default'].string,\n  visible: _propTypes2['default'].bool\n};\nexports['default'] = DropdownMenu;\n\n\nDropdownMenu.displayName = 'DropdownMenu';\nmodule.exports = exports['default'];"},"hash":"6d3bc2b32ae361dc499e6bf832e72a96"}