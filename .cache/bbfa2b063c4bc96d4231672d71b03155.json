{"dependencies":[{"name":"react","loc":{"line":16,"column":21}},{"name":"prop-types","loc":{"line":20,"column":25}},{"name":"classnames","loc":{"line":24,"column":26}},{"name":"../util/PureRender","loc":{"line":28,"column":26}},{"name":"../container/Surface","loc":{"line":32,"column":23}},{"name":"../shape/Symbols","loc":{"line":36,"column":23}},{"name":"../util/ReactUtils","loc":{"line":40,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp; /**\n                             * @fileOverview Default Legend Content\n                             */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _Surface = require('../container/Surface');\n\nvar _Surface2 = _interopRequireDefault(_Surface);\n\nvar _Symbols = require('../shape/Symbols');\n\nvar _Symbols2 = _interopRequireDefault(_Symbols);\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SIZE = 32;\nvar ICON_TYPES = _ReactUtils.LEGEND_TYPES.filter(function (type) {\n  return type !== 'none';\n});\n\nvar DefaultLegendContent = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {\n  _inherits(DefaultLegendContent, _Component);\n\n  function DefaultLegendContent() {\n    _classCallCheck(this, DefaultLegendContent);\n\n    return _possibleConstructorReturn(this, (DefaultLegendContent.__proto__ || Object.getPrototypeOf(DefaultLegendContent)).apply(this, arguments));\n  }\n\n  _createClass(DefaultLegendContent, [{\n    key: 'renderIcon',\n\n\n    /**\n     * Render the path of icon\n     * @param {Object} data Data of each legend item\n     * @return {String} Path element\n     */\n    value: function renderIcon(data) {\n      var inactiveColor = this.props.inactiveColor;\n\n      var halfSize = SIZE / 2;\n      var sixthSize = SIZE / 6;\n      var thirdSize = SIZE / 3;\n      var color = data.inactive ? inactiveColor : data.color;\n\n      if (data.type === 'plainline') {\n        return _react2.default.createElement('line', {\n          strokeWidth: 4,\n          fill: 'none',\n          stroke: color,\n          strokeDasharray: data.payload.strokeDasharray,\n          x1: 0,\n          y1: halfSize,\n          x2: SIZE,\n          y2: halfSize,\n          className: 'recharts-legend-icon'\n        });\n      } else if (data.type === 'line') {\n        return _react2.default.createElement('path', {\n          strokeWidth: 4,\n          fill: 'none',\n          stroke: color,\n          d: 'M0,' + halfSize + 'h' + thirdSize + '\\n            A' + sixthSize + ',' + sixthSize + ',0,1,1,' + 2 * thirdSize + ',' + halfSize + '\\n            H' + SIZE + 'M' + 2 * thirdSize + ',' + halfSize + '\\n            A' + sixthSize + ',' + sixthSize + ',0,1,1,' + thirdSize + ',' + halfSize,\n          className: 'recharts-legend-icon'\n        });\n      } else if (data.type === 'rect') {\n        return _react2.default.createElement('path', {\n          stroke: 'none',\n          fill: color,\n          d: 'M0,' + SIZE / 8 + 'h' + SIZE + 'v' + SIZE * 3 / 4 + 'h' + -SIZE + 'z',\n          className: 'recharts-legend-icon'\n        });\n      }\n\n      return _react2.default.createElement(_Symbols2.default, {\n        fill: color,\n        cx: halfSize,\n        cy: halfSize,\n        size: SIZE,\n        sizeType: 'diameter',\n        type: data.type\n      });\n    }\n\n    /**\n     * Draw items of legend\n     * @return {ReactElement} Items\n     */\n\n  }, {\n    key: 'renderItems',\n    value: function renderItems() {\n      var _this2 = this;\n\n      var _props = this.props,\n          payload = _props.payload,\n          iconSize = _props.iconSize,\n          layout = _props.layout,\n          formatter = _props.formatter;\n\n      var viewBox = { x: 0, y: 0, width: SIZE, height: SIZE };\n      var itemStyle = {\n        display: layout === 'horizontal' ? 'inline-block' : 'block',\n        marginRight: 10\n      };\n      var svgStyle = { display: 'inline-block', verticalAlign: 'middle', marginRight: 4 };\n\n      return payload.map(function (entry, i) {\n        var _classNames;\n\n        var finalFormatter = entry.formatter || formatter;\n        var className = (0, _classnames2.default)((_classNames = {\n          'recharts-legend-item': true\n        }, _defineProperty(_classNames, 'legend-item-' + i, true), _defineProperty(_classNames, 'inactive', entry.inactive), _classNames));\n\n        if (entry.type === 'none') {\n          return null;\n        }\n\n        return _react2.default.createElement(\n          'li',\n          _extends({\n            className: className,\n            style: itemStyle,\n            key: 'legend-item-' + i\n          }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i)),\n          _react2.default.createElement(\n            _Surface2.default,\n            { width: iconSize, height: iconSize, viewBox: viewBox, style: svgStyle },\n            _this2.renderIcon(entry)\n          ),\n          _react2.default.createElement(\n            'span',\n            { className: 'recharts-legend-item-text' },\n            finalFormatter ? finalFormatter(entry.value, entry, i) : entry.value\n          )\n        );\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          payload = _props2.payload,\n          layout = _props2.layout,\n          align = _props2.align;\n\n\n      if (!payload || !payload.length) {\n        return null;\n      }\n\n      var finalStyle = {\n        padding: 0,\n        margin: 0,\n        textAlign: layout === 'horizontal' ? align : 'left'\n      };\n\n      return _react2.default.createElement(\n        'ul',\n        { className: 'recharts-default-legend', style: finalStyle },\n        this.renderItems()\n      );\n    }\n  }]);\n\n  return DefaultLegendContent;\n}(_react.Component), _class2.displayName = 'Legend', _class2.propTypes = {\n  content: _propTypes2.default.element,\n  iconSize: _propTypes2.default.number,\n  iconType: _propTypes2.default.oneOf(ICON_TYPES),\n  layout: _propTypes2.default.oneOf(['horizontal', 'vertical']),\n  align: _propTypes2.default.oneOf(['center', 'left', 'right']),\n  verticalAlign: _propTypes2.default.oneOf(['top', 'bottom', 'middle']),\n  payload: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    value: _propTypes2.default.any,\n    id: _propTypes2.default.any,\n    type: _propTypes2.default.oneOf(_ReactUtils.LEGEND_TYPES)\n  })),\n  inactiveColor: _propTypes2.default.string,\n  formatter: _propTypes2.default.func,\n  onMouseEnter: _propTypes2.default.func,\n  onMouseLeave: _propTypes2.default.func,\n  onClick: _propTypes2.default.func\n}, _class2.defaultProps = {\n  iconSize: 14,\n  layout: 'horizontal',\n  align: 'center',\n  verticalAlign: 'middle',\n  inactiveColor: '#ccc'\n}, _temp)) || _class;\n\nexports.default = DefaultLegendContent;"},"hash":"6bdbc891ca1ed311967c5d0cd47615fb"}