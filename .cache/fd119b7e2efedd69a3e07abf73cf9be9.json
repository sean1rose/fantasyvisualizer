{"dependencies":[{"name":"react","loc":{"line":15,"column":21}},{"name":"prop-types","loc":{"line":19,"column":25}},{"name":"react-motion","loc":{"line":23,"column":27}},{"name":"recompose/pure","loc":{"line":25,"column":20}},{"name":"../../../lib/colors","loc":{"line":29,"column":22}},{"name":"./ChordArcTooltip","loc":{"line":31,"column":31}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMotion = require('react-motion');\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _colors = require('../../../lib/colors');\n\nvar _ChordArcTooltip = require('./ChordArcTooltip');\n\nvar _ChordArcTooltip2 = _interopRequireDefault(_ChordArcTooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChordArcs = function ChordArcs(_ref) {\n    var arcs = _ref.arcs,\n        borderWidth = _ref.borderWidth,\n        getBorderColor = _ref.getBorderColor,\n        getOpacity = _ref.getOpacity,\n        shapeGenerator = _ref.shapeGenerator,\n        theme = _ref.theme,\n        tooltipFormat = _ref.tooltipFormat,\n        setCurrent = _ref.setCurrent,\n        showTooltip = _ref.showTooltip,\n        hideTooltip = _ref.hideTooltip,\n        animate = _ref.animate,\n        motionDamping = _ref.motionDamping,\n        motionStiffness = _ref.motionStiffness;\n\n    var commonProps = function commonProps(arc) {\n        var arcTooltip = _react2.default.createElement(_ChordArcTooltip2.default, { arc: arc, theme: theme, format: tooltipFormat });\n\n        return {\n            strokeWidth: borderWidth,\n            onMouseEnter: function onMouseEnter(e) {\n                setCurrent(arc);\n                showTooltip(arcTooltip, e);\n            },\n            onMouseMove: function onMouseMove(e) {\n                showTooltip(arcTooltip, e);\n            },\n            onMouseLeave: function onMouseLeave() {\n                setCurrent(null);\n                hideTooltip();\n            }\n        };\n    };\n\n    if (animate !== true) {\n        return _react2.default.createElement(\n            'g',\n            null,\n            arcs.map(function (arc) {\n                var opacity = getOpacity(arc);\n\n                return _react2.default.createElement('path', _extends({\n                    key: arc.key,\n                    d: shapeGenerator(arc),\n                    fill: arc.color,\n                    fillOpacity: opacity,\n                    stroke: getBorderColor(arc),\n                    strokeOpacity: opacity\n                }, commonProps(arc)));\n            })\n        );\n    }\n\n    var springConfig = {\n        damping: motionDamping,\n        stiffness: motionStiffness,\n        precision: 0.001\n    };\n\n    return _react2.default.createElement(\n        _reactMotion.TransitionMotion,\n        {\n            styles: arcs.map(function (arc) {\n                return {\n                    key: arc.key,\n                    data: arc,\n                    style: _extends({\n                        startAngle: (0, _reactMotion.spring)(arc.startAngle, springConfig),\n                        endAngle: (0, _reactMotion.spring)(arc.endAngle, springConfig),\n                        opacity: (0, _reactMotion.spring)(getOpacity(arc), springConfig)\n                    }, (0, _colors.colorMotionSpring)(arc.color, springConfig))\n                };\n            })\n        },\n        function (interpolatedStyles) {\n            return _react2.default.createElement(\n                'g',\n                null,\n                interpolatedStyles.map(function (_ref2) {\n                    var key = _ref2.key,\n                        style = _ref2.style,\n                        arc = _ref2.data;\n\n                    var color = (0, _colors.getInterpolatedColor)(style);\n\n                    return _react2.default.createElement('path', _extends({\n                        key: key,\n                        d: shapeGenerator({\n                            startAngle: style.startAngle,\n                            endAngle: style.endAngle\n                        }),\n                        fill: color,\n                        fillOpacity: style.opacity,\n                        stroke: getBorderColor(_extends({}, arc, { color: color })),\n                        strokeOpacity: style.opacity\n                    }, commonProps(arc)));\n                })\n            );\n        }\n    );\n};\n\nChordArcs.propTypes = {\n    arcs: _propTypes2.default.array.isRequired,\n    shapeGenerator: _propTypes2.default.func.isRequired,\n    borderWidth: _propTypes2.default.number.isRequired,\n    getOpacity: _propTypes2.default.func.isRequired,\n    setCurrent: _propTypes2.default.func.isRequired,\n    theme: _propTypes2.default.object.isRequired,\n    showTooltip: _propTypes2.default.func.isRequired,\n    hideTooltip: _propTypes2.default.func.isRequired\n};\n\nexports.default = (0, _pure2.default)(ChordArcs);"},"hash":"01784866390dc417c7cb0e560d041d4f"}