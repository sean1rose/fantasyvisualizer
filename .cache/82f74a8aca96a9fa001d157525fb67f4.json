{"dependencies":[{"name":"lodash/isArray","loc":{"line":7,"column":24}},{"name":"react","loc":{"line":20,"column":21}},{"name":"prop-types","loc":{"line":24,"column":25}},{"name":"../util/PureRender","loc":{"line":28,"column":26}},{"name":"../util/DataUtils","loc":{"line":32,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp; /**\n                             * @fileOverview Default Tooltip Content\n                             */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _DataUtils = require('../util/DataUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultFormatter = function defaultFormatter(value) {\n  return (0, _isArray3.default)(value) && (0, _DataUtils.isNumOrStr)(value[0]) && (0, _DataUtils.isNumOrStr)(value[1]) ? value.join(' ~ ') : value;\n};\n\nvar DefaultTooltipContent = (0, _PureRender2.default)(_class = (_temp = _class2 = function (_Component) {\n  _inherits(DefaultTooltipContent, _Component);\n\n  function DefaultTooltipContent() {\n    _classCallCheck(this, DefaultTooltipContent);\n\n    return _possibleConstructorReturn(this, (DefaultTooltipContent.__proto__ || Object.getPrototypeOf(DefaultTooltipContent)).apply(this, arguments));\n  }\n\n  _createClass(DefaultTooltipContent, [{\n    key: 'renderContent',\n    value: function renderContent() {\n      var _props = this.props,\n          payload = _props.payload,\n          separator = _props.separator,\n          formatter = _props.formatter,\n          itemStyle = _props.itemStyle,\n          itemSorter = _props.itemSorter;\n\n\n      if (payload && payload.length) {\n        var listStyle = { padding: 0, margin: 0 };\n\n        var items = payload.sort(itemSorter).map(function (entry, i) {\n          var finalItemStyle = _extends({\n            display: 'block',\n            paddingTop: 4,\n            paddingBottom: 4,\n            color: entry.color || '#000'\n          }, itemStyle);\n          var hasName = (0, _DataUtils.isNumOrStr)(entry.name);\n          var finalFormatter = entry.formatter || formatter || defaultFormatter;\n\n          return _react2.default.createElement(\n            'li',\n            { className: 'recharts-tooltip-item', key: 'tooltip-item-' + i, style: finalItemStyle },\n            hasName ? _react2.default.createElement(\n              'span',\n              { className: 'recharts-tooltip-item-name' },\n              entry.name\n            ) : null,\n            hasName ? _react2.default.createElement(\n              'span',\n              { className: 'recharts-tooltip-item-separator' },\n              separator\n            ) : null,\n            _react2.default.createElement(\n              'span',\n              { className: 'recharts-tooltip-item-value' },\n              finalFormatter ? finalFormatter(entry.value, entry.name, entry, i) : entry.value\n            ),\n            _react2.default.createElement(\n              'span',\n              { className: 'recharts-tooltip-item-unit' },\n              entry.unit || ''\n            )\n          );\n        });\n\n        return _react2.default.createElement(\n          'ul',\n          { className: 'recharts-tooltip-item-list', style: listStyle },\n          items\n        );\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          labelStyle = _props2.labelStyle,\n          label = _props2.label,\n          labelFormatter = _props2.labelFormatter,\n          wrapperStyle = _props2.wrapperStyle;\n\n      var finalStyle = _extends({\n        margin: 0,\n        padding: 10,\n        backgroundColor: '#fff',\n        border: '1px solid #ccc',\n        whiteSpace: 'nowrap'\n      }, wrapperStyle);\n      var finalLabelStyle = _extends({\n        margin: 0\n      }, labelStyle);\n      var hasLabel = (0, _DataUtils.isNumOrStr)(label);\n      var finalLabel = hasLabel ? label : '';\n\n      if (hasLabel && labelFormatter) {\n        finalLabel = labelFormatter(label);\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'recharts-default-tooltip', style: finalStyle },\n        _react2.default.createElement(\n          'p',\n          { className: 'recharts-tooltip-label', style: finalLabelStyle },\n          finalLabel\n        ),\n        this.renderContent()\n      );\n    }\n  }]);\n\n  return DefaultTooltipContent;\n}(_react.Component), _class2.displayName = 'DefaultTooltipContent', _class2.propTypes = {\n  separator: _propTypes2.default.string,\n  formatter: _propTypes2.default.func,\n  wrapperStyle: _propTypes2.default.object,\n  itemStyle: _propTypes2.default.object,\n  labelStyle: _propTypes2.default.object,\n  labelFormatter: _propTypes2.default.func,\n  label: _propTypes2.default.any,\n  payload: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    name: _propTypes2.default.any,\n    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.array]),\n    unit: _propTypes2.default.any\n  })),\n  itemSorter: _propTypes2.default.func\n}, _class2.defaultProps = {\n  separator: ' : ',\n  itemStyle: {},\n  labelStyle: {}\n}, _temp)) || _class;\n\nexports.default = DefaultTooltipContent;"},"hash":"064eb89ce7a3ecee153a8402da023a2e"}