{"dependencies":[{"name":"lodash/isNil","loc":{"line":7,"column":22}},{"name":"lodash/isEqual","loc":{"line":11,"column":24}},{"name":"lodash/isFunction","loc":{"line":15,"column":27}},{"name":"lodash/isArray","loc":{"line":19,"column":24}},{"name":"react","loc":{"line":32,"column":21}},{"name":"prop-types","loc":{"line":36,"column":25}},{"name":"classnames","loc":{"line":40,"column":26}},{"name":"react-smooth","loc":{"line":44,"column":27}},{"name":"../shape/Rectangle","loc":{"line":48,"column":25}},{"name":"../container/Layer","loc":{"line":52,"column":21}},{"name":"./ErrorBar","loc":{"line":56,"column":24}},{"name":"../component/Cell","loc":{"line":60,"column":20}},{"name":"../component/LabelList","loc":{"line":64,"column":25}},{"name":"../util/PureRender","loc":{"line":68,"column":26}},{"name":"../util/DataUtils","loc":{"line":72,"column":25}},{"name":"../util/ReactUtils","loc":{"line":74,"column":26}},{"name":"../util/ChartUtils","loc":{"line":76,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp2; /**\n                              * @fileOverview Render a group of bar\n                              */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactSmooth = require('react-smooth');\n\nvar _reactSmooth2 = _interopRequireDefault(_reactSmooth);\n\nvar _Rectangle = require('../shape/Rectangle');\n\nvar _Rectangle2 = _interopRequireDefault(_Rectangle);\n\nvar _Layer = require('../container/Layer');\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nvar _ErrorBar = require('./ErrorBar');\n\nvar _ErrorBar2 = _interopRequireDefault(_ErrorBar);\n\nvar _Cell = require('../component/Cell');\n\nvar _Cell2 = _interopRequireDefault(_Cell);\n\nvar _LabelList = require('../component/LabelList');\n\nvar _LabelList2 = _interopRequireDefault(_LabelList);\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _DataUtils = require('../util/DataUtils');\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nvar _ChartUtils = require('../util/ChartUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Bar = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {\n  _inherits(Bar, _Component);\n\n  function Bar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Bar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Bar.__proto__ || Object.getPrototypeOf(Bar)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isAnimationFinished: false }, _this.id = (0, _DataUtils.uniqueId)('recharts-bar-'), _this.cachePrevData = function (data) {\n      _this.setState({ prevData: data });\n    }, _this.handleAnimationEnd = function () {\n      _this.setState({ isAnimationFinished: true });\n      _this.props.onAnimationEnd();\n    }, _this.handleAnimationStart = function () {\n      _this.setState({ isAnimationFinished: false });\n      _this.props.onAnimationStart();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Compose the data of each group\n   * @param {Object} props Props for the component\n   * @param {Object} item        An instance of Bar\n   * @param {Array} barPosition  The offset and size of each bar\n   * @param {Object} xAxis       The configuration of x-axis\n   * @param {Object} yAxis       The configuration of y-axis\n   * @param {Array} stackedData  The stacked data of a bar item\n   * @return{Array} Composed data\n   */\n\n\n  _createClass(Bar, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          animationId = _props.animationId,\n          data = _props.data;\n\n\n      if (nextProps.animationId !== animationId) {\n        this.cachePrevData(data);\n      }\n    }\n  }, {\n    key: 'renderRectangle',\n    value: function renderRectangle(option, props) {\n      var rectangle = void 0;\n\n      if (_react2.default.isValidElement(option)) {\n        rectangle = _react2.default.cloneElement(option, props);\n      } else if ((0, _isFunction3.default)(option)) {\n        rectangle = option(props);\n      } else {\n        rectangle = _react2.default.createElement(_Rectangle2.default, props);\n      }\n\n      return rectangle;\n    }\n  }, {\n    key: 'renderRectanglesStatically',\n    value: function renderRectanglesStatically(data) {\n      var _this2 = this;\n\n      var shape = this.props.shape;\n\n      var baseProps = (0, _ReactUtils.getPresentationAttributes)(this.props);\n\n      return data && data.map(function (entry, i) {\n        var props = _extends({}, baseProps, entry, { index: i });\n\n        return _react2.default.createElement(\n          _Layer2.default,\n          _extends({\n            className: 'recharts-bar-rectangle'\n          }, (0, _ReactUtils.filterEventsOfChild)(_this2.props, entry, i), {\n            key: 'rectangle-' + i\n          }),\n          _this2.renderRectangle(shape, props)\n        );\n      });\n    }\n  }, {\n    key: 'renderRectanglesWithAnimation',\n    value: function renderRectanglesWithAnimation() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          layout = _props2.layout,\n          isAnimationActive = _props2.isAnimationActive,\n          animationBegin = _props2.animationBegin,\n          animationDuration = _props2.animationDuration,\n          animationEasing = _props2.animationEasing,\n          animationId = _props2.animationId,\n          width = _props2.width;\n      var prevData = this.state.prevData;\n\n\n      return _react2.default.createElement(\n        _reactSmooth2.default,\n        {\n          begin: animationBegin,\n          duration: animationDuration,\n          isActive: isAnimationActive,\n          easing: animationEasing,\n          from: { t: 0 },\n          to: { t: 1 },\n          key: 'bar-' + animationId,\n          onAnimationEnd: this.handleAnimationEnd,\n          onAnimationStart: this.handleAnimationStart\n        },\n        function (_ref2) {\n          var t = _ref2.t;\n\n          var stepData = data.map(function (entry, index) {\n            var prev = prevData && prevData[index];\n\n            if (prev) {\n              var interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);\n              var interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);\n              var interpolatorWidth = (0, _DataUtils.interpolateNumber)(prev.width, entry.width);\n              var interpolatorHeight = (0, _DataUtils.interpolateNumber)(prev.height, entry.height);\n\n              return _extends({}, entry, {\n                x: interpolatorX(t),\n                y: interpolatorY(t),\n                width: interpolatorWidth(t),\n                height: interpolatorHeight(t)\n              });\n            }\n\n            if (layout === 'horizontal') {\n              var _interpolatorHeight = (0, _DataUtils.interpolateNumber)(0, entry.height);\n              var h = _interpolatorHeight(t);\n\n              return _extends({}, entry, {\n                y: entry.y + entry.height - h,\n                height: h\n              });\n            }\n\n            var interpolator = (0, _DataUtils.interpolateNumber)(0, entry.width);\n            var w = interpolator(t);\n\n            return _extends({}, entry, { width: w });\n          });\n\n          return _react2.default.createElement(\n            _Layer2.default,\n            null,\n            _this3.renderRectanglesStatically(stepData)\n          );\n        }\n      );\n    }\n  }, {\n    key: 'renderRectangles',\n    value: function renderRectangles() {\n      var _props3 = this.props,\n          data = _props3.data,\n          isAnimationActive = _props3.isAnimationActive;\n      var prevData = this.state.prevData;\n\n\n      if (isAnimationActive && data && data.length && (!prevData || !(0, _isEqual3.default)(prevData, data))) {\n        return this.renderRectanglesWithAnimation();\n      }\n\n      return this.renderRectanglesStatically(data);\n    }\n  }, {\n    key: 'renderBackground',\n    value: function renderBackground(sectors) {\n      var _this4 = this;\n\n      var data = this.props.data;\n\n      var backgroundProps = (0, _ReactUtils.getPresentationAttributes)(this.props.background);\n\n      return data.map(function (entry, i) {\n        // eslint-disable-next-line no-unused-vars\n        var value = entry.value,\n            background = entry.background,\n            rest = _objectWithoutProperties(entry, ['value', 'background']);\n\n        if (!background) {\n          return null;\n        }\n\n        var props = _extends({}, rest, {\n          fill: '#eee'\n        }, background, backgroundProps, (0, _ReactUtils.filterEventsOfChild)(_this4.props, entry, i), {\n          index: i,\n          key: 'background-bar-' + i,\n          className: 'recharts-bar-background-rectangle'\n        });\n\n        return _this4.renderRectangle(background, props);\n      });\n    }\n  }, {\n    key: 'renderErrorBar',\n    value: function renderErrorBar() {\n      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n\n      var _props4 = this.props,\n          data = _props4.data,\n          xAxis = _props4.xAxis,\n          yAxis = _props4.yAxis,\n          layout = _props4.layout,\n          children = _props4.children;\n\n      var errorBarItems = (0, _ReactUtils.findAllByType)(children, _ErrorBar2.default);\n\n      if (!errorBarItems) {\n        return null;\n      }\n\n      var offset = layout === 'vertical' ? data[0].height / 2 : data[0].width / 2;\n\n      function dataPointFormatter(dataPoint, dataKey) {\n        return {\n          x: dataPoint.x,\n          y: dataPoint.y,\n          value: dataPoint.value,\n          errorVal: (0, _ChartUtils.getValueByDataKey)(dataPoint, dataKey)\n        };\n      }\n\n      return errorBarItems.map(function (item, i) {\n        return _react2.default.cloneElement(item, {\n          key: i,\n          data: data,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          layout: layout,\n          offset: offset,\n          dataPointFormatter: dataPointFormatter\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          hide = _props5.hide,\n          data = _props5.data,\n          className = _props5.className,\n          xAxis = _props5.xAxis,\n          yAxis = _props5.yAxis,\n          left = _props5.left,\n          top = _props5.top,\n          width = _props5.width,\n          height = _props5.height,\n          isAnimationActive = _props5.isAnimationActive,\n          background = _props5.background,\n          id = _props5.id;\n\n      if (hide || !data || !data.length) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n\n      var layerClass = (0, _classnames2.default)('recharts-bar', className);\n      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;\n      var clipPathId = (0, _isNil3.default)(id) ? this.id : id;\n\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: layerClass },\n        needClip ? _react2.default.createElement(\n          'defs',\n          null,\n          _react2.default.createElement(\n            'clipPath',\n            { id: 'clipPath-' + clipPathId },\n            _react2.default.createElement('rect', { x: left, y: top, width: width, height: height })\n          )\n        ) : null,\n        _react2.default.createElement(\n          _Layer2.default,\n          {\n            className: 'recharts-bar-rectangles',\n            clipPath: needClip ? 'url(#clipPath-' + clipPathId + ')' : null\n          },\n          background ? this.renderBackground() : null,\n          this.renderRectangles()\n        ),\n        this.renderErrorBar(),\n        (!isAnimationActive || isAnimationFinished) && _LabelList2.default.renderCallByParent(this.props, data)\n      );\n    }\n  }]);\n\n  return Bar;\n}(_react.Component), _class2.displayName = 'Bar', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {\n  className: _propTypes2.default.string,\n  layout: _propTypes2.default.oneOf(['vertical', 'horizontal']),\n  xAxisId: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  yAxisId: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  yAxis: _propTypes2.default.object,\n  xAxis: _propTypes2.default.object,\n  stackId: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  barSize: _propTypes2.default.number,\n  unit: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  name: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  dataKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  legendType: _propTypes2.default.oneOf(_ReactUtils.LEGEND_TYPES),\n  minPointSize: _propTypes2.default.number,\n  maxBarSize: _propTypes2.default.number,\n  hide: _propTypes2.default.bool,\n\n  shape: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  data: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    x: _propTypes2.default.number,\n    y: _propTypes2.default.number,\n    width: _propTypes2.default.number,\n    height: _propTypes2.default.number,\n    radius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array]),\n    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.array])\n  })),\n  onAnimationStart: _propTypes2.default.func,\n  onAnimationEnd: _propTypes2.default.func,\n\n  animationId: _propTypes2.default.number,\n  isAnimationActive: _propTypes2.default.bool,\n  animationBegin: _propTypes2.default.number,\n  animationDuration: _propTypes2.default.number,\n  animationEasing: _propTypes2.default.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear']),\n  id: _propTypes2.default.string\n}), _class2.defaultProps = {\n  xAxisId: 0,\n  yAxisId: 0,\n  legendType: 'rect',\n  minPointSize: 0,\n  hide: false,\n  // data of bar\n  data: [],\n  layout: 'vertical',\n  isAnimationActive: !(0, _ReactUtils.isSsr)(),\n  animationBegin: 0,\n  animationDuration: 400,\n  animationEasing: 'ease',\n\n  onAnimationStart: function onAnimationStart() {},\n  onAnimationEnd: function onAnimationEnd() {}\n}, _class2.getComposedData = function (_ref3) {\n  var props = _ref3.props,\n      item = _ref3.item,\n      barPosition = _ref3.barPosition,\n      bandSize = _ref3.bandSize,\n      xAxis = _ref3.xAxis,\n      yAxis = _ref3.yAxis,\n      xAxisTicks = _ref3.xAxisTicks,\n      yAxisTicks = _ref3.yAxisTicks,\n      stackedData = _ref3.stackedData,\n      dataStartIndex = _ref3.dataStartIndex,\n      displayedData = _ref3.displayedData,\n      offset = _ref3.offset;\n\n  var pos = (0, _ChartUtils.findPositionOfBar)(barPosition, item);\n  if (!pos) {\n    return [];\n  }\n\n  var layout = props.layout;\n  var _item$props = item.props,\n      dataKey = _item$props.dataKey,\n      children = _item$props.children,\n      minPointSize = _item$props.minPointSize;\n\n  var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n  var baseValue = (0, _ChartUtils.getBaseValueOfBar)({ props: props, numericAxis: numericAxis });\n  var cells = (0, _ReactUtils.findAllByType)(children, _Cell2.default);\n\n  var rects = displayedData.map(function (entry, index) {\n    var value = void 0,\n        x = void 0,\n        y = void 0,\n        width = void 0,\n        height = void 0,\n        background = void 0;\n\n    if (stackedData) {\n      value = (0, _ChartUtils.truncateByDomain)(stackedData[dataStartIndex + index], stackedDomain);\n    } else {\n      value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey);\n\n      if (!(0, _isArray3.default)(value)) {\n        value = [baseValue, value];\n      }\n    }\n\n    if (layout === 'horizontal') {\n      x = (0, _ChartUtils.getCateCoordinateOfBar)({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      y = yAxis.scale(value[1]);\n      width = pos.size;\n      height = yAxis.scale(value[0]) - yAxis.scale(value[1]);\n      background = { x: x, y: yAxis.y, width: width, height: yAxis.height };\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {\n        var delta = (0, _DataUtils.mathSign)(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));\n\n        y -= delta;\n        height += delta;\n      }\n    } else {\n      x = xAxis.scale(value[0]);\n      y = (0, _ChartUtils.getCateCoordinateOfBar)({\n        axis: yAxis,\n        ticks: yAxisTicks,\n        bandSize: bandSize,\n        offset: pos.offset,\n        entry: entry,\n        index: index\n      });\n      width = xAxis.scale(value[1]) - xAxis.scale(value[0]);\n      height = pos.size;\n      background = { x: xAxis.x, y: y, width: xAxis.width, height: height };\n\n      if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {\n        var _delta = (0, _DataUtils.mathSign)(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));\n        width += _delta;\n      }\n    }\n\n    return _extends({}, entry, {\n      x: x, y: y, width: width, height: height, value: stackedData ? value : value[1],\n      payload: entry,\n      background: background\n    }, cells && cells[index] && cells[index].props);\n  });\n\n  return _extends({ data: rects, layout: layout }, offset);\n}, _temp2)) || _class;\n\nexports.default = Bar;"},"hash":"c2e470f7e9d50a2a397882f6f9219637"}