{"dependencies":[{"name":"lodash/partial","loc":{"line":5,"column":24}},{"name":"react","loc":{"line":11,"column":21}},{"name":"react-motion","loc":{"line":15,"column":27}},{"name":"../../../lib/colors","loc":{"line":17,"column":22}},{"name":"./props","loc":{"line":19,"column":22}},{"name":"../../../lib/charts/heatmap","loc":{"line":21,"column":23}},{"name":"./enhance","loc":{"line":23,"column":23}},{"name":"../Container","loc":{"line":27,"column":25}},{"name":"../SvgWrapper","loc":{"line":31,"column":26}},{"name":"../../axes/Grid","loc":{"line":35,"column":20}},{"name":"../../axes/Axes","loc":{"line":39,"column":20}},{"name":"./HeatMapCellRect","loc":{"line":43,"column":31}},{"name":"./HeatMapCellCircle","loc":{"line":47,"column":33}},{"name":"./HeatMapCellTooltip","loc":{"line":51,"column":34}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _partial2 = require('lodash/partial');\n\nvar _partial3 = _interopRequireDefault(_partial2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactMotion = require('react-motion');\n\nvar _colors = require('../../../lib/colors');\n\nvar _props2 = require('./props');\n\nvar _heatmap = require('../../../lib/charts/heatmap');\n\nvar _enhance = require('./enhance');\n\nvar _enhance2 = _interopRequireDefault(_enhance);\n\nvar _Container = require('../Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _SvgWrapper = require('../SvgWrapper');\n\nvar _SvgWrapper2 = _interopRequireDefault(_SvgWrapper);\n\nvar _Grid = require('../../axes/Grid');\n\nvar _Grid2 = _interopRequireDefault(_Grid);\n\nvar _Axes = require('../../axes/Axes');\n\nvar _Axes2 = _interopRequireDefault(_Axes);\n\nvar _HeatMapCellRect = require('./HeatMapCellRect');\n\nvar _HeatMapCellRect2 = _interopRequireDefault(_HeatMapCellRect);\n\nvar _HeatMapCellCircle = require('./HeatMapCellCircle');\n\nvar _HeatMapCellCircle2 = _interopRequireDefault(_HeatMapCellCircle);\n\nvar _HeatMapCellTooltip = require('./HeatMapCellTooltip');\n\nvar _HeatMapCellTooltip2 = _interopRequireDefault(_HeatMapCellTooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar HeatMap = function (_Component) {\n    _inherits(HeatMap, _Component);\n\n    function HeatMap() {\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, HeatMap);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleNodeHover = function (showTooltip, node, event) {\n            var _this$props = _this.props,\n                setCurrentNode = _this$props.setCurrentNode,\n                theme = _this$props.theme,\n                tooltipFormat = _this$props.tooltipFormat;\n\n            setCurrentNode(node);\n            showTooltip(_react2.default.createElement(_HeatMapCellTooltip2.default, { node: node, theme: theme, format: tooltipFormat }), event);\n        }, _this.handleNodeLeave = function (hideTooltip) {\n            _this.props.setCurrentNode(null);\n            hideTooltip();\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    HeatMap.prototype.render = function render() {\n        var _this2 = this;\n\n        var _props = this.props,\n            xScale = _props.xScale,\n            yScale = _props.yScale,\n            offsetX = _props.offsetX,\n            offsetY = _props.offsetY,\n            margin = _props.margin,\n            width = _props.width,\n            height = _props.height,\n            outerWidth = _props.outerWidth,\n            outerHeight = _props.outerHeight,\n            cellShape = _props.cellShape,\n            cellBorderWidth = _props.cellBorderWidth,\n            getCellBorderColor = _props.getCellBorderColor,\n            axisTop = _props.axisTop,\n            axisRight = _props.axisRight,\n            axisBottom = _props.axisBottom,\n            axisLeft = _props.axisLeft,\n            enableGridX = _props.enableGridX,\n            enableGridY = _props.enableGridY,\n            enableLabels = _props.enableLabels,\n            getLabelTextColor = _props.getLabelTextColor,\n            theme = _props.theme,\n            animate = _props.animate,\n            motionStiffness = _props.motionStiffness,\n            motionDamping = _props.motionDamping,\n            boundSpring = _props.boundSpring,\n            isInteractive = _props.isInteractive;\n\n\n        var Cell = void 0;\n        if (cellShape === 'rect') {\n            Cell = _HeatMapCellRect2.default;\n        } else if (cellShape === 'circle') {\n            Cell = _HeatMapCellCircle2.default;\n        } else {\n            Cell = cellShape;\n        }\n\n        var nodes = (0, _heatmap.computeNodes)(this.props);\n\n        var motionProps = {\n            animate: animate,\n            motionDamping: motionDamping,\n            motionStiffness: motionStiffness\n        };\n\n        return _react2.default.createElement(\n            _Container2.default,\n            { isInteractive: isInteractive, theme: theme },\n            function (_ref) {\n                var showTooltip = _ref.showTooltip,\n                    hideTooltip = _ref.hideTooltip;\n\n                var onHover = (0, _partial3.default)(_this2.handleNodeHover, showTooltip);\n                var onLeave = (0, _partial3.default)(_this2.handleNodeLeave, hideTooltip);\n\n                return _react2.default.createElement(\n                    _SvgWrapper2.default,\n                    {\n                        width: outerWidth,\n                        height: outerHeight,\n                        margin: Object.assign({}, margin, {\n                            top: margin.top + offsetY,\n                            left: margin.left + offsetX\n                        })\n                    },\n                    _react2.default.createElement(_Grid2.default, _extends({\n                        theme: theme,\n                        width: width - offsetX * 2,\n                        height: height - offsetY * 2,\n                        xScale: enableGridX ? xScale : null,\n                        yScale: enableGridY ? yScale : null\n                    }, motionProps)),\n                    _react2.default.createElement(_Axes2.default, _extends({\n                        xScale: xScale,\n                        yScale: yScale,\n                        width: width,\n                        height: height,\n                        theme: theme,\n                        top: axisTop,\n                        right: axisRight,\n                        bottom: axisBottom,\n                        left: axisLeft\n                    }, motionProps)),\n                    !animate && nodes.map(function (node) {\n                        return _react2.default.createElement(Cell, {\n                            key: node.key,\n                            value: node.value,\n                            x: node.x,\n                            y: node.y,\n                            width: node.width,\n                            height: node.height,\n                            color: node.color,\n                            opacity: node.opacity,\n                            borderWidth: cellBorderWidth,\n                            borderColor: getCellBorderColor(node),\n                            textColor: getLabelTextColor(node),\n                            onHover: (0, _partial3.default)(onHover, node),\n                            onLeave: onLeave\n                        });\n                    }),\n                    animate === true && _react2.default.createElement(\n                        _reactMotion.TransitionMotion,\n                        {\n                            styles: nodes.map(function (node) {\n                                return {\n                                    key: node.key,\n                                    data: node,\n                                    style: _extends({\n                                        x: boundSpring(node.x),\n                                        y: boundSpring(node.y),\n                                        width: boundSpring(node.width),\n                                        height: boundSpring(node.height),\n                                        opacity: boundSpring(node.opacity)\n                                    }, (0, _colors.colorMotionSpring)(node.color, {\n                                        damping: motionDamping,\n                                        stiffness: motionStiffness\n                                    }))\n                                };\n                            })\n                        },\n                        function (interpolatedStyles) {\n                            return _react2.default.createElement(\n                                'g',\n                                null,\n                                interpolatedStyles.map(function (_ref2) {\n                                    var key = _ref2.key,\n                                        style = _ref2.style,\n                                        node = _ref2.data;\n\n                                    var color = (0, _colors.getInterpolatedColor)(style);\n\n                                    return _react2.default.createElement(Cell, {\n                                        key: key,\n                                        value: node.value,\n                                        x: style.x,\n                                        y: style.y,\n                                        width: Math.max(style.width, 0),\n                                        height: Math.max(style.height, 0),\n                                        color: color,\n                                        opacity: style.opacity,\n                                        borderWidth: cellBorderWidth,\n                                        borderColor: getCellBorderColor(_extends({}, node, {\n                                            color: color\n                                        })),\n                                        textColor: getLabelTextColor(_extends({}, node, {\n                                            color: color\n                                        })),\n                                        onHover: (0, _partial3.default)(onHover, node),\n                                        onLeave: onLeave\n                                    });\n                                })\n                            );\n                        }\n                    )\n                );\n            }\n        );\n    };\n\n    return HeatMap;\n}(_react.Component);\n\nHeatMap.propTypes = _props2.HeatMapPropTypes;\nexports.default = (0, _enhance2.default)(HeatMap);"},"hash":"b0c9792ebd5d10af52f78a3feff3cb15"}