{"dependencies":[{"name":"lodash/isFunction","loc":{"line":6,"column":27}},{"name":"react","loc":{"line":20,"column":21}},{"name":"prop-types","loc":{"line":24,"column":25}},{"name":"d3-format","loc":{"line":28,"column":24}},{"name":"recompose/compose","loc":{"line":30,"column":23}},{"name":"recompose/withPropsOnChange","loc":{"line":34,"column":33}},{"name":"recompose/pure","loc":{"line":38,"column":20}},{"name":"react-motion","loc":{"line":42,"column":27}},{"name":"../../hocs","loc":{"line":44,"column":20}},{"name":"../../lib/axes","loc":{"line":46,"column":20}},{"name":"./AxisTick","loc":{"line":48,"column":24}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.axisPropType = undefined;\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require('d3-format');\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _reactMotion = require('react-motion');\n\nvar _hocs = require('../../hocs');\n\nvar _axes = require('../../lib/axes');\n\nvar _AxisTick = require('./AxisTick');\n\nvar _AxisTick2 = _interopRequireDefault(_AxisTick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar axisPositions = ['top', 'right', 'bottom', 'left'];\nvar legendPositions = ['start', 'center', 'end'];\n\nvar axisPropType = exports.axisPropType = _propTypes2.default.shape({\n    orient: _propTypes2.default.oneOf(axisPositions),\n\n    // ticks\n    tickValues: _propTypes2.default.array,\n    tickSize: _propTypes2.default.number,\n    tickPadding: _propTypes2.default.number,\n    tickRotation: _propTypes2.default.number,\n    format: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n\n    // legend\n    legend: _propTypes2.default.string,\n    legendPosition: _propTypes2.default.oneOf(legendPositions),\n    legendOffset: _propTypes2.default.number\n});\n\nvar willEnter = function willEnter() {\n    return {\n        opacity: 0,\n        x: 0,\n        y: 0\n    };\n};\n\nvar willLeave = function willLeave(springConfig) {\n    return function (_ref) {\n        var _ref$style = _ref.style,\n            x = _ref$style.x,\n            y = _ref$style.y;\n        return {\n            opacity: (0, _reactMotion.spring)(0, springConfig),\n            x: (0, _reactMotion.spring)(x.val, springConfig),\n            y: (0, _reactMotion.spring)(y.val, springConfig)\n        };\n    };\n};\n\nvar Axis = function Axis(_ref2) {\n    var scale = _ref2.scale,\n        width = _ref2.width,\n        height = _ref2.height,\n        _position = _ref2.position,\n        tickValues = _ref2.tickValues,\n        tickCount = _ref2.tickCount,\n        tickSize = _ref2.tickSize,\n        tickPadding = _ref2.tickPadding,\n        tickRotation = _ref2.tickRotation,\n        format = _ref2.format,\n        _legend = _ref2.legend,\n        legendPosition = _ref2.legendPosition,\n        legendOffset = _ref2.legendOffset,\n        theme = _ref2.theme,\n        animate = _ref2.animate,\n        motionStiffness = _ref2.motionStiffness,\n        motionDamping = _ref2.motionDamping,\n        onClick = _ref2.onClick;\n\n    var _computeAxisTicks = (0, _axes.computeAxisTicks)({\n        width: width,\n        height: height,\n        scale: scale,\n        position: _position,\n        tickValues: tickValues,\n        tickCount: tickCount,\n        tickSize: tickSize,\n        tickPadding: tickPadding,\n        tickRotation: tickRotation\n    }),\n        x = _computeAxisTicks.x,\n        y = _computeAxisTicks.y,\n        ticks = _computeAxisTicks.ticks,\n        textAlign = _computeAxisTicks.textAlign,\n        textBaseline = _computeAxisTicks.textBaseline;\n\n    var legend = null;\n    if (_legend !== undefined) {\n        var legendX = 0;\n        var legendY = 0;\n        var legendRotation = 0;\n        var textAnchor = void 0;\n\n        if (['left', 'right'].includes(_position)) {\n            legendRotation = -90;\n            legendX = legendOffset;\n            if (legendPosition === 'start') {\n                textAnchor = 'start';\n                legendY = height;\n            } else if (legendPosition === 'center') {\n                textAnchor = 'middle';\n                legendY = height / 2;\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end';\n            }\n        } else {\n            legendY = legendOffset;\n            if (legendPosition === 'start') {\n                textAnchor = 'start';\n            } else if (legendPosition === 'center') {\n                textAnchor = 'middle';\n                legendX = width / 2;\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end';\n                legendX = width;\n            }\n        }\n\n        legend = _react2.default.createElement(\n            'text',\n            {\n                fill: theme.axis.legendColor,\n                transform: 'translate(' + legendX + ', ' + legendY + ') rotate(' + legendRotation + ')',\n                textAnchor: textAnchor,\n                style: { fontSize: theme.axis.legendFontSize }\n            },\n            _legend\n        );\n    }\n\n    var tickElements = void 0;\n    if (!animate) {\n        tickElements = _react2.default.createElement(\n            'g',\n            null,\n            ticks.map(function (tick) {\n                return _react2.default.createElement(_AxisTick2.default, _extends({\n                    key: tick.key,\n                    value: tick.key,\n                    format: format,\n                    lineX: tick.lineX,\n                    lineY: tick.lineY,\n                    rotate: tickRotation,\n                    textX: tick.textX,\n                    textY: tick.textY,\n                    textBaseline: textBaseline,\n                    textAnchor: textAlign,\n                    theme: theme,\n                    x: tick.x,\n                    y: tick.y\n                }, onClick ? { onClick: onClick } : {}));\n            })\n        );\n    } else {\n        var springConfig = {\n            stiffness: motionStiffness,\n            damping: motionDamping\n        };\n\n        tickElements = _react2.default.createElement(\n            _reactMotion.TransitionMotion,\n            {\n                willEnter: willEnter,\n                willLeave: willLeave(springConfig),\n                styles: ticks.map(function (tick) {\n                    return {\n                        key: '' + tick.key,\n                        data: tick,\n                        style: {\n                            opacity: (0, _reactMotion.spring)(1, springConfig),\n                            x: (0, _reactMotion.spring)(tick.x, springConfig),\n                            y: (0, _reactMotion.spring)(tick.y, springConfig)\n                        }\n                    };\n                })\n            },\n            function (interpolatedStyles) {\n                return _react2.default.createElement(\n                    'g',\n                    null,\n                    interpolatedStyles.map(function (_ref3) {\n                        var key = _ref3.key,\n                            style = _ref3.style,\n                            tick = _ref3.data;\n                        return _react2.default.createElement(_AxisTick2.default, _extends({\n                            key: key,\n                            value: key,\n                            format: format,\n                            lineX: tick.lineX,\n                            lineY: tick.lineY,\n                            rotate: tickRotation,\n                            textX: tick.textX,\n                            textY: tick.textY,\n                            textBaseline: textBaseline,\n                            textAnchor: textAlign,\n                            theme: theme\n                        }, onClick ? { onClick: onClick } : {}, style));\n                    })\n                );\n            }\n        );\n    }\n\n    return _react2.default.createElement(\n        'g',\n        { transform: 'translate(' + x + ',' + y + ')' },\n        legend,\n        tickElements\n    );\n};\n\nAxis.propTypes = {\n    // generic\n    width: _propTypes2.default.number.isRequired,\n    height: _propTypes2.default.number.isRequired,\n    position: _propTypes2.default.oneOf(axisPositions).isRequired,\n    scale: _propTypes2.default.func.isRequired,\n\n    // ticks\n    tickValues: _propTypes2.default.array,\n    tickCount: _propTypes2.default.number,\n    tickSize: _propTypes2.default.number.isRequired,\n    tickPadding: _propTypes2.default.number.isRequired,\n    tickRotation: _propTypes2.default.number.isRequired,\n    format: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n\n    // legend\n    legend: _propTypes2.default.string,\n    legendPosition: _propTypes2.default.oneOf(legendPositions).isRequired,\n    legendOffset: _propTypes2.default.number.isRequired,\n\n    // theming\n    theme: _propTypes2.default.object.isRequired,\n\n    // interactivity\n    onClick: _propTypes2.default.func\n};\n\nAxis.defaultProps = {\n    // ticks\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n\n    // legend\n    legendPosition: 'end',\n    legendOffset: 0\n};\n\nvar enhance = (0, _compose2.default)((0, _hocs.withMotion)(), (0, _withPropsOnChange2.default)(['format'], function (_ref4) {\n    var format = _ref4.format;\n\n    if (!format || (0, _isFunction3.default)(format)) return { format: format };\n    return { format: (0, _d3Format.format)(format) };\n}), _pure2.default);\n\nexports.default = enhance(Axis);"},"hash":"74882d54a3018c1b27047163ada124bc"}