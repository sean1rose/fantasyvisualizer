{"dependencies":[{"name":"d3-hierarchy","loc":{"line":15,"column":27}},{"name":"lodash/cloneDeep","loc":{"line":17,"column":25}},{"name":"recompose/compose","loc":{"line":21,"column":23}},{"name":"recompose/defaultProps","loc":{"line":25,"column":28}},{"name":"recompose/withPropsOnChange","loc":{"line":29,"column":33}},{"name":"recompose/pure","loc":{"line":33,"column":20}},{"name":"../../../hocs","loc":{"line":37,"column":20}},{"name":"../../../lib/propertiesConverters","loc":{"line":39,"column":36}},{"name":"../../../props","loc":{"line":41,"column":21}},{"name":"../../../lib/colors","loc":{"line":43,"column":22}},{"name":"../../../lib/hierarchy","loc":{"line":45,"column":25}},{"name":"../../../lib/defs","loc":{"line":47,"column":20}},{"name":"./props","loc":{"line":49,"column":22}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _d3Hierarchy = require('d3-hierarchy');\n\nvar _cloneDeep = require('lodash/cloneDeep');\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _defaultProps = require('recompose/defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _hocs = require('../../../hocs');\n\nvar _propertiesConverters = require('../../../lib/propertiesConverters');\n\nvar _props = require('../../../props');\n\nvar _colors = require('../../../lib/colors');\n\nvar _hierarchy = require('../../../lib/hierarchy');\n\nvar _defs = require('../../../lib/defs');\n\nvar _props2 = require('./props');\n\nvar props = _interopRequireWildcard(_props2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar commonEnhancers = [(0, _hocs.withHierarchy)(), (0, _hocs.withDimensions)(), (0, _hocs.withColors)({ defaultColorBy: 'depth' }), (0, _hocs.withTheme)(), (0, _hocs.withMotion)(), (0, _withPropsOnChange2.default)(['identity'], function (_ref) {\n    var identity = _ref.identity;\n    return {\n        getIdentity: (0, _propertiesConverters.getAccessorFor)(identity)\n    };\n}), (0, _withPropsOnChange2.default)(['borderColor'], function (_ref2) {\n    var borderColor = _ref2.borderColor;\n    return {\n        getBorderColor: (0, _colors.getInheritedColorGenerator)(borderColor)\n    };\n}), (0, _withPropsOnChange2.default)(['label', 'labelFormat'], function (_ref3) {\n    var label = _ref3.label,\n        labelFormat = _ref3.labelFormat;\n    return {\n        getLabel: (0, _propertiesConverters.getLabelGenerator)(label, labelFormat)\n    };\n}), (0, _withPropsOnChange2.default)(['labelTextColor'], function (_ref4) {\n    var labelTextColor = _ref4.labelTextColor;\n    return {\n        getLabelTextColor: (0, _colors.getInheritedColorGenerator)(labelTextColor)\n    };\n}), (0, _withPropsOnChange2.default)(['width', 'height', 'tile', 'innerPadding', 'outerPadding'], function (_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        tile = _ref5.tile,\n        innerPadding = _ref5.innerPadding,\n        outerPadding = _ref5.outerPadding;\n    return {\n        treemap: (0, _d3Hierarchy.treemap)().size([width, height]).tile((0, _props.treeMapTileFromProp)(tile)).round(true).paddingInner(innerPadding).paddingOuter(outerPadding)\n    };\n}), (0, _withPropsOnChange2.default)(['root', 'treemap', 'leavesOnly', 'getIdentity', 'getColor'], function (_ref6) {\n    var _root = _ref6.root,\n        treemap = _ref6.treemap,\n        leavesOnly = _ref6.leavesOnly,\n        getIdentity = _ref6.getIdentity,\n        getColor = _ref6.getColor;\n\n    var root = (0, _cloneDeep2.default)(_root);\n\n    treemap(root);\n\n    var nodes = leavesOnly ? root.leaves() : root.descendants();\n    nodes = nodes.map(function (d) {\n        d.path = (0, _hierarchy.computeNodePath)(d, getIdentity);\n\n        d.nodeHeight = d.height;\n\n        d.x = d.x0;\n        d.y = d.y0;\n        d.width = d.x1 - d.x0;\n        d.height = d.y1 - d.y0;\n        d.data.color = d.color = getColor(_extends({}, d.data, { depth: d.depth }));\n\n        d.data.id = d.id = getIdentity(d.data);\n        d.data.value = d.value;\n\n        return d;\n    });\n\n    return { nodes: nodes };\n}), (0, _withPropsOnChange2.default)(['enableLabel', 'nodes', 'getLabel', 'labelSkipSize'], function (_ref7) {\n    var enableLabel = _ref7.enableLabel,\n        nodes = _ref7.nodes,\n        getLabel = _ref7.getLabel,\n        labelSkipSize = _ref7.labelSkipSize;\n\n    if (!enableLabel) return;\n\n    var nodesWithLabel = nodes.map(function (node) {\n        if (node.nodeHeight > 0 || labelSkipSize !== 0 && Math.min(node.width, node.height) <= labelSkipSize) return node;\n        return _extends({}, node, { label: getLabel(node.data) });\n    });\n\n    return { nodes: nodesWithLabel };\n})];\n\nvar svgEnhancers = [(0, _withPropsOnChange2.default)(['nodes', 'defs', 'fill'], function (_ref8) {\n    var nodes = _ref8.nodes,\n        defs = _ref8.defs,\n        fill = _ref8.fill;\n\n    return {\n        defs: (0, _defs.bindDefs)(defs, nodes, fill, { targetKey: 'fill' })\n    };\n})];\n\nexports.default = function (Component) {\n    var implPropTypes = props[Component.displayName + 'PropTypes'];\n    var implDefaultProps = props[Component.displayName + 'DefaultProps'];\n\n    Component.propTypes = implPropTypes;\n\n    switch (Component.displayName) {\n        case 'TreeMap':\n        case 'TreeMapPlaceholders':\n            return _compose2.default.apply(undefined, [(0, _defaultProps2.default)(implDefaultProps)].concat(commonEnhancers, svgEnhancers, [(0, _hocs.withMotion)(), _pure2.default]))(Component);\n\n        case 'TreeMapHtml':\n            return _compose2.default.apply(undefined, [(0, _defaultProps2.default)(implDefaultProps)].concat(commonEnhancers, [(0, _hocs.withMotion)(), _pure2.default]))(Component);\n\n        case 'TreeMapCanvas':\n            return _compose2.default.apply(undefined, [(0, _defaultProps2.default)(implDefaultProps)].concat(commonEnhancers, [_pure2.default]))(Component);\n    }\n\n    return Component;\n};"},"hash":"7615b19cf64d7aacab1332ed1eabe2b9"}