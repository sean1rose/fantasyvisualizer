{"dependencies":[{"name":"recompose/compose","loc":{"line":5,"column":23}},{"name":"recompose/defaultProps","loc":{"line":9,"column":28}},{"name":"recompose/withState","loc":{"line":13,"column":25}},{"name":"recompose/withPropsOnChange","loc":{"line":17,"column":33}},{"name":"recompose/pure","loc":{"line":21,"column":20}},{"name":"../../../lib/colors","loc":{"line":25,"column":22}},{"name":"../../../lib/propertiesConverters","loc":{"line":27,"column":36}},{"name":"../../../hocs","loc":{"line":29,"column":20}},{"name":"./props","loc":{"line":31,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _defaultProps = require('recompose/defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _withState = require('recompose/withState');\n\nvar _withState2 = _interopRequireDefault(_withState);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _colors = require('../../../lib/colors');\n\nvar _propertiesConverters = require('../../../lib/propertiesConverters');\n\nvar _hocs = require('../../../hocs');\n\nvar _props = require('./props');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (Component) {\n    return (0, _compose2.default)((0, _defaultProps2.default)(_props.SankeyDefaultProps), (0, _withState2.default)('currentNode', 'setCurrentNode', null), (0, _withState2.default)('currentLink', 'setCurrentLink', null), (0, _hocs.withColors)(), (0, _hocs.withColors)({\n        colorByKey: 'linkColorBy',\n        destKey: 'getLinkColor',\n        defaultColorBy: 'source.id'\n    }), (0, _hocs.withTheme)(), (0, _hocs.withDimensions)(), (0, _hocs.withMotion)(), (0, _withPropsOnChange2.default)(['nodeBorderColor'], function (_ref) {\n        var nodeBorderColor = _ref.nodeBorderColor;\n        return {\n            getNodeBorderColor: (0, _colors.getInheritedColorGenerator)(nodeBorderColor)\n        };\n    }), (0, _withPropsOnChange2.default)(['labelTextColor'], function (_ref2) {\n        var labelTextColor = _ref2.labelTextColor;\n        return {\n            getLabelTextColor: (0, _colors.getInheritedColorGenerator)(labelTextColor)\n        };\n    }), (0, _withPropsOnChange2.default)(['label', 'labelFormat'], function (_ref3) {\n        var label = _ref3.label,\n            labelFormat = _ref3.labelFormat;\n        return {\n            getLabel: (0, _propertiesConverters.getLabelGenerator)(label, labelFormat)\n        };\n    }), _pure2.default)(Component);\n}; /*\n    * This file is part of the nivo project.\n    *\n    * Copyright 2016-present, RaphaÃ«l Benitte.\n    *\n    * For the full copyright and license information, please view the LICENSE\n    * file that was distributed with this source code.\n    */"},"hash":"d9018f9376110308ac509a4f33250321"}