{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":5,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":9,"column":31}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":13,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":17,"column":25}},{"name":"react","loc":{"line":21,"column":21}},{"name":"prop-types","loc":{"line":25,"column":25}},{"name":"classnames","loc":{"line":29,"column":27}},{"name":"rc-editor-core","loc":{"line":33,"column":28}},{"name":"draft-js","loc":{"line":35,"column":23}},{"name":"../utils/createMention","loc":{"line":37,"column":29}},{"name":"../utils/exportContent","loc":{"line":41,"column":29}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _rcEditorCore = require('rc-editor-core');\n\nvar _draftJs = require('draft-js');\n\nvar _createMention = require('../utils/createMention');\n\nvar _createMention2 = _interopRequireDefault(_createMention);\n\nvar _exportContent = require('../utils/exportContent');\n\nvar _exportContent2 = _interopRequireDefault(_exportContent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar Mention = function (_React$Component) {\n  (0, _inherits3['default'])(Mention, _React$Component);\n\n  function Mention(props) {\n    (0, _classCallCheck3['default'])(this, Mention);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));\n\n    _this.onEditorChange = function (editorState) {\n      var selection = editorState.getSelection();\n      _this._decorator = editorState.getDecorator();\n      var content = editorState.getCurrentContent();\n\n      if (_this.props.onChange) {\n        _this.setState({\n          selection: selection\n        }, function () {\n          _this.props.onChange(content, (0, _exportContent2['default'])(content));\n        });\n      } else {\n        _this.setState({\n          editorState: editorState,\n          selection: selection\n        });\n      }\n    };\n\n    _this.onFocus = function (e) {\n      if (_this.props.onFocus) {\n        _this.props.onFocus(e);\n      }\n    };\n\n    _this.onBlur = function (e) {\n      if (_this.props.onBlur) {\n        _this.props.onBlur(e);\n      }\n    };\n\n    _this.reset = function () {\n      /*eslint-disable*/\n      _this._editor.Reset();\n      /*eslint-enable*/\n    };\n\n    _this.mention = (0, _createMention2['default'])({\n      prefix: _this.getPrefix(props),\n      tag: props.tag,\n      mode: props.mode,\n      mentionStyle: props.mentionStyle\n    });\n\n    _this.Suggestions = _this.mention.Suggestions;\n    _this.plugins = [_this.mention];\n\n    _this.state = {\n      suggestions: props.suggestions,\n      value: props.value && _draftJs.EditorState.createWithContent(props.value, new _draftJs.CompositeDecorator(_this.mention.decorators)),\n      selection: _draftJs.SelectionState.createEmpty()\n    };\n\n    if (typeof props.defaultValue === 'string') {\n      // eslint-disable-next-line\n      console.warn('The property `defaultValue` now allow `EditorState` only, see http://react-component.github.io/editor-mention/examples/defaultValue.html ');\n    }\n    if (props.value !== undefined) {\n      _this.controlledMode = true;\n    }\n    return _this;\n  }\n\n  Mention.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var suggestions = nextProps.suggestions;\n    var selection = this.state.selection;\n\n    var value = nextProps.value;\n    if (value && selection) {\n      value = _draftJs.EditorState.acceptSelection(_draftJs.EditorState.createWithContent(value, this._decorator), selection);\n    }\n    this.setState({\n      suggestions: suggestions,\n      value: value\n    });\n  };\n\n  Mention.prototype.getPrefix = function getPrefix() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n    return Array.isArray(props.prefix) ? props.prefix : [props.prefix];\n  };\n\n  Mention.prototype.render = function render() {\n    var _classnames,\n        _this2 = this;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        style = _props.style,\n        tag = _props.tag,\n        multiLines = _props.multiLines,\n        suggestionStyle = _props.suggestionStyle,\n        placeholder = _props.placeholder,\n        defaultValue = _props.defaultValue,\n        className = _props.className,\n        notFoundContent = _props.notFoundContent,\n        getSuggestionContainer = _props.getSuggestionContainer,\n        readOnly = _props.readOnly,\n        disabled = _props.disabled,\n        placement = _props.placement;\n    var suggestions = this.state.suggestions;\n    var Suggestions = this.Suggestions;\n\n    var editorClass = (0, _classnames3['default'])(className, (_classnames = {}, _classnames[prefixCls + '-wrapper'] = true, _classnames.readonly = readOnly, _classnames.disabled = disabled, _classnames.multilines = multiLines, _classnames));\n    var editorProps = this.controlledMode ? { value: this.state.value } : {};\n    var defaultValueState = defaultValue && _draftJs.EditorState.createWithContent(typeof defaultValue === 'string' ? _draftJs.ContentState.createFromText(defaultValue) : defaultValue, this._decorator);\n    return _react2['default'].createElement(\n      'div',\n      { className: editorClass, style: style, ref: function ref(wrapper) {\n          return _this2._wrapper = wrapper;\n        } },\n      _react2['default'].createElement(\n        _rcEditorCore.EditorCore,\n        (0, _extends3['default'])({\n          ref: function ref(editor) {\n            return _this2._editor = editor;\n          },\n          prefixCls: prefixCls,\n          style: style,\n          multiLines: multiLines,\n          plugins: this.plugins,\n          defaultValue: defaultValueState,\n          placeholder: placeholder,\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onChange: this.onEditorChange\n        }, editorProps, {\n          readOnly: readOnly || disabled\n        }),\n        _react2['default'].createElement(Suggestions, {\n          mode: tag ? 'immutable' : 'mutable',\n          prefix: this.getPrefix(),\n          prefixCls: prefixCls,\n          style: suggestionStyle,\n          placement: placement,\n          notFoundContent: notFoundContent,\n          suggestions: suggestions,\n          getSuggestionContainer: getSuggestionContainer ? function () {\n            return getSuggestionContainer(_this2._wrapper);\n          } : null,\n          onSearchChange: this.props.onSearchChange,\n          onSelect: this.props.onSelect,\n          noRedup: this.props.noRedup\n        })\n      )\n    );\n  };\n\n  return Mention;\n}(_react2['default'].Component);\n\nMention.propTypes = {\n  value: _propTypes2['default'].object,\n  suggestions: _propTypes2['default'].array,\n  prefix: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].arrayOf(_propTypes2['default'].string)]),\n  prefixCls: _propTypes2['default'].string,\n  tag: _propTypes2['default'].element,\n  style: _propTypes2['default'].object,\n  className: _propTypes2['default'].string,\n  onSearchChange: _propTypes2['default'].func,\n  onChange: _propTypes2['default'].func,\n  mode: _propTypes2['default'].string,\n  multiLines: _propTypes2['default'].bool,\n  suggestionStyle: _propTypes2['default'].object,\n  placeholder: _propTypes2['default'].string,\n  defaultValue: _propTypes2['default'].object,\n  notFoundContent: _propTypes2['default'].any,\n  position: _propTypes2['default'].string,\n  onFocus: _propTypes2['default'].func,\n  onBlur: _propTypes2['default'].func,\n  onSelect: _propTypes2['default'].func,\n  getSuggestionContainer: _propTypes2['default'].func,\n  noRedup: _propTypes2['default'].bool,\n  mentionStyle: _propTypes2['default'].object,\n  placement: _propTypes2['default'].string\n};\nMention.controlledMode = false;\n\n\nMention.defaultProps = {\n  prefixCls: 'rc-editor-mention',\n  prefix: '@',\n  mode: 'immutable',\n  suggestions: [],\n  multiLines: false,\n  className: '',\n  suggestionStyle: {},\n  notFoundContent: '无法找到',\n  position: 'absolute',\n  placement: 'bottom', // top, bottom\n  mentionStyle: {}\n};\n\nexports['default'] = Mention;\nmodule.exports = exports['default'];"},"hash":"9917d052933f1589baa07517f405721b"}