{"dependencies":[{"name":"recompose/compose","loc":{"line":5,"column":23}},{"name":"recompose/defaultProps","loc":{"line":9,"column":28}},{"name":"recompose/withState","loc":{"line":13,"column":25}},{"name":"recompose/withPropsOnChange","loc":{"line":17,"column":33}},{"name":"recompose/pure","loc":{"line":21,"column":20}},{"name":"d3-shape","loc":{"line":25,"column":23}},{"name":"d3-chord","loc":{"line":27,"column":23}},{"name":"../../../lib/colors","loc":{"line":29,"column":22}},{"name":"../../../lib/propertiesConverters","loc":{"line":31,"column":36}},{"name":"../../../hocs","loc":{"line":33,"column":20}},{"name":"./props","loc":{"line":35,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _defaultProps = require('recompose/defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _withState = require('recompose/withState');\n\nvar _withState2 = _interopRequireDefault(_withState);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _d3Shape = require('d3-shape');\n\nvar _d3Chord = require('d3-chord');\n\nvar _colors = require('../../../lib/colors');\n\nvar _propertiesConverters = require('../../../lib/propertiesConverters');\n\nvar _hocs = require('../../../hocs');\n\nvar _props = require('./props');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (Component) {\n    return (0, _compose2.default)((0, _defaultProps2.default)(_props.ChordDefaultProps), (0, _withState2.default)('currentArc', 'setCurrentArc', null), (0, _withState2.default)('currentRibbon', 'setCurrentRibbon', null), (0, _hocs.withMotion)(), (0, _hocs.withTheme)(), (0, _hocs.withDimensions)(), (0, _withPropsOnChange2.default)(['label'], function (_ref) {\n        var label = _ref.label;\n        return {\n            getLabel: (0, _propertiesConverters.getLabelGenerator)(label)\n        };\n    }), (0, _withPropsOnChange2.default)(['padAngle'], function (_ref2) {\n        var padAngle = _ref2.padAngle;\n        return {\n            chord: (0, _d3Chord.chord)().padAngle(padAngle)\n        };\n    }), (0, _withPropsOnChange2.default)(['labelTextColor'], function (_ref3) {\n        var labelTextColor = _ref3.labelTextColor;\n        return {\n            getLabelTextColor: (0, _colors.getInheritedColorGenerator)(labelTextColor, 'labels.textColor')\n        };\n    }), (0, _withPropsOnChange2.default)(['colors', 'keys'], function (_ref4) {\n        var colors = _ref4.colors,\n            keys = _ref4.keys;\n\n        var color = (0, _colors.getColorRange)(colors);\n\n        return {\n            colorById: keys.reduce(function (acc, key) {\n                acc[key] = color(key);\n                return acc;\n            }, {})\n        };\n    }), (0, _withPropsOnChange2.default)(['width', 'height', 'innerRadiusRatio', 'innerRadiusOffset'], function (_ref5) {\n        var width = _ref5.width,\n            height = _ref5.height,\n            innerRadiusRatio = _ref5.innerRadiusRatio,\n            innerRadiusOffset = _ref5.innerRadiusOffset;\n\n        var radius = Math.min(width, height) / 2;\n        var innerRadius = radius * innerRadiusRatio;\n        var ribbonRadius = radius * (innerRadiusRatio - innerRadiusOffset);\n\n        var arcGenerator = (0, _d3Shape.arc)().outerRadius(radius).innerRadius(innerRadius);\n        var ribbonGenerator = (0, _d3Chord.ribbon)().radius(ribbonRadius);\n\n        return { radius: radius, innerRadius: innerRadius, arcGenerator: arcGenerator, ribbonGenerator: ribbonGenerator };\n    }), (0, _withPropsOnChange2.default)(['arcOpacity', 'ribbonOpacity'], function (_ref6) {\n        var arcOpacity = _ref6.arcOpacity,\n            ribbonOpacity = _ref6.ribbonOpacity;\n        return {\n            getArcOpacity: function getArcOpacity() {\n                return arcOpacity;\n            },\n            getRibbonOpacity: function getRibbonOpacity() {\n                return ribbonOpacity;\n            }\n        };\n    }), (0, _withPropsOnChange2.default)(['isInteractive', 'currentArc', 'arcHoverOpacity', 'arcHoverOthersOpacity', 'currentRibbon', 'ribbonHoverOpacity', 'ribbonHoverOthersOpacity'], function (_ref7) {\n        var isInteractive = _ref7.isInteractive,\n            currentArc = _ref7.currentArc,\n            arcHoverOpacity = _ref7.arcHoverOpacity,\n            arcHoverOthersOpacity = _ref7.arcHoverOthersOpacity,\n            currentRibbon = _ref7.currentRibbon,\n            ribbonHoverOpacity = _ref7.ribbonHoverOpacity,\n            ribbonHoverOthersOpacity = _ref7.ribbonHoverOthersOpacity;\n\n        if (!isInteractive || !currentArc && !currentRibbon) return null;\n\n        var getArcOpacity = void 0;\n        var getRibbonOpacity = void 0;\n        if (isInteractive) {\n            if (currentArc) {\n                getArcOpacity = function getArcOpacity(arc) {\n                    if (arc.id === currentArc.id) return arcHoverOpacity;\n                    return arcHoverOthersOpacity;\n                };\n                getRibbonOpacity = function getRibbonOpacity(ribbon) {\n                    if (ribbon.source.id === currentArc.id || ribbon.target.id === currentArc.id) return ribbonHoverOpacity;\n                    return ribbonHoverOthersOpacity;\n                };\n            } else if (currentRibbon) {\n                getArcOpacity = function getArcOpacity(arc) {\n                    if (arc.id === currentRibbon.source.id || arc.id === currentRibbon.target.id) return arcHoverOpacity;\n                    return arcHoverOthersOpacity;\n                };\n                getRibbonOpacity = function getRibbonOpacity(ribbon) {\n                    if (ribbon.source.id === currentRibbon.source.id && ribbon.target.id === currentRibbon.target.id) return ribbonHoverOpacity;\n                    return ribbonHoverOthersOpacity;\n                };\n            }\n        }\n\n        return { getArcOpacity: getArcOpacity, getRibbonOpacity: getRibbonOpacity };\n    }), (0, _withPropsOnChange2.default)(['chord', 'colorById', 'matrix', 'keys'], function (_ref8) {\n        var chord = _ref8.chord,\n            colorById = _ref8.colorById,\n            matrix = _ref8.matrix,\n            keys = _ref8.keys;\n\n        var ribbons = chord(matrix);\n        ribbons.forEach(function (ribbon) {\n            ribbon.source.id = keys[ribbon.source.index];\n            ribbon.source.color = colorById[ribbon.source.id];\n            ribbon.target.id = keys[ribbon.target.index];\n            ribbon.target.color = colorById[ribbon.target.id];\n            var ribbonKeys = [ribbon.source.id, ribbon.target.id];\n            ribbonKeys.sort();\n            ribbon.key = ribbonKeys.sort().join('.');\n        });\n\n        var arcs = ribbons.groups.map(function (arc) {\n            arc.key = arc.id = keys[arc.index];\n            arc.color = colorById[arc.id];\n            return arc;\n        });\n\n        return { ribbons: ribbons, arcs: arcs };\n    }), (0, _withPropsOnChange2.default)(['arcBorderColor'], function (_ref9) {\n        var arcBorderColor = _ref9.arcBorderColor;\n        return {\n            getArcBorderColor: (0, _colors.getInheritedColorGenerator)(arcBorderColor)\n        };\n    }), (0, _withPropsOnChange2.default)(['ribbonBorderColor'], function (_ref10) {\n        var ribbonBorderColor = _ref10.ribbonBorderColor;\n        return {\n            getRibbonBorderColor: (0, _colors.getInheritedColorGenerator)(ribbonBorderColor)\n        };\n    }), _pure2.default)(Component);\n}; /*\n    * This file is part of the nivo project.\n    *\n    * Copyright 2016-present, RaphaÃ«l Benitte.\n    *\n    * For the full copyright and license information, please view the LICENSE\n    * file that was distributed with this source code.\n    */"},"hash":"c330c2c1d928200bd159a70cc1a289e2"}