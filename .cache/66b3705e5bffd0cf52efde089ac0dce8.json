{"dependencies":[{"name":"prop-types","loc":{"line":6,"column":25}},{"name":"./strategies","loc":{"line":10,"column":26}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.SelectPropTypes = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _strategies = require('./strategies');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction nonEmptyStringType(props, propsName) {\n  var value = props[propsName];\n  if (typeof value !== 'string' || !value) {\n    return new Error(); // Just a flag, so don't need message.\n  }\n}\n\nfunction valueType(props, propName, componentName) {\n  var labelInValueShape = _propTypes2['default'].shape({\n    value: nonEmptyStringType,\n    label: _propTypes2['default'].node\n  });\n  if (props.labelInValue) {\n    var validate = _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(labelInValueShape), labelInValueShape]);\n    var error = validate.apply(undefined, arguments);\n    if (error) {\n      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`, ' + ('when `labelInValue` is `true`, `' + propName + '` should in ') + 'shape of `{ value: string, label?: string }`.');\n    }\n  } else if (props.treeCheckable && props.treeCheckStrictly) {\n    var _validate = _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(labelInValueShape), labelInValueShape]);\n    var _error = _validate.apply(undefined, arguments);\n    if (_error) {\n      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`, ' + 'when `treeCheckable` and `treeCheckStrictly` are `true`, ' + ('`' + propName + '` should in shape of `{ value: string, label?: string }`.'));\n    }\n  } else if (props.multiple && props[propName] === '') {\n    return new Error('Invalid prop `' + propName + '` of type `string` supplied to `' + componentName + '`, ' + 'expected `array` when `multiple` is `true`.');\n  } else {\n    var _validate2 = _propTypes2['default'].oneOfType([_propTypes2['default'].arrayOf(_propTypes2['default'].string), _propTypes2['default'].string]);\n    return _validate2.apply(undefined, arguments);\n  }\n}\n\nvar SelectPropTypes = exports.SelectPropTypes = {\n  className: _propTypes2['default'].string,\n  prefixCls: _propTypes2['default'].string,\n  multiple: _propTypes2['default'].bool,\n  filterTreeNode: _propTypes2['default'].any,\n  showSearch: _propTypes2['default'].bool,\n  disabled: _propTypes2['default'].bool,\n  showArrow: _propTypes2['default'].bool,\n  allowClear: _propTypes2['default'].bool,\n  defaultOpen: _propTypes2['default'].bool,\n  open: _propTypes2['default'].bool,\n  transitionName: _propTypes2['default'].string,\n  animation: _propTypes2['default'].string,\n  choiceTransitionName: _propTypes2['default'].string,\n  onClick: _propTypes2['default'].func,\n  onChange: _propTypes2['default'].func,\n  onSelect: _propTypes2['default'].func,\n  onDeselect: _propTypes2['default'].func,\n  onSearch: _propTypes2['default'].func,\n  searchPlaceholder: _propTypes2['default'].string,\n  placeholder: _propTypes2['default'].any,\n  inputValue: _propTypes2['default'].any,\n  value: valueType,\n  defaultValue: valueType,\n  label: _propTypes2['default'].node,\n  defaultLabel: _propTypes2['default'].any,\n  labelInValue: _propTypes2['default'].bool,\n  dropdownStyle: _propTypes2['default'].object,\n  drodownPopupAlign: _propTypes2['default'].object,\n  onDropdownVisibleChange: _propTypes2['default'].func,\n  maxTagTextLength: _propTypes2['default'].number,\n  showCheckedStrategy: _propTypes2['default'].oneOf([_strategies.SHOW_ALL, _strategies.SHOW_PARENT, _strategies.SHOW_CHILD]),\n  treeCheckStrictly: _propTypes2['default'].bool,\n  treeIcon: _propTypes2['default'].bool,\n  treeLine: _propTypes2['default'].bool,\n  treeDefaultExpandAll: _propTypes2['default'].bool,\n  treeCheckable: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),\n  treeNodeLabelProp: _propTypes2['default'].string,\n  treeNodeFilterProp: _propTypes2['default'].string,\n  treeData: _propTypes2['default'].array,\n  treeDataSimpleMode: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].object]),\n  loadData: _propTypes2['default'].func\n};"},"hash":"019b274bf70445087ce256d9bea47f9a"}