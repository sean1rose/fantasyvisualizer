{"dependencies":[{"name":"react","loc":{"line":15,"column":21}},{"name":"prop-types","loc":{"line":19,"column":25}},{"name":"recompose/pure","loc":{"line":23,"column":20}},{"name":"react-motion","loc":{"line":27,"column":27}},{"name":"../../../lib/colors","loc":{"line":29,"column":22}},{"name":"../../../props","loc":{"line":31,"column":21}},{"name":"./SankeyNodesItem","loc":{"line":33,"column":31}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*\n                                                                                                                                                                                                                                                                   * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                   * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                   */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _reactMotion = require('react-motion');\n\nvar _colors = require('../../../lib/colors');\n\nvar _props = require('../../../props');\n\nvar _SankeyNodesItem = require('./SankeyNodesItem');\n\nvar _SankeyNodesItem2 = _interopRequireDefault(_SankeyNodesItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SankeyNodes = function SankeyNodes(_ref) {\n    var nodes = _ref.nodes,\n        nodeOpacity = _ref.nodeOpacity,\n        nodeHoverOpacity = _ref.nodeHoverOpacity,\n        nodeHoverOthersOpacity = _ref.nodeHoverOthersOpacity,\n        nodeBorderWidth = _ref.nodeBorderWidth,\n        getNodeBorderColor = _ref.getNodeBorderColor,\n        animate = _ref.animate,\n        motionDamping = _ref.motionDamping,\n        motionStiffness = _ref.motionStiffness,\n        showTooltip = _ref.showTooltip,\n        hideTooltip = _ref.hideTooltip,\n        setCurrentNode = _ref.setCurrentNode,\n        currentNode = _ref.currentNode,\n        currentLink = _ref.currentLink,\n        isCurrentNode = _ref.isCurrentNode,\n        onClick = _ref.onClick,\n        tooltip = _ref.tooltip,\n        theme = _ref.theme;\n\n    var getOpacity = function getOpacity(node) {\n        if (!currentNode && !currentLink) return nodeOpacity;\n        if (isCurrentNode(node)) return nodeHoverOpacity;\n        return nodeHoverOthersOpacity;\n    };\n\n    if (!animate) {\n        return _react2.default.createElement(\n            'g',\n            null,\n            nodes.map(function (node) {\n                return _react2.default.createElement(_SankeyNodesItem2.default, {\n                    key: node.id,\n                    node: node,\n                    x: node.x,\n                    y: node.y,\n                    width: node.width,\n                    height: node.height,\n                    color: node.color,\n                    opacity: getOpacity(node),\n                    borderWidth: nodeBorderWidth,\n                    borderColor: getNodeBorderColor(node),\n                    showTooltip: showTooltip,\n                    hideTooltip: hideTooltip,\n                    setCurrent: setCurrentNode,\n                    onClick: onClick,\n                    tooltip: tooltip,\n                    theme: theme\n                });\n            })\n        );\n    }\n\n    var springProps = {\n        damping: motionDamping,\n        stiffness: motionStiffness\n    };\n\n    return _react2.default.createElement(\n        _reactMotion.TransitionMotion,\n        {\n            styles: nodes.map(function (node) {\n                return {\n                    key: node.id,\n                    data: node,\n                    style: _extends({\n                        x: (0, _reactMotion.spring)(node.x, springProps),\n                        y: (0, _reactMotion.spring)(node.y, springProps),\n                        width: (0, _reactMotion.spring)(node.width, springProps),\n                        height: (0, _reactMotion.spring)(node.height, springProps),\n                        opacity: (0, _reactMotion.spring)(getOpacity(node), springProps)\n                    }, (0, _colors.colorMotionSpring)(node.color, springProps))\n                };\n            })\n        },\n        function (interpolatedStyles) {\n            return _react2.default.createElement(\n                'g',\n                null,\n                interpolatedStyles.map(function (_ref2) {\n                    var key = _ref2.key,\n                        style = _ref2.style,\n                        node = _ref2.data;\n\n                    var color = (0, _colors.getInterpolatedColor)(style);\n\n                    return _react2.default.createElement(_SankeyNodesItem2.default, {\n                        key: key,\n                        node: node,\n                        x: style.x,\n                        y: style.y,\n                        width: Math.max(style.width, 0),\n                        height: Math.max(style.height, 0),\n                        color: color,\n                        opacity: style.opacity,\n                        borderWidth: nodeBorderWidth,\n                        borderColor: getNodeBorderColor(_extends({}, node, { color: color })),\n                        showTooltip: showTooltip,\n                        hideTooltip: hideTooltip,\n                        setCurrent: setCurrentNode,\n                        onClick: onClick,\n                        tooltip: tooltip,\n                        theme: theme\n                    });\n                })\n            );\n        }\n    );\n};\n\nSankeyNodes.propTypes = _extends({\n    nodes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n        id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,\n        x: _propTypes2.default.number.isRequired,\n        y: _propTypes2.default.number.isRequired,\n        width: _propTypes2.default.number.isRequired,\n        height: _propTypes2.default.number.isRequired,\n        color: _propTypes2.default.string.isRequired\n    })).isRequired,\n\n    nodePaddingX: _propTypes2.default.number.isRequired,\n    nodeOpacity: _propTypes2.default.number.isRequired,\n    nodeHoverOpacity: _propTypes2.default.number.isRequired,\n    nodeHoverOthersOpacity: _propTypes2.default.number.isRequired,\n    nodeBorderWidth: _propTypes2.default.number.isRequired,\n    getNodeBorderColor: _propTypes2.default.func.isRequired,\n\n    theme: _propTypes2.default.object.isRequired,\n    tooltip: _propTypes2.default.func\n\n}, _props.motionPropTypes, {\n\n    // interactivity\n    showTooltip: _propTypes2.default.func.isRequired,\n    hideTooltip: _propTypes2.default.func.isRequired,\n    setCurrentNode: _propTypes2.default.func.isRequired,\n    currentNode: _propTypes2.default.object,\n    currentLink: _propTypes2.default.object,\n    isCurrentNode: _propTypes2.default.func.isRequired,\n    onClick: _propTypes2.default.func.isRequired\n});\n\nexports.default = (0, _pure2.default)(SankeyNodes);"},"hash":"ca8a9f5a9d569615fc72111df335deea"}