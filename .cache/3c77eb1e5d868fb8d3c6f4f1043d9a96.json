{"dependencies":[{"name":"react","loc":{"line":7,"column":21}},{"name":"react-motion","loc":{"line":11,"column":27}},{"name":"d3-interpolate","loc":{"line":13,"column":29}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactMotion = require('react-motion');\n\nvar _d3Interpolate = require('d3-interpolate');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of the nivo project.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016-present, RaphaÃ«l Benitte.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For the full copyright and license information, please view the LICENSE\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * file that was distributed with this source code.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n// credit to Tanner Linsey from this issue on react motion repository:\n// https://github.com/chenglou/react-motion/issues/153\n\nvar enhancedSpring = function enhancedSpring(value, config) {\n    if (typeof value !== 'number') {\n        return {\n            value: value,\n            config: config,\n            interpolator: config && config.interpolator ? config.interpolator : _d3Interpolate.interpolate\n        };\n    }\n    return (0, _reactMotion.spring)(value, config);\n};\n\nvar SmartMotion = function (_PureComponent) {\n    _inherits(SmartMotion, _PureComponent);\n\n    function SmartMotion() {\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, SmartMotion);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.oldValues = {}, _this.newInters = {}, _this.currentStepValues = {}, _this.stepValues = {}, _this.stepInterpolators = {}, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    SmartMotion.prototype.render = function render() {\n        var _this2 = this;\n\n        var _props = this.props,\n            style = _props.style,\n            children = _props.children,\n            rest = _objectWithoutProperties(_props, ['style', 'children']);\n\n        var resolvedStyle = style(enhancedSpring);\n\n        for (var key in resolvedStyle) {\n            if (\n            // If key is a non-numeric interpolation\n            resolvedStyle[key] && resolvedStyle[key].interpolator) {\n                // Make sure the steps start at 0\n                this.currentStepValues[key] = this.currentStepValues[key] || 0;\n                if (\n                // And the value has changed\n                typeof this.newInters[key] === 'undefined' || resolvedStyle[key].value !== this.newInters[key].value) {\n                    // Save the new value\n                    this.newInters[key] = resolvedStyle[key];\n\n                    // Increment the stepInterValue for this key by 1\n                    this.stepValues[key] = this.currentStepValues[key] + 1;\n\n                    // Set up the new interpolator\n                    this.stepInterpolators[key] = this.newInters[key].interpolator(this.oldValues[key], this.newInters[key].value);\n                }\n                // Return the spring with the destination stepValue and spring config\n                resolvedStyle[key] = (0, _reactMotion.spring)(this.stepValues[key], this.newInters[key].config);\n                // console.log(resolvedStyle[key])\n            }\n        }\n\n        return _react2.default.createElement(\n            _reactMotion.Motion,\n            _extends({}, rest, { style: resolvedStyle }),\n            function (values) {\n                var newValues = {};\n                for (var _key2 in values) {\n                    if (_this2.stepValues[_key2]) {\n                        // Save the currentStepValue\n                        _this2.currentStepValues[_key2] = values[_key2];\n                        // Figure the percentage\n                        var percentage = _this2.currentStepValues[_key2] - _this2.stepValues[_key2] + 1;\n                        // Save the current value and replace the value in the interpolated object\n                        _this2.oldValues[_key2] = newValues[_key2] = _this2.stepInterpolators[_key2](percentage);\n                    }\n                }\n                return children(_extends({}, values, newValues));\n            }\n        );\n    };\n\n    return SmartMotion;\n}(_react.PureComponent);\n\nexports.default = SmartMotion;"},"hash":"55227ffa1c5212c4d3a30b9187897f05"}