{"dependencies":[{"name":"lodash/isEqual","loc":{"line":7,"column":24}},{"name":"lodash/isPlainObject","loc":{"line":11,"column":30}},{"name":"lodash/isFunction","loc":{"line":15,"column":27}},{"name":"lodash/isNil","loc":{"line":19,"column":22}},{"name":"react","loc":{"line":32,"column":21}},{"name":"prop-types","loc":{"line":36,"column":25}},{"name":"react-smooth","loc":{"line":40,"column":27}},{"name":"classnames","loc":{"line":44,"column":26}},{"name":"../util/PureRender","loc":{"line":48,"column":26}},{"name":"../container/Layer","loc":{"line":52,"column":21}},{"name":"../shape/Sector","loc":{"line":56,"column":22}},{"name":"../shape/Curve","loc":{"line":60,"column":21}},{"name":"../component/Text","loc":{"line":64,"column":20}},{"name":"../component/Label","loc":{"line":68,"column":21}},{"name":"../component/LabelList","loc":{"line":72,"column":25}},{"name":"../component/Cell","loc":{"line":76,"column":20}},{"name":"../util/ReactUtils","loc":{"line":80,"column":26}},{"name":"../util/PolarUtils","loc":{"line":82,"column":26}},{"name":"../util/DataUtils","loc":{"line":84,"column":25}},{"name":"../util/ChartUtils","loc":{"line":86,"column":26}},{"name":"../util/LogUtils","loc":{"line":88,"column":24}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _isPlainObject2 = require('lodash/isPlainObject');\n\nvar _isPlainObject3 = _interopRequireDefault(_isPlainObject2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class2, _temp2; /**\n                              * @fileOverview Render sectors of a pie\n                              */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSmooth = require('react-smooth');\n\nvar _reactSmooth2 = _interopRequireDefault(_reactSmooth);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _PureRender = require('../util/PureRender');\n\nvar _PureRender2 = _interopRequireDefault(_PureRender);\n\nvar _Layer = require('../container/Layer');\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nvar _Sector = require('../shape/Sector');\n\nvar _Sector2 = _interopRequireDefault(_Sector);\n\nvar _Curve = require('../shape/Curve');\n\nvar _Curve2 = _interopRequireDefault(_Curve);\n\nvar _Text = require('../component/Text');\n\nvar _Text2 = _interopRequireDefault(_Text);\n\nvar _Label = require('../component/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _LabelList = require('../component/LabelList');\n\nvar _LabelList2 = _interopRequireDefault(_LabelList);\n\nvar _Cell = require('../component/Cell');\n\nvar _Cell2 = _interopRequireDefault(_Cell);\n\nvar _ReactUtils = require('../util/ReactUtils');\n\nvar _PolarUtils = require('../util/PolarUtils');\n\nvar _DataUtils = require('../util/DataUtils');\n\nvar _ChartUtils = require('../util/ChartUtils');\n\nvar _LogUtils = require('../util/LogUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Pie = (0, _PureRender2.default)(_class = (_temp2 = _class2 = function (_Component) {\n  _inherits(Pie, _Component);\n\n  function Pie() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Pie);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Pie.__proto__ || Object.getPrototypeOf(Pie)).call.apply(_ref, [this].concat(args))), _this), _this.state = { isAnimationFinished: false, isAnimationStarted: false }, _this.id = (0, _DataUtils.uniqueId)('recharts-pie-'), _this.cachePrevData = function (sectors) {\n      _this.setState({ prevSectors: sectors });\n    }, _this.handleAnimationEnd = function () {\n      _this.setState({\n        isAnimationFinished: true\n      });\n    }, _this.handleAnimationStart = function () {\n      _this.setState({\n        isAnimationStarted: true\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Pie, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          animationId = _props.animationId,\n          sectors = _props.sectors;\n\n\n      if (nextProps.isAnimationActive !== this.props.isAnimationActive) {\n        this.cachePrevData([]);\n      } else if (nextProps.animationId !== animationId) {\n        this.cachePrevData(sectors);\n      }\n    }\n  }, {\n    key: 'getTextAnchor',\n    value: function getTextAnchor(x, cx) {\n      if (x > cx) {\n        return 'start';\n      } else if (x < cx) {\n        return 'end';\n      }\n\n      return 'middle';\n    }\n  }, {\n    key: 'isActiveIndex',\n    value: function isActiveIndex(i) {\n      var activeIndex = this.props.activeIndex;\n\n\n      if (Array.isArray(activeIndex)) {\n        return activeIndex.indexOf(i) !== -1;\n      }\n\n      return i === activeIndex;\n    }\n  }, {\n    key: 'renderLabelLineItem',\n    value: function renderLabelLineItem(option, props) {\n      if (_react2.default.isValidElement(option)) {\n        return _react2.default.cloneElement(option, props);\n      } else if ((0, _isFunction3.default)(option)) {\n        return option(props);\n      }\n\n      return _react2.default.createElement(_Curve2.default, _extends({}, props, { type: 'linear', className: 'recharts-pie-label-line' }));\n    }\n  }, {\n    key: 'renderLabelItem',\n    value: function renderLabelItem(option, props, value) {\n      if (_react2.default.isValidElement(option)) {\n        return _react2.default.cloneElement(option, props);\n      }\n      var label = value;\n      if ((0, _isFunction3.default)(option)) {\n        label = option(props);\n        if (_react2.default.isValidElement(label)) {\n          return label;\n        }\n      }\n\n      return _react2.default.createElement(\n        _Text2.default,\n        _extends({}, props, {\n          alignmentBaseline: 'middle',\n          className: 'recharts-pie-label-text'\n        }),\n        label\n      );\n    }\n  }, {\n    key: 'renderLabels',\n    value: function renderLabels(sectors) {\n      var _this2 = this;\n\n      var isAnimationActive = this.props.isAnimationActive;\n\n\n      if (isAnimationActive && !this.state.isAnimationFinished) {\n        return null;\n      }\n      var _props2 = this.props,\n          label = _props2.label,\n          labelLine = _props2.labelLine,\n          dataKey = _props2.dataKey,\n          valueKey = _props2.valueKey;\n\n      var pieProps = (0, _ReactUtils.getPresentationAttributes)(this.props);\n      var customLabelProps = (0, _ReactUtils.getPresentationAttributes)(label);\n      var customLabelLineProps = (0, _ReactUtils.getPresentationAttributes)(labelLine);\n      var offsetRadius = label && label.offsetRadius || 20;\n\n      var labels = sectors.map(function (entry, i) {\n        var midAngle = (entry.startAngle + entry.endAngle) / 2;\n        var endPoint = (0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius + offsetRadius, midAngle);\n        var labelProps = _extends({}, pieProps, entry, {\n          stroke: 'none'\n        }, customLabelProps, {\n          index: i,\n          textAnchor: _this2.getTextAnchor(endPoint.x, entry.cx)\n        }, endPoint);\n        var lineProps = _extends({}, pieProps, entry, {\n          fill: 'none',\n          stroke: entry.fill\n        }, customLabelLineProps, {\n          index: i,\n          points: [(0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius, midAngle), endPoint]\n        });\n        var realDataKey = dataKey;\n        // TODO: compatible to lower versions\n        if ((0, _isNil3.default)(dataKey) && (0, _isNil3.default)(valueKey)) {\n          realDataKey = 'value';\n        } else if ((0, _isNil3.default)(dataKey)) {\n          realDataKey = valueKey;\n        }\n\n        return _react2.default.createElement(\n          _Layer2.default,\n          { key: 'label-' + i },\n          labelLine && _this2.renderLabelLineItem(labelLine, lineProps),\n          _this2.renderLabelItem(label, labelProps, (0, _ChartUtils.getValueByDataKey)(entry, realDataKey))\n        );\n      });\n\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: 'recharts-pie-labels' },\n        labels\n      );\n    }\n  }, {\n    key: 'renderSectorItem',\n    value: function renderSectorItem(option, props) {\n      if (_react2.default.isValidElement(option)) {\n        return _react2.default.cloneElement(option, props);\n      } else if ((0, _isFunction3.default)(option)) {\n        return option(props);\n      } else if ((0, _isPlainObject3.default)(option)) {\n        return _react2.default.createElement(_Sector2.default, _extends({}, props, option));\n      }\n\n      return _react2.default.createElement(_Sector2.default, props);\n    }\n  }, {\n    key: 'renderSectorsStatically',\n    value: function renderSectorsStatically(sectors) {\n      var _this3 = this;\n\n      var activeShape = this.props.activeShape;\n\n\n      return sectors.map(function (entry, i) {\n        return _react2.default.createElement(\n          _Layer2.default,\n          _extends({\n            className: 'recharts-pie-sector'\n          }, (0, _ReactUtils.filterEventsOfChild)(_this3.props, entry, i), {\n            key: 'sector-' + i\n          }),\n          _this3.renderSectorItem(_this3.isActiveIndex(i) ? activeShape : null, entry)\n        );\n      });\n    }\n  }, {\n    key: 'renderSectorsWithAnimation',\n    value: function renderSectorsWithAnimation() {\n      var _this4 = this;\n\n      var _props3 = this.props,\n          sectors = _props3.sectors,\n          isAnimationActive = _props3.isAnimationActive,\n          animationBegin = _props3.animationBegin,\n          animationDuration = _props3.animationDuration,\n          animationEasing = _props3.animationEasing,\n          animationId = _props3.animationId;\n      var prevSectors = this.state.prevSectors;\n\n\n      return _react2.default.createElement(\n        _reactSmooth2.default,\n        {\n          begin: animationBegin,\n          duration: animationDuration,\n          isActive: isAnimationActive,\n          easing: animationEasing,\n          from: { t: 0 },\n          to: { t: 1 },\n          key: 'pie-' + animationId,\n          onAnimationEnd: this.handleAnimationEnd\n        },\n        function (_ref2) {\n          var t = _ref2.t;\n\n          var stepData = [];\n          var first = sectors && sectors[0];\n          var curAngle = first.startAngle;\n\n          sectors.forEach(function (entry, index) {\n            var prev = prevSectors && prevSectors[index];\n            var paddingAngle = index > 0 ? entry.paddingAngle : 0;\n\n            if (prev) {\n              var angleIp = (0, _DataUtils.interpolateNumber)(prev.endAngle - prev.startAngle, entry.endAngle - entry.startAngle);\n              var latest = _extends({}, entry, {\n                startAngle: curAngle + paddingAngle,\n                endAngle: curAngle + angleIp(t) + paddingAngle\n              });\n\n              stepData.push(latest);\n              curAngle = latest.endAngle;\n            } else {\n              var endAngle = entry.endAngle,\n                  startAngle = entry.startAngle;\n\n              var interpolatorAngle = (0, _DataUtils.interpolateNumber)(0, endAngle - startAngle);\n              var deltaAngle = interpolatorAngle(t);\n              var _latest = _extends({}, entry, {\n                startAngle: curAngle + paddingAngle,\n                endAngle: curAngle + deltaAngle + paddingAngle\n              });\n\n              stepData.push(_latest);\n              curAngle = _latest.endAngle;\n            }\n          });\n\n          return _react2.default.createElement(\n            _Layer2.default,\n            null,\n            _this4.renderSectorsStatically(stepData)\n          );\n        }\n      );\n    }\n  }, {\n    key: 'renderSectors',\n    value: function renderSectors() {\n      var _props4 = this.props,\n          sectors = _props4.sectors,\n          isAnimationActive = _props4.isAnimationActive;\n      var prevSectors = this.state.prevSectors;\n\n\n      if (isAnimationActive && sectors && sectors.length && (!prevSectors || !(0, _isEqual3.default)(prevSectors, sectors))) {\n        return this.renderSectorsWithAnimation();\n      }\n      return this.renderSectorsStatically(sectors);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          hide = _props5.hide,\n          sectors = _props5.sectors,\n          className = _props5.className,\n          label = _props5.label,\n          cx = _props5.cx,\n          cy = _props5.cy,\n          innerRadius = _props5.innerRadius,\n          outerRadius = _props5.outerRadius,\n          isAnimationActive = _props5.isAnimationActive,\n          id = _props5.id;\n\n\n      if (hide || !sectors || !sectors.length || !(0, _DataUtils.isNumber)(cx) || !(0, _DataUtils.isNumber)(cy) || !(0, _DataUtils.isNumber)(innerRadius) || !(0, _DataUtils.isNumber)(outerRadius)) {\n        return null;\n      }\n\n      var isAnimationFinished = this.state.isAnimationFinished;\n\n      var layerClass = (0, _classnames2.default)('recharts-pie', className);\n\n      return _react2.default.createElement(\n        _Layer2.default,\n        { className: layerClass },\n        _react2.default.createElement(\n          'g',\n          { clipPath: 'url(#' + ((0, _isNil3.default)(id) ? this.id : id) + ')' },\n          this.renderSectors()\n        ),\n        label && this.renderLabels(sectors),\n        _Label2.default.renderCallByParent(this.props, null, false),\n        (!isAnimationActive || isAnimationFinished) && _LabelList2.default.renderCallByParent(this.props, sectors, false)\n      );\n    }\n  }]);\n\n  return Pie;\n}(_react.Component), _class2.displayName = 'Pie', _class2.propTypes = _extends({}, _ReactUtils.PRESENTATION_ATTRIBUTES, _ReactUtils.EVENT_ATTRIBUTES, {\n  className: _propTypes2.default.string,\n  animationId: _propTypes2.default.number,\n  cx: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  cy: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  startAngle: _propTypes2.default.number,\n  endAngle: _propTypes2.default.number,\n  paddingAngle: _propTypes2.default.number,\n  innerRadius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  outerRadius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  cornerRadius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  dataKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  nameKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]),\n  valueKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func]),\n  data: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  minAngle: _propTypes2.default.number,\n  legendType: _propTypes2.default.oneOf(_ReactUtils.LEGEND_TYPES),\n  maxRadius: _propTypes2.default.number,\n\n  sectors: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  hide: _propTypes2.default.bool,\n  labelLine: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.element, _propTypes2.default.bool]),\n  label: _propTypes2.default.oneOfType([_propTypes2.default.shape({\n    offsetRadius: _propTypes2.default.number\n  }), _propTypes2.default.func, _propTypes2.default.element, _propTypes2.default.bool]),\n  activeShape: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.element]),\n  activeIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n\n  isAnimationActive: _propTypes2.default.bool,\n  animationBegin: _propTypes2.default.number,\n  animationDuration: _propTypes2.default.number,\n  animationEasing: _propTypes2.default.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'spring', 'linear']),\n  id: _propTypes2.default.string\n}), _class2.defaultProps = {\n  stroke: '#fff',\n  fill: '#808080',\n  legendType: 'rect',\n  // The abscissa of pole\n  cx: '50%',\n  // The ordinate of pole\n  cy: '50%',\n  // The start angle of first sector\n  startAngle: 0,\n  // The direction of drawing sectors\n  endAngle: 360,\n  // The inner radius of sectors\n  innerRadius: 0,\n  // The outer radius of sectors\n  outerRadius: '80%',\n  paddingAngle: 0,\n  labelLine: true,\n  hide: false,\n  minAngle: 0,\n  isAnimationActive: !(0, _ReactUtils.isSsr)(),\n  animationBegin: 400,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  nameKey: 'name'\n}, _class2.parseDeltaAngle = function (_ref3) {\n  var startAngle = _ref3.startAngle,\n      endAngle = _ref3.endAngle;\n\n  var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);\n  var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n\n  return sign * deltaAngle;\n}, _class2.getRealPieData = function (item) {\n  var _item$props = item.props,\n      data = _item$props.data,\n      children = _item$props.children;\n\n  var presentationProps = (0, _ReactUtils.getPresentationAttributes)(item.props);\n  var cells = (0, _ReactUtils.findAllByType)(children, _Cell2.default);\n\n  if (data && data.length) {\n    return data.map(function (entry, index) {\n      return _extends({\n        payload: entry\n      }, presentationProps, entry, cells && cells[index] && cells[index].props);\n    });\n  }\n\n  if (cells && cells.length) {\n    return cells.map(function (cell) {\n      return _extends({}, presentationProps, cell.props);\n    });\n  }\n\n  return [];\n}, _class2.parseCoordinateOfPie = function (item, offset) {\n  var top = offset.top,\n      left = offset.left,\n      width = offset.width,\n      height = offset.height;\n\n  var maxPieRadius = (0, _PolarUtils.getMaxRadius)(width, height);\n  var cx = left + (0, _DataUtils.getPercentValue)(item.props.cx, width, width / 2);\n  var cy = top + (0, _DataUtils.getPercentValue)(item.props.cy, height, height / 2);\n  var innerRadius = (0, _DataUtils.getPercentValue)(item.props.innerRadius, maxPieRadius, 0);\n  var outerRadius = (0, _DataUtils.getPercentValue)(item.props.outerRadius, maxPieRadius, maxPieRadius * 0.8);\n  var maxRadius = item.props.maxRadius || Math.sqrt(width * width + height * height) / 2;\n\n  return { cx: cx, cy: cy, innerRadius: innerRadius, outerRadius: outerRadius, maxRadius: maxRadius };\n}, _class2.getComposedData = function (_ref4) {\n  var item = _ref4.item,\n      offset = _ref4.offset,\n      onItemMouseLeave = _ref4.onItemMouseLeave,\n      onItemMouseEnter = _ref4.onItemMouseEnter;\n\n  var pieData = Pie.getRealPieData(item);\n  if (!pieData || !pieData.length) {\n    return [];\n  }\n\n  var _item$props2 = item.props,\n      cornerRadius = _item$props2.cornerRadius,\n      startAngle = _item$props2.startAngle,\n      endAngle = _item$props2.endAngle,\n      paddingAngle = _item$props2.paddingAngle,\n      dataKey = _item$props2.dataKey,\n      nameKey = _item$props2.nameKey,\n      valueKey = _item$props2.valueKey;\n\n  var minAngle = Math.abs(item.props.minAngle);\n  var coordinate = Pie.parseCoordinateOfPie(item, offset);\n  var len = pieData.length;\n  var deltaAngle = Pie.parseDeltaAngle({ startAngle: startAngle, endAngle: endAngle });\n  var absDeltaAngle = Math.abs(deltaAngle);\n  var totalPadingAngle = (absDeltaAngle >= 360 ? len : len - 1) * paddingAngle;\n  var realTotalAngle = absDeltaAngle - len * minAngle - totalPadingAngle;\n  var realDataKey = dataKey;\n\n  if ((0, _isNil3.default)(dataKey) && (0, _isNil3.default)(valueKey)) {\n    (0, _LogUtils.warn)(false, 'Use \"dataKey\" to specify the value of pie,\\n      the props \"valueKey\" will be deprecated in 1.1.0');\n    realDataKey = 'value';\n  } else if ((0, _isNil3.default)(dataKey)) {\n    (0, _LogUtils.warn)(false, 'Use \"dataKey\" to specify the value of pie,\\n      the props \"valueKey\" will be deprecated in 1.1.0');\n    realDataKey = valueKey;\n  }\n\n  var sum = pieData.reduce(function (result, entry) {\n    var val = (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0);\n    return result + ((0, _DataUtils.isNumber)(val) ? val : 0);\n  }, 0);\n  var sectors = void 0;\n\n  if (sum > 0) {\n    var prev = void 0;\n    sectors = pieData.map(function (entry, i) {\n      var val = (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0);\n      var name = (0, _ChartUtils.getValueByDataKey)(entry, nameKey, i);\n      var percent = ((0, _DataUtils.isNumber)(val) ? val : 0) / sum;\n      var tempStartAngle = void 0;\n\n      if (i) {\n        tempStartAngle = prev.endAngle + (0, _DataUtils.mathSign)(deltaAngle) * paddingAngle;\n      } else {\n        tempStartAngle = startAngle;\n      }\n\n      var tempEndAngle = tempStartAngle + (0, _DataUtils.mathSign)(deltaAngle) * (minAngle + percent * realTotalAngle);\n      var midAngle = (tempStartAngle + tempEndAngle) / 2;\n      var middleRadius = (coordinate.innerRadius + coordinate.outerRadius) / 2;\n      var tooltipPayload = [{ name: name, value: val, payload: entry }];\n      var tooltipPosition = (0, _PolarUtils.polarToCartesian)(coordinate.cx, coordinate.cy, middleRadius, midAngle);\n\n      prev = _extends({\n        percent: percent, cornerRadius: cornerRadius, name: name, tooltipPayload: tooltipPayload, midAngle: midAngle, middleRadius: middleRadius, tooltipPosition: tooltipPosition\n      }, entry, coordinate, {\n        value: (0, _ChartUtils.getValueByDataKey)(entry, realDataKey),\n        startAngle: tempStartAngle,\n        endAngle: tempEndAngle,\n        payload: entry,\n        paddingAngle: (0, _DataUtils.mathSign)(deltaAngle) * paddingAngle\n      });\n\n      return prev;\n    });\n  }\n\n  return _extends({}, coordinate, {\n    sectors: sectors,\n    data: pieData,\n    onMouseLeave: onItemMouseLeave,\n    onMouseEnter: onItemMouseEnter\n  });\n}, _temp2)) || _class;\n\nexports.default = Pie;"},"hash":"20a903cb354d8a0303d7a7a788968498"}