{"dependencies":[{"name":"lodash/isEqual","loc":{"line":5,"column":24}},{"name":"lodash/max","loc":{"line":9,"column":20}},{"name":"lodash/min","loc":{"line":13,"column":20}},{"name":"recompose/compose","loc":{"line":17,"column":23}},{"name":"recompose/defaultProps","loc":{"line":21,"column":28}},{"name":"recompose/withPropsOnChange","loc":{"line":25,"column":33}},{"name":"recompose/withState","loc":{"line":29,"column":25}},{"name":"recompose/pure","loc":{"line":33,"column":20}},{"name":"d3-scale","loc":{"line":37,"column":23}},{"name":"../../../hocs","loc":{"line":39,"column":20}},{"name":"../../../lib/colors","loc":{"line":41,"column":22}},{"name":"../../../lib/propertiesConverters","loc":{"line":43,"column":36}},{"name":"./props","loc":{"line":45,"column":21}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _max2 = require('lodash/max');\n\nvar _max3 = _interopRequireDefault(_max2);\n\nvar _min2 = require('lodash/min');\n\nvar _min3 = _interopRequireDefault(_min2);\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _defaultProps = require('recompose/defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _withPropsOnChange = require('recompose/withPropsOnChange');\n\nvar _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);\n\nvar _withState = require('recompose/withState');\n\nvar _withState2 = _interopRequireDefault(_withState);\n\nvar _pure = require('recompose/pure');\n\nvar _pure2 = _interopRequireDefault(_pure);\n\nvar _d3Scale = require('d3-scale');\n\nvar _hocs = require('../../../hocs');\n\nvar _colors = require('../../../lib/colors');\n\nvar _propertiesConverters = require('../../../lib/propertiesConverters');\n\nvar _props = require('./props');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nvar computeX = function computeX(column, cellWidth, padding) {\n    return column * cellWidth + cellWidth * 0.5 + padding * column + padding;\n};\nvar computeY = function computeY(row, cellHeight, padding) {\n    return row * cellHeight + cellHeight * 0.5 + padding * row + padding;\n};\n\nexports.default = function (Component) {\n    return (0, _compose2.default)((0, _defaultProps2.default)(_props.HeatMapDefaultProps), (0, _withState2.default)('currentNode', 'setCurrentNode', null), (0, _hocs.withTheme)(), (0, _hocs.withDimensions)(), (0, _hocs.withMotion)(), (0, _withPropsOnChange2.default)(['colors'], function (_ref) {\n        var colors = _ref.colors;\n        return {\n            colorScale: (0, _colors.guessQuantizeColorScale)(colors)\n        };\n    }), (0, _withPropsOnChange2.default)(['indexBy'], function (_ref2) {\n        var indexBy = _ref2.indexBy;\n        return {\n            getIndex: (0, _propertiesConverters.getAccessorFor)(indexBy)\n        };\n    }), (0, _withPropsOnChange2.default)(['data', 'keys', 'width', 'height', 'padding', 'forceSquare'], function (_ref3) {\n        var data = _ref3.data,\n            keys = _ref3.keys,\n            width = _ref3.width,\n            height = _ref3.height,\n            padding = _ref3.padding,\n            forceSquare = _ref3.forceSquare;\n\n        var columns = keys.length;\n        var rows = data.length;\n\n        var cellWidth = Math.max((width - padding * (columns + 1)) / columns, 0);\n        var cellHeight = Math.max((height - padding * (rows + 1)) / rows, 0);\n\n        var offsetX = 0;\n        var offsetY = 0;\n        if (forceSquare === true) {\n            var cellSize = Math.min(cellWidth, cellHeight);\n            cellWidth = cellSize;\n            cellHeight = cellSize;\n\n            offsetX = (width - ((cellWidth + padding) * columns + padding)) / 2;\n            offsetY = (height - ((cellHeight + padding) * rows + padding)) / 2;\n        }\n\n        return {\n            cellWidth: cellWidth,\n            cellHeight: cellHeight,\n            offsetX: offsetX,\n            offsetY: offsetY\n        };\n    }), (0, _withPropsOnChange2.default)(['data', 'getIndex'], function (_ref4) {\n        var data = _ref4.data,\n            getIndex = _ref4.getIndex;\n        return {\n            indices: data.map(getIndex)\n        };\n    }), (0, _withPropsOnChange2.default)(function (prev, next) {\n        return prev.keys !== next.keys || prev.cellWidth !== next.cellWidth || prev.cellHeight !== next.cellHeight || prev.padding !== next.padding || !(0, _isEqual3.default)(prev.indices, next.indices);\n    }, function (_ref5) {\n        var indices = _ref5.indices,\n            keys = _ref5.keys,\n            cellWidth = _ref5.cellWidth,\n            cellHeight = _ref5.cellHeight,\n            padding = _ref5.padding;\n        return {\n            xScale: (0, _d3Scale.scaleOrdinal)(keys.map(function (key, i) {\n                return computeX(i, cellWidth, padding);\n            })).domain(keys),\n            yScale: (0, _d3Scale.scaleOrdinal)(indices.map(function (d, i) {\n                return computeY(i, cellHeight, padding);\n            })).domain(indices)\n        };\n    }), (0, _withPropsOnChange2.default)(['data', 'keys', 'minValue', 'maxValue'], function (_ref6) {\n        var data = _ref6.data,\n            keys = _ref6.keys,\n            _minValue = _ref6.minValue,\n            _maxValue = _ref6.maxValue;\n\n        var minValue = _minValue;\n        var maxValue = _maxValue;\n        if (minValue === 'auto' || maxValue === 'auto') {\n            var allValues = data.reduce(function (acc, row) {\n                return acc.concat(keys.map(function (key) {\n                    return row[key];\n                }));\n            }, []);\n\n            if (minValue === 'auto') minValue = (0, _min3.default)(allValues);\n            if (maxValue === 'auto') maxValue = (0, _max3.default)(allValues);\n        }\n\n        return {\n            minValue: Math.min(minValue, maxValue),\n            maxValue: Math.max(maxValue, minValue)\n        };\n    }), (0, _withPropsOnChange2.default)(['colorScale', 'minValue', 'maxValue'], function (_ref7) {\n        var colorScale = _ref7.colorScale,\n            minValue = _ref7.minValue,\n            maxValue = _ref7.maxValue;\n        return {\n            colorScale: colorScale.domain([minValue, maxValue])\n        };\n    }), (0, _withPropsOnChange2.default)(['sizeVariation', 'minValue', 'maxValue'], function (_ref8) {\n        var sizeVariation = _ref8.sizeVariation,\n            minValue = _ref8.minValue,\n            maxValue = _ref8.maxValue;\n\n        var sizeScale = void 0;\n        if (sizeVariation > 0) {\n            sizeScale = (0, _d3Scale.scaleLinear)().range([1 - sizeVariation, 1]).domain([minValue, maxValue]);\n        }\n\n        return { sizeScale: sizeScale };\n    }), (0, _withPropsOnChange2.default)(['cellBorderColor'], function (_ref9) {\n        var cellBorderColor = _ref9.cellBorderColor;\n        return {\n            getCellBorderColor: (0, _colors.getInheritedColorGenerator)(cellBorderColor)\n        };\n    }), (0, _withPropsOnChange2.default)(['labelTextColor'], function (_ref10) {\n        var labelTextColor = _ref10.labelTextColor;\n        return {\n            getLabelTextColor: (0, _colors.getInheritedColorGenerator)(labelTextColor)\n        };\n    }), _pure2.default)(Component);\n};"},"hash":"51fcbaf9c786f973d0f5e20947f55dc6"}